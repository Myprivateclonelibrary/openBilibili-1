// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service.proto

package v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// 历史记录请求参数定义
type ShowEntryReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowEntryReq) Reset()         { *m = ShowEntryReq{} }
func (m *ShowEntryReq) String() string { return proto.CompactTextString(m) }
func (*ShowEntryReq) ProtoMessage()    {}
func (*ShowEntryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{0}
}
func (m *ShowEntryReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShowEntryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShowEntryReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ShowEntryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowEntryReq.Merge(dst, src)
}
func (m *ShowEntryReq) XXX_Size() int {
	return m.Size()
}
func (m *ShowEntryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowEntryReq.DiscardUnknown(m)
}

var xxx_messageInfo_ShowEntryReq proto.InternalMessageInfo

// 获取接口返回响应
type ShowEntryResp struct {
	// 是否有房管
	HasAdmin             int64    `protobuf:"varint,1,opt,name=has_admin,json=hasAdmin,proto3" json:"has_admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowEntryResp) Reset()         { *m = ShowEntryResp{} }
func (m *ShowEntryResp) String() string { return proto.CompactTextString(m) }
func (*ShowEntryResp) ProtoMessage()    {}
func (*ShowEntryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{1}
}
func (m *ShowEntryResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShowEntryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShowEntryResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ShowEntryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowEntryResp.Merge(dst, src)
}
func (m *ShowEntryResp) XXX_Size() int {
	return m.Size()
}
func (m *ShowEntryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowEntryResp.DiscardUnknown(m)
}

var xxx_messageInfo_ShowEntryResp proto.InternalMessageInfo

func (m *ShowEntryResp) GetHasAdmin() int64 {
	if m != nil {
		return m.HasAdmin
	}
	return 0
}

type RoomAdminSearchForAdminReq struct {
	KeyWord              string   `protobuf:"bytes,1,opt,name=key_word,json=keyWord,proto3" json:"key_word,omitempty" form:"key_word" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminSearchForAdminReq) Reset()         { *m = RoomAdminSearchForAdminReq{} }
func (m *RoomAdminSearchForAdminReq) String() string { return proto.CompactTextString(m) }
func (*RoomAdminSearchForAdminReq) ProtoMessage()    {}
func (*RoomAdminSearchForAdminReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{2}
}
func (m *RoomAdminSearchForAdminReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminSearchForAdminReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminSearchForAdminReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminSearchForAdminReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminSearchForAdminReq.Merge(dst, src)
}
func (m *RoomAdminSearchForAdminReq) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminSearchForAdminReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminSearchForAdminReq.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminSearchForAdminReq proto.InternalMessageInfo

func (m *RoomAdminSearchForAdminReq) GetKeyWord() string {
	if m != nil {
		return m.KeyWord
	}
	return ""
}

type RoomAdminSearchForAdminResp struct {
	Data                 []*RoomAdminSearchForAdminResp_Data `protobuf:"bytes,3,rep,name=data" json:"data"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *RoomAdminSearchForAdminResp) Reset()         { *m = RoomAdminSearchForAdminResp{} }
func (m *RoomAdminSearchForAdminResp) String() string { return proto.CompactTextString(m) }
func (*RoomAdminSearchForAdminResp) ProtoMessage()    {}
func (*RoomAdminSearchForAdminResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{3}
}
func (m *RoomAdminSearchForAdminResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminSearchForAdminResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminSearchForAdminResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminSearchForAdminResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminSearchForAdminResp.Merge(dst, src)
}
func (m *RoomAdminSearchForAdminResp) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminSearchForAdminResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminSearchForAdminResp.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminSearchForAdminResp proto.InternalMessageInfo

func (m *RoomAdminSearchForAdminResp) GetData() []*RoomAdminSearchForAdminResp_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type RoomAdminSearchForAdminResp_Data struct {
	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	// 是否房管
	IsAdmin int64 `protobuf:"varint,2,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin"`
	// 用户名
	Uname string `protobuf:"bytes,4,opt,name=uname,proto3" json:"uname"`
	// 用户头像
	Face string `protobuf:"bytes,5,opt,name=face,proto3" json:"face"`
	// 粉丝勋章名称
	MedalName string `protobuf:"bytes,6,opt,name=medal_name,json=medalName,proto3" json:"medal_name"`
	// 粉丝勋章等级
	Level                int64    `protobuf:"varint,7,opt,name=level,proto3" json:"level"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminSearchForAdminResp_Data) Reset()         { *m = RoomAdminSearchForAdminResp_Data{} }
func (m *RoomAdminSearchForAdminResp_Data) String() string { return proto.CompactTextString(m) }
func (*RoomAdminSearchForAdminResp_Data) ProtoMessage()    {}
func (*RoomAdminSearchForAdminResp_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{3, 0}
}
func (m *RoomAdminSearchForAdminResp_Data) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminSearchForAdminResp_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminSearchForAdminResp_Data.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminSearchForAdminResp_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminSearchForAdminResp_Data.Merge(dst, src)
}
func (m *RoomAdminSearchForAdminResp_Data) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminSearchForAdminResp_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminSearchForAdminResp_Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminSearchForAdminResp_Data proto.InternalMessageInfo

func (m *RoomAdminSearchForAdminResp_Data) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *RoomAdminSearchForAdminResp_Data) GetIsAdmin() int64 {
	if m != nil {
		return m.IsAdmin
	}
	return 0
}

func (m *RoomAdminSearchForAdminResp_Data) GetUname() string {
	if m != nil {
		return m.Uname
	}
	return ""
}

func (m *RoomAdminSearchForAdminResp_Data) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *RoomAdminSearchForAdminResp_Data) GetMedalName() string {
	if m != nil {
		return m.MedalName
	}
	return ""
}

func (m *RoomAdminSearchForAdminResp_Data) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

type RoomAdminResignRoomAdminReq struct {
	// 房间号
	Roomid               int64    `protobuf:"varint,1,opt,name=roomid,proto3" json:"roomid,omitempty" form:"roomid" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminResignRoomAdminReq) Reset()         { *m = RoomAdminResignRoomAdminReq{} }
func (m *RoomAdminResignRoomAdminReq) String() string { return proto.CompactTextString(m) }
func (*RoomAdminResignRoomAdminReq) ProtoMessage()    {}
func (*RoomAdminResignRoomAdminReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{4}
}
func (m *RoomAdminResignRoomAdminReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminResignRoomAdminReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminResignRoomAdminReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminResignRoomAdminReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminResignRoomAdminReq.Merge(dst, src)
}
func (m *RoomAdminResignRoomAdminReq) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminResignRoomAdminReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminResignRoomAdminReq.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminResignRoomAdminReq proto.InternalMessageInfo

func (m *RoomAdminResignRoomAdminReq) GetRoomid() int64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

type RoomAdminResignRoomAdminResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminResignRoomAdminResp) Reset()         { *m = RoomAdminResignRoomAdminResp{} }
func (m *RoomAdminResignRoomAdminResp) String() string { return proto.CompactTextString(m) }
func (*RoomAdminResignRoomAdminResp) ProtoMessage()    {}
func (*RoomAdminResignRoomAdminResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{5}
}
func (m *RoomAdminResignRoomAdminResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminResignRoomAdminResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminResignRoomAdminResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminResignRoomAdminResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminResignRoomAdminResp.Merge(dst, src)
}
func (m *RoomAdminResignRoomAdminResp) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminResignRoomAdminResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminResignRoomAdminResp.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminResignRoomAdminResp proto.InternalMessageInfo

type RoomAdminGetByUidReq struct {
	// 页数
	Page                 int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty" form:"page"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminGetByUidReq) Reset()         { *m = RoomAdminGetByUidReq{} }
func (m *RoomAdminGetByUidReq) String() string { return proto.CompactTextString(m) }
func (*RoomAdminGetByUidReq) ProtoMessage()    {}
func (*RoomAdminGetByUidReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{6}
}
func (m *RoomAdminGetByUidReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminGetByUidReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminGetByUidReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminGetByUidReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminGetByUidReq.Merge(dst, src)
}
func (m *RoomAdminGetByUidReq) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminGetByUidReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminGetByUidReq.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminGetByUidReq proto.InternalMessageInfo

func (m *RoomAdminGetByUidReq) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type RoomAdminGetByUidResp struct {
	//
	Page *RoomAdminGetByUidResp_Page `protobuf:"bytes,1,opt,name=page" json:"page,omitempty"`
	//
	Data                 []*RoomAdminGetByUidResp_Data `protobuf:"bytes,3,rep,name=data" json:"data"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *RoomAdminGetByUidResp) Reset()         { *m = RoomAdminGetByUidResp{} }
func (m *RoomAdminGetByUidResp) String() string { return proto.CompactTextString(m) }
func (*RoomAdminGetByUidResp) ProtoMessage()    {}
func (*RoomAdminGetByUidResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{7}
}
func (m *RoomAdminGetByUidResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminGetByUidResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminGetByUidResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminGetByUidResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminGetByUidResp.Merge(dst, src)
}
func (m *RoomAdminGetByUidResp) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminGetByUidResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminGetByUidResp.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminGetByUidResp proto.InternalMessageInfo

func (m *RoomAdminGetByUidResp) GetPage() *RoomAdminGetByUidResp_Page {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *RoomAdminGetByUidResp) GetData() []*RoomAdminGetByUidResp_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type RoomAdminGetByUidResp_Data struct {
	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	// 房间号
	Roomid int64 `protobuf:"varint,2,opt,name=roomid,proto3" json:"roomid"`
	// 主播的用户id
	AnchorId int64 `protobuf:"varint,3,opt,name=anchor_id,json=anchorId,proto3" json:"anchor_id"`
	// 主播用户名
	Uname string `protobuf:"bytes,4,opt,name=uname,proto3" json:"uname"`
	// 主播封面
	AnchorCover string `protobuf:"bytes,5,opt,name=anchor_cover,json=anchorCover,proto3" json:"anchor_cover"`
	// 上任时间
	Ctime                string   `protobuf:"bytes,6,opt,name=ctime,proto3" json:"ctime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminGetByUidResp_Data) Reset()         { *m = RoomAdminGetByUidResp_Data{} }
func (m *RoomAdminGetByUidResp_Data) String() string { return proto.CompactTextString(m) }
func (*RoomAdminGetByUidResp_Data) ProtoMessage()    {}
func (*RoomAdminGetByUidResp_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{7, 0}
}
func (m *RoomAdminGetByUidResp_Data) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminGetByUidResp_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminGetByUidResp_Data.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminGetByUidResp_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminGetByUidResp_Data.Merge(dst, src)
}
func (m *RoomAdminGetByUidResp_Data) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminGetByUidResp_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminGetByUidResp_Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminGetByUidResp_Data proto.InternalMessageInfo

func (m *RoomAdminGetByUidResp_Data) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *RoomAdminGetByUidResp_Data) GetRoomid() int64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

func (m *RoomAdminGetByUidResp_Data) GetAnchorId() int64 {
	if m != nil {
		return m.AnchorId
	}
	return 0
}

func (m *RoomAdminGetByUidResp_Data) GetUname() string {
	if m != nil {
		return m.Uname
	}
	return ""
}

func (m *RoomAdminGetByUidResp_Data) GetAnchorCover() string {
	if m != nil {
		return m.AnchorCover
	}
	return ""
}

func (m *RoomAdminGetByUidResp_Data) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

type RoomAdminGetByUidResp_Page struct {
	// 当前页码
	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// 每页大小
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// 总页数
	TotalPage int64 `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	// 总记录数
	TotalCount           int64    `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminGetByUidResp_Page) Reset()         { *m = RoomAdminGetByUidResp_Page{} }
func (m *RoomAdminGetByUidResp_Page) String() string { return proto.CompactTextString(m) }
func (*RoomAdminGetByUidResp_Page) ProtoMessage()    {}
func (*RoomAdminGetByUidResp_Page) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{7, 1}
}
func (m *RoomAdminGetByUidResp_Page) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminGetByUidResp_Page) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminGetByUidResp_Page.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminGetByUidResp_Page) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminGetByUidResp_Page.Merge(dst, src)
}
func (m *RoomAdminGetByUidResp_Page) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminGetByUidResp_Page) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminGetByUidResp_Page.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminGetByUidResp_Page proto.InternalMessageInfo

func (m *RoomAdminGetByUidResp_Page) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *RoomAdminGetByUidResp_Page) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *RoomAdminGetByUidResp_Page) GetTotalPage() int64 {
	if m != nil {
		return m.TotalPage
	}
	return 0
}

func (m *RoomAdminGetByUidResp_Page) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type RoomAdminGetByAnchorReq struct {
	// 页数
	Page                 int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty" form:"page"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminGetByAnchorReq) Reset()         { *m = RoomAdminGetByAnchorReq{} }
func (m *RoomAdminGetByAnchorReq) String() string { return proto.CompactTextString(m) }
func (*RoomAdminGetByAnchorReq) ProtoMessage()    {}
func (*RoomAdminGetByAnchorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{8}
}
func (m *RoomAdminGetByAnchorReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminGetByAnchorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminGetByAnchorReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminGetByAnchorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminGetByAnchorReq.Merge(dst, src)
}
func (m *RoomAdminGetByAnchorReq) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminGetByAnchorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminGetByAnchorReq.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminGetByAnchorReq proto.InternalMessageInfo

func (m *RoomAdminGetByAnchorReq) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type RoomAdminGetByAnchorResp struct {
	//
	Page *RoomAdminGetByAnchorResp_Page `protobuf:"bytes,1,opt,name=page" json:"page,omitempty"`
	//
	Data                 []*RoomAdminGetByAnchorResp_Data `protobuf:"bytes,3,rep,name=data" json:"data"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *RoomAdminGetByAnchorResp) Reset()         { *m = RoomAdminGetByAnchorResp{} }
func (m *RoomAdminGetByAnchorResp) String() string { return proto.CompactTextString(m) }
func (*RoomAdminGetByAnchorResp) ProtoMessage()    {}
func (*RoomAdminGetByAnchorResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{9}
}
func (m *RoomAdminGetByAnchorResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminGetByAnchorResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminGetByAnchorResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminGetByAnchorResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminGetByAnchorResp.Merge(dst, src)
}
func (m *RoomAdminGetByAnchorResp) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminGetByAnchorResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminGetByAnchorResp.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminGetByAnchorResp proto.InternalMessageInfo

func (m *RoomAdminGetByAnchorResp) GetPage() *RoomAdminGetByAnchorResp_Page {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *RoomAdminGetByAnchorResp) GetData() []*RoomAdminGetByAnchorResp_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type RoomAdminGetByAnchorResp_Data struct {
	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	// 用户名
	Uname string `protobuf:"bytes,4,opt,name=uname,proto3" json:"uname"`
	// 用户头像
	Face string `protobuf:"bytes,5,opt,name=face,proto3" json:"face"`
	// 上任时间
	Ctime string `protobuf:"bytes,6,opt,name=ctime,proto3" json:"ctime"`
	// 粉丝勋章名称
	MedalName string `protobuf:"bytes,8,opt,name=medal_name,json=medalName,proto3" json:"medal_name"`
	// 粉丝勋章等级
	Level                int64    `protobuf:"varint,9,opt,name=level,proto3" json:"level"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminGetByAnchorResp_Data) Reset()         { *m = RoomAdminGetByAnchorResp_Data{} }
func (m *RoomAdminGetByAnchorResp_Data) String() string { return proto.CompactTextString(m) }
func (*RoomAdminGetByAnchorResp_Data) ProtoMessage()    {}
func (*RoomAdminGetByAnchorResp_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{9, 0}
}
func (m *RoomAdminGetByAnchorResp_Data) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminGetByAnchorResp_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminGetByAnchorResp_Data.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminGetByAnchorResp_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminGetByAnchorResp_Data.Merge(dst, src)
}
func (m *RoomAdminGetByAnchorResp_Data) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminGetByAnchorResp_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminGetByAnchorResp_Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminGetByAnchorResp_Data proto.InternalMessageInfo

func (m *RoomAdminGetByAnchorResp_Data) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *RoomAdminGetByAnchorResp_Data) GetUname() string {
	if m != nil {
		return m.Uname
	}
	return ""
}

func (m *RoomAdminGetByAnchorResp_Data) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *RoomAdminGetByAnchorResp_Data) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *RoomAdminGetByAnchorResp_Data) GetMedalName() string {
	if m != nil {
		return m.MedalName
	}
	return ""
}

func (m *RoomAdminGetByAnchorResp_Data) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

type RoomAdminGetByAnchorResp_Page struct {
	// 当前页码
	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// 每页大小
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// 总页数
	TotalPage int64 `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	// 总记录数
	TotalCount           int64    `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminGetByAnchorResp_Page) Reset()         { *m = RoomAdminGetByAnchorResp_Page{} }
func (m *RoomAdminGetByAnchorResp_Page) String() string { return proto.CompactTextString(m) }
func (*RoomAdminGetByAnchorResp_Page) ProtoMessage()    {}
func (*RoomAdminGetByAnchorResp_Page) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{9, 1}
}
func (m *RoomAdminGetByAnchorResp_Page) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminGetByAnchorResp_Page) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminGetByAnchorResp_Page.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminGetByAnchorResp_Page) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminGetByAnchorResp_Page.Merge(dst, src)
}
func (m *RoomAdminGetByAnchorResp_Page) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminGetByAnchorResp_Page) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminGetByAnchorResp_Page.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminGetByAnchorResp_Page proto.InternalMessageInfo

func (m *RoomAdminGetByAnchorResp_Page) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *RoomAdminGetByAnchorResp_Page) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *RoomAdminGetByAnchorResp_Page) GetTotalPage() int64 {
	if m != nil {
		return m.TotalPage
	}
	return 0
}

func (m *RoomAdminGetByAnchorResp_Page) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type RoomAdminDismissAdminReq struct {
	// 房管的用户uid
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty" form:"uid" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminDismissAdminReq) Reset()         { *m = RoomAdminDismissAdminReq{} }
func (m *RoomAdminDismissAdminReq) String() string { return proto.CompactTextString(m) }
func (*RoomAdminDismissAdminReq) ProtoMessage()    {}
func (*RoomAdminDismissAdminReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{10}
}
func (m *RoomAdminDismissAdminReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminDismissAdminReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminDismissAdminReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminDismissAdminReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminDismissAdminReq.Merge(dst, src)
}
func (m *RoomAdminDismissAdminReq) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminDismissAdminReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminDismissAdminReq.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminDismissAdminReq proto.InternalMessageInfo

func (m *RoomAdminDismissAdminReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type RoomAdminDismissAdminResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminDismissAdminResp) Reset()         { *m = RoomAdminDismissAdminResp{} }
func (m *RoomAdminDismissAdminResp) String() string { return proto.CompactTextString(m) }
func (*RoomAdminDismissAdminResp) ProtoMessage()    {}
func (*RoomAdminDismissAdminResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{11}
}
func (m *RoomAdminDismissAdminResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminDismissAdminResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminDismissAdminResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminDismissAdminResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminDismissAdminResp.Merge(dst, src)
}
func (m *RoomAdminDismissAdminResp) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminDismissAdminResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminDismissAdminResp.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminDismissAdminResp proto.InternalMessageInfo

type RoomAdminAddReq struct {
	// 房管的uid
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty" form:"uid" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminAddReq) Reset()         { *m = RoomAdminAddReq{} }
func (m *RoomAdminAddReq) String() string { return proto.CompactTextString(m) }
func (*RoomAdminAddReq) ProtoMessage()    {}
func (*RoomAdminAddReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{12}
}
func (m *RoomAdminAddReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminAddReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminAddReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminAddReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminAddReq.Merge(dst, src)
}
func (m *RoomAdminAddReq) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminAddReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminAddReq.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminAddReq proto.InternalMessageInfo

func (m *RoomAdminAddReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type RoomAdminAddResp struct {
	// banner
	Userinfo *RoomAdminAddResp_UI `protobuf:"bytes,1,opt,name=userinfo" json:"userinfo"`
	// 房管的用户id
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid"`
	// 房间号
	Roomid int64 `protobuf:"varint,3,opt,name=roomid,proto3" json:"roomid"`
	// 创建时间　"2017-07-26 17:12:51"
	Ctime                string   `protobuf:"bytes,4,opt,name=ctime,proto3" json:"ctime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminAddResp) Reset()         { *m = RoomAdminAddResp{} }
func (m *RoomAdminAddResp) String() string { return proto.CompactTextString(m) }
func (*RoomAdminAddResp) ProtoMessage()    {}
func (*RoomAdminAddResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{13}
}
func (m *RoomAdminAddResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminAddResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminAddResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminAddResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminAddResp.Merge(dst, src)
}
func (m *RoomAdminAddResp) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminAddResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminAddResp.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminAddResp proto.InternalMessageInfo

func (m *RoomAdminAddResp) GetUserinfo() *RoomAdminAddResp_UI {
	if m != nil {
		return m.Userinfo
	}
	return nil
}

func (m *RoomAdminAddResp) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *RoomAdminAddResp) GetRoomid() int64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

func (m *RoomAdminAddResp) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

type RoomAdminAddResp_UI struct {
	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	// 用户名
	Uname                string   `protobuf:"bytes,2,opt,name=uname,proto3" json:"uname"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomAdminAddResp_UI) Reset()         { *m = RoomAdminAddResp_UI{} }
func (m *RoomAdminAddResp_UI) String() string { return proto.CompactTextString(m) }
func (*RoomAdminAddResp_UI) ProtoMessage()    {}
func (*RoomAdminAddResp_UI) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_2d622c51a64dcf7e, []int{13, 0}
}
func (m *RoomAdminAddResp_UI) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomAdminAddResp_UI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomAdminAddResp_UI.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomAdminAddResp_UI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomAdminAddResp_UI.Merge(dst, src)
}
func (m *RoomAdminAddResp_UI) XXX_Size() int {
	return m.Size()
}
func (m *RoomAdminAddResp_UI) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomAdminAddResp_UI.DiscardUnknown(m)
}

var xxx_messageInfo_RoomAdminAddResp_UI proto.InternalMessageInfo

func (m *RoomAdminAddResp_UI) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *RoomAdminAddResp_UI) GetUname() string {
	if m != nil {
		return m.Uname
	}
	return ""
}

func init() {
	proto.RegisterType((*ShowEntryReq)(nil), "live.appucenter.v1.ShowEntryReq")
	proto.RegisterType((*ShowEntryResp)(nil), "live.appucenter.v1.ShowEntryResp")
	proto.RegisterType((*RoomAdminSearchForAdminReq)(nil), "live.appucenter.v1.RoomAdminSearchForAdminReq")
	proto.RegisterType((*RoomAdminSearchForAdminResp)(nil), "live.appucenter.v1.RoomAdminSearchForAdminResp")
	proto.RegisterType((*RoomAdminSearchForAdminResp_Data)(nil), "live.appucenter.v1.RoomAdminSearchForAdminResp.Data")
	proto.RegisterType((*RoomAdminResignRoomAdminReq)(nil), "live.appucenter.v1.RoomAdminResignRoomAdminReq")
	proto.RegisterType((*RoomAdminResignRoomAdminResp)(nil), "live.appucenter.v1.RoomAdminResignRoomAdminResp")
	proto.RegisterType((*RoomAdminGetByUidReq)(nil), "live.appucenter.v1.RoomAdminGetByUidReq")
	proto.RegisterType((*RoomAdminGetByUidResp)(nil), "live.appucenter.v1.RoomAdminGetByUidResp")
	proto.RegisterType((*RoomAdminGetByUidResp_Data)(nil), "live.appucenter.v1.RoomAdminGetByUidResp.Data")
	proto.RegisterType((*RoomAdminGetByUidResp_Page)(nil), "live.appucenter.v1.RoomAdminGetByUidResp.Page")
	proto.RegisterType((*RoomAdminGetByAnchorReq)(nil), "live.appucenter.v1.RoomAdminGetByAnchorReq")
	proto.RegisterType((*RoomAdminGetByAnchorResp)(nil), "live.appucenter.v1.RoomAdminGetByAnchorResp")
	proto.RegisterType((*RoomAdminGetByAnchorResp_Data)(nil), "live.appucenter.v1.RoomAdminGetByAnchorResp.Data")
	proto.RegisterType((*RoomAdminGetByAnchorResp_Page)(nil), "live.appucenter.v1.RoomAdminGetByAnchorResp.Page")
	proto.RegisterType((*RoomAdminDismissAdminReq)(nil), "live.appucenter.v1.RoomAdminDismissAdminReq")
	proto.RegisterType((*RoomAdminDismissAdminResp)(nil), "live.appucenter.v1.RoomAdminDismissAdminResp")
	proto.RegisterType((*RoomAdminAddReq)(nil), "live.appucenter.v1.RoomAdminAddReq")
	proto.RegisterType((*RoomAdminAddResp)(nil), "live.appucenter.v1.RoomAdminAddResp")
	proto.RegisterType((*RoomAdminAddResp_UI)(nil), "live.appucenter.v1.RoomAdminAddResp.UI")
}
func (m *ShowEntryReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShowEntryReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShowEntryResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShowEntryResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.HasAdmin != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.HasAdmin))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminSearchForAdminReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminSearchForAdminReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.KeyWord) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.KeyWord)))
		i += copy(dAtA[i:], m.KeyWord)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminSearchForAdminResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminSearchForAdminResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, msg := range m.Data {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminSearchForAdminResp_Data) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminSearchForAdminResp_Data) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Uid != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Uid))
	}
	if m.IsAdmin != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintService(dAtA, i, uint64(m.IsAdmin))
	}
	if len(m.Uname) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.Uname)))
		i += copy(dAtA[i:], m.Uname)
	}
	if len(m.Face) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.Face)))
		i += copy(dAtA[i:], m.Face)
	}
	if len(m.MedalName) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.MedalName)))
		i += copy(dAtA[i:], m.MedalName)
	}
	if m.Level != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Level))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminResignRoomAdminReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminResignRoomAdminReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Roomid != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Roomid))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminResignRoomAdminResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminResignRoomAdminResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminGetByUidReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminGetByUidReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Page != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Page))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminGetByUidResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminGetByUidResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Page != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Page.Size()))
		n1, err := m.Page.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if len(m.Data) > 0 {
		for _, msg := range m.Data {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminGetByUidResp_Data) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminGetByUidResp_Data) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Uid != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Uid))
	}
	if m.Roomid != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Roomid))
	}
	if m.AnchorId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintService(dAtA, i, uint64(m.AnchorId))
	}
	if len(m.Uname) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.Uname)))
		i += copy(dAtA[i:], m.Uname)
	}
	if len(m.AnchorCover) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.AnchorCover)))
		i += copy(dAtA[i:], m.AnchorCover)
	}
	if len(m.Ctime) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.Ctime)))
		i += copy(dAtA[i:], m.Ctime)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminGetByUidResp_Page) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminGetByUidResp_Page) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Page != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Page))
	}
	if m.PageSize != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintService(dAtA, i, uint64(m.PageSize))
	}
	if m.TotalPage != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintService(dAtA, i, uint64(m.TotalPage))
	}
	if m.TotalCount != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintService(dAtA, i, uint64(m.TotalCount))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminGetByAnchorReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminGetByAnchorReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Page != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Page))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminGetByAnchorResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminGetByAnchorResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Page != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Page.Size()))
		n2, err := m.Page.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if len(m.Data) > 0 {
		for _, msg := range m.Data {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintService(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminGetByAnchorResp_Data) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminGetByAnchorResp_Data) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Uid != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Uid))
	}
	if len(m.Uname) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.Uname)))
		i += copy(dAtA[i:], m.Uname)
	}
	if len(m.Face) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.Face)))
		i += copy(dAtA[i:], m.Face)
	}
	if len(m.Ctime) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.Ctime)))
		i += copy(dAtA[i:], m.Ctime)
	}
	if len(m.MedalName) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.MedalName)))
		i += copy(dAtA[i:], m.MedalName)
	}
	if m.Level != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Level))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminGetByAnchorResp_Page) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminGetByAnchorResp_Page) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Page != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Page))
	}
	if m.PageSize != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintService(dAtA, i, uint64(m.PageSize))
	}
	if m.TotalPage != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintService(dAtA, i, uint64(m.TotalPage))
	}
	if m.TotalCount != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintService(dAtA, i, uint64(m.TotalCount))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminDismissAdminReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminDismissAdminReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Uid != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Uid))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminDismissAdminResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminDismissAdminResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminAddReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminAddReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Uid != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Uid))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminAddResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminAddResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Userinfo != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Userinfo.Size()))
		n3, err := m.Userinfo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.Uid != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Uid))
	}
	if m.Roomid != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Roomid))
	}
	if len(m.Ctime) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.Ctime)))
		i += copy(dAtA[i:], m.Ctime)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoomAdminAddResp_UI) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomAdminAddResp_UI) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Uid != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintService(dAtA, i, uint64(m.Uid))
	}
	if len(m.Uname) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintService(dAtA, i, uint64(len(m.Uname)))
		i += copy(dAtA[i:], m.Uname)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintService(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *ShowEntryReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShowEntryResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HasAdmin != 0 {
		n += 1 + sovService(uint64(m.HasAdmin))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminSearchForAdminReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.KeyWord)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminSearchForAdminResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminSearchForAdminResp_Data) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovService(uint64(m.Uid))
	}
	if m.IsAdmin != 0 {
		n += 1 + sovService(uint64(m.IsAdmin))
	}
	l = len(m.Uname)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.MedalName)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.Level != 0 {
		n += 1 + sovService(uint64(m.Level))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminResignRoomAdminReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Roomid != 0 {
		n += 1 + sovService(uint64(m.Roomid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminResignRoomAdminResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminGetByUidReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovService(uint64(m.Page))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminGetByUidResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != nil {
		l = m.Page.Size()
		n += 1 + l + sovService(uint64(l))
	}
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminGetByUidResp_Data) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovService(uint64(m.Uid))
	}
	if m.Roomid != 0 {
		n += 1 + sovService(uint64(m.Roomid))
	}
	if m.AnchorId != 0 {
		n += 1 + sovService(uint64(m.AnchorId))
	}
	l = len(m.Uname)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.AnchorCover)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Ctime)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminGetByUidResp_Page) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovService(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovService(uint64(m.PageSize))
	}
	if m.TotalPage != 0 {
		n += 1 + sovService(uint64(m.TotalPage))
	}
	if m.TotalCount != 0 {
		n += 1 + sovService(uint64(m.TotalCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminGetByAnchorReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovService(uint64(m.Page))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminGetByAnchorResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != nil {
		l = m.Page.Size()
		n += 1 + l + sovService(uint64(l))
	}
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminGetByAnchorResp_Data) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovService(uint64(m.Uid))
	}
	l = len(m.Uname)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Ctime)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.MedalName)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.Level != 0 {
		n += 1 + sovService(uint64(m.Level))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminGetByAnchorResp_Page) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovService(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovService(uint64(m.PageSize))
	}
	if m.TotalPage != 0 {
		n += 1 + sovService(uint64(m.TotalPage))
	}
	if m.TotalCount != 0 {
		n += 1 + sovService(uint64(m.TotalCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminDismissAdminReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovService(uint64(m.Uid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminDismissAdminResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminAddReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovService(uint64(m.Uid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminAddResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Userinfo != nil {
		l = m.Userinfo.Size()
		n += 1 + l + sovService(uint64(l))
	}
	if m.Uid != 0 {
		n += 1 + sovService(uint64(m.Uid))
	}
	if m.Roomid != 0 {
		n += 1 + sovService(uint64(m.Roomid))
	}
	l = len(m.Ctime)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomAdminAddResp_UI) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovService(uint64(m.Uid))
	}
	l = len(m.Uname)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovService(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozService(x uint64) (n int) {
	return sovService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ShowEntryReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShowEntryReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShowEntryReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShowEntryResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShowEntryResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShowEntryResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasAdmin", wireType)
			}
			m.HasAdmin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HasAdmin |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminSearchForAdminReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminSearchForAdminReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminSearchForAdminReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyWord", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KeyWord = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminSearchForAdminResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminSearchForAdminResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminSearchForAdminResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &RoomAdminSearchForAdminResp_Data{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminSearchForAdminResp_Data) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Data: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Data: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAdmin", wireType)
			}
			m.IsAdmin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsAdmin |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MedalName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MedalName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminResignRoomAdminReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminResignRoomAdminReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminResignRoomAdminReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roomid", wireType)
			}
			m.Roomid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Roomid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminResignRoomAdminResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminResignRoomAdminResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminResignRoomAdminResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminGetByUidReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminGetByUidReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminGetByUidReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminGetByUidResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminGetByUidResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminGetByUidResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Page == nil {
				m.Page = &RoomAdminGetByUidResp_Page{}
			}
			if err := m.Page.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &RoomAdminGetByUidResp_Data{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminGetByUidResp_Data) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Data: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Data: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roomid", wireType)
			}
			m.Roomid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Roomid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnchorId", wireType)
			}
			m.AnchorId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AnchorId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnchorCover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AnchorCover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ctime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminGetByUidResp_Page) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Page: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Page: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalPage", wireType)
			}
			m.TotalPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalPage |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			m.TotalCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalCount |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminGetByAnchorReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminGetByAnchorReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminGetByAnchorReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminGetByAnchorResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminGetByAnchorResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminGetByAnchorResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Page == nil {
				m.Page = &RoomAdminGetByAnchorResp_Page{}
			}
			if err := m.Page.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &RoomAdminGetByAnchorResp_Data{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminGetByAnchorResp_Data) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Data: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Data: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ctime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MedalName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MedalName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminGetByAnchorResp_Page) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Page: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Page: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalPage", wireType)
			}
			m.TotalPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalPage |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			m.TotalCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalCount |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminDismissAdminReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminDismissAdminReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminDismissAdminReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminDismissAdminResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminDismissAdminResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminDismissAdminResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminAddReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminAddReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminAddReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminAddResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomAdminAddResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomAdminAddResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Userinfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Userinfo == nil {
				m.Userinfo = &RoomAdminAddResp_UI{}
			}
			if err := m.Userinfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roomid", wireType)
			}
			m.Roomid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Roomid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ctime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomAdminAddResp_UI) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UI: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UI: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthService
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowService
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipService(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthService = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowService   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_2d622c51a64dcf7e) }

var fileDescriptor_service_2d622c51a64dcf7e = []byte{
	// 977 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x5b, 0x6f, 0x23, 0x35,
	0x14, 0x56, 0x2e, 0xcd, 0xe5, 0xa4, 0xdd, 0xad, 0x2c, 0x10, 0xd9, 0xe9, 0x92, 0xe9, 0x4e, 0x41,
	0x2d, 0xb0, 0x9d, 0xd2, 0xee, 0x3e, 0x2d, 0x02, 0xd1, 0xec, 0x2e, 0xab, 0x4a, 0x5c, 0x16, 0x97,
	0x0a, 0x09, 0x21, 0x05, 0x37, 0xe3, 0x24, 0xa6, 0xc9, 0x78, 0x32, 0x9e, 0xa4, 0xca, 0xfe, 0x01,
	0x9e, 0xf8, 0x5f, 0xf0, 0x80, 0x04, 0x8f, 0xbc, 0x8c, 0x50, 0x9f, 0x50, 0x1e, 0xfb, 0x07, 0x40,
	0xb6, 0x27, 0xb3, 0x93, 0x6d, 0x2e, 0x13, 0x78, 0xd8, 0x97, 0x19, 0x9f, 0x73, 0xfc, 0x7d, 0xb6,
	0x8f, 0x3f, 0x1f, 0x1b, 0x36, 0x04, 0xf5, 0x87, 0xac, 0x49, 0x6d, 0xcf, 0xe7, 0x01, 0x47, 0xa8,
	0xcb, 0x86, 0xd4, 0x26, 0x9e, 0x37, 0x68, 0x52, 0x37, 0xa0, 0xbe, 0x3d, 0x3c, 0x34, 0xf6, 0xdb,
	0x2c, 0xe8, 0x0c, 0xce, 0xed, 0x26, 0xef, 0x1d, 0xb4, 0x79, 0x9b, 0x1f, 0xa8, 0xae, 0xe7, 0x83,
	0x96, 0xb2, 0x94, 0xa1, 0x5a, 0x9a, 0xc2, 0xba, 0x05, 0xeb, 0xa7, 0x1d, 0x7e, 0xf9, 0xd4, 0x0d,
	0xfc, 0x11, 0xa6, 0x7d, 0xeb, 0x3e, 0x6c, 0x24, 0x6c, 0xe1, 0xa1, 0x2d, 0x28, 0x77, 0x88, 0x68,
	0x10, 0xa7, 0xc7, 0xdc, 0x6a, 0x66, 0x3b, 0xb3, 0x97, 0xc3, 0xa5, 0x0e, 0x11, 0xc7, 0xd2, 0xb6,
	0x7e, 0x00, 0x03, 0x73, 0xde, 0x53, 0xc6, 0x29, 0x25, 0x7e, 0xb3, 0xf3, 0x19, 0xf7, 0x95, 0x85,
	0x69, 0x1f, 0xd5, 0xa1, 0x74, 0x41, 0x47, 0x8d, 0x4b, 0xee, 0x3b, 0x0a, 0x59, 0xae, 0xef, 0x5e,
	0x87, 0xe6, 0x4e, 0x8b, 0xfb, 0xbd, 0x47, 0xd6, 0x24, 0x62, 0x6d, 0x0f, 0x49, 0x97, 0x39, 0x24,
	0xa0, 0x8f, 0x2c, 0x9f, 0xf6, 0x07, 0xcc, 0xa7, 0x8e, 0x85, 0x8b, 0x17, 0x74, 0xf4, 0xad, 0x8c,
	0xfe, 0x96, 0x85, 0xad, 0xb9, 0x43, 0x08, 0x0f, 0x61, 0xc8, 0x3b, 0x24, 0x20, 0xd5, 0xdc, 0x76,
	0x6e, 0xaf, 0x72, 0xf4, 0xd0, 0xbe, 0x99, 0x11, 0x7b, 0x01, 0xdc, 0x7e, 0x42, 0x02, 0x52, 0x2f,
	0x8d, 0x43, 0x53, 0xb1, 0x60, 0xf5, 0x35, 0xfe, 0xcc, 0x40, 0x5e, 0x06, 0xd0, 0x1d, 0xc8, 0x0d,
	0x98, 0x9e, 0x7b, 0xae, 0x5e, 0x1c, 0x87, 0xa6, 0x34, 0xb1, 0xfc, 0xa0, 0x5d, 0x28, 0xb1, 0x49,
	0x56, 0xb2, 0x2a, 0xbe, 0x3e, 0x0e, 0xcd, 0xd8, 0x87, 0x8b, 0x4c, 0xa7, 0x08, 0x99, 0xb0, 0x36,
	0x70, 0x49, 0x8f, 0x56, 0xf3, 0x2a, 0x03, 0xe5, 0x71, 0x68, 0x6a, 0x07, 0xd6, 0x3f, 0x74, 0x17,
	0xf2, 0x2d, 0xd2, 0xa4, 0xd5, 0x35, 0x15, 0x57, 0x73, 0x91, 0x36, 0x56, 0x5f, 0xb4, 0x0f, 0xd0,
	0xa3, 0x0e, 0xe9, 0x36, 0x14, 0x47, 0x41, 0xf5, 0xb9, 0x35, 0x0e, 0xcd, 0x84, 0x17, 0x97, 0x55,
	0xfb, 0x4b, 0x49, 0x66, 0xc2, 0x5a, 0x97, 0x0e, 0x69, 0xb7, 0x5a, 0x54, 0x73, 0x52, 0xa3, 0x29,
	0x07, 0xd6, 0x3f, 0xeb, 0xfb, 0x44, 0x3a, 0x31, 0x15, 0xac, 0xed, 0x26, 0xcc, 0x3e, 0xfa, 0x18,
	0x0a, 0x3e, 0xe7, 0xbd, 0x78, 0xd1, 0xef, 0x5e, 0x87, 0xe6, 0x3d, 0xbd, 0x61, 0xda, 0x3f, 0x7b,
	0xbb, 0x22, 0x90, 0x55, 0x83, 0xbb, 0xf3, 0xd9, 0x85, 0x67, 0x7d, 0x04, 0x6f, 0xc4, 0x8e, 0x67,
	0x34, 0xa8, 0x8f, 0xce, 0x98, 0x23, 0x87, 0xdd, 0x81, 0xbc, 0x47, 0xda, 0x34, 0x1a, 0xf4, 0xf6,
	0x75, 0x68, 0x56, 0xf4, 0xa0, 0xd2, 0x6b, 0x61, 0x15, 0xb4, 0x7e, 0xce, 0xc3, 0x9b, 0x33, 0xd0,
	0xc2, 0x43, 0xf5, 0x04, 0xbc, 0x72, 0x64, 0x2f, 0x14, 0x41, 0x12, 0x68, 0x3f, 0x27, 0x6d, 0xaa,
	0xd9, 0xd1, 0xe7, 0x53, 0x42, 0x5a, 0x81, 0x63, 0xa6, 0x84, 0xfe, 0x4e, 0x21, 0x21, 0x2b, 0xce,
	0xb5, 0x16, 0x10, 0x8c, 0x43, 0x33, 0xf2, 0x4c, 0x12, 0x8a, 0xde, 0x87, 0x32, 0x71, 0x9b, 0x1d,
	0xee, 0x37, 0x98, 0x53, 0xcd, 0xa9, 0x6e, 0x1b, 0xe3, 0xd0, 0x7c, 0xe9, 0xc4, 0x25, 0xdd, 0x3c,
	0x71, 0x96, 0x2b, 0xed, 0x01, 0xac, 0x47, 0xb8, 0x26, 0x1f, 0x52, 0x3f, 0x52, 0xdc, 0xe6, 0x38,
	0x34, 0xa7, 0xfc, 0xb8, 0xa2, 0xad, 0xc7, 0xd2, 0x90, 0xac, 0xcd, 0x80, 0xc5, 0xda, 0x53, 0xac,
	0xca, 0x81, 0xf5, 0xcf, 0xb8, 0x84, 0xbc, 0x4c, 0x23, 0x42, 0xc9, 0x3d, 0x8c, 0x92, 0xba, 0x05,
	0x65, 0xf9, 0x6f, 0x08, 0xf6, 0x82, 0xea, 0x55, 0xe2, 0x92, 0x74, 0x9c, 0xb2, 0x17, 0x14, 0xbd,
	0x0d, 0x10, 0xf0, 0x80, 0x74, 0x1b, 0x0a, 0xa6, 0x16, 0x87, 0xcb, 0xca, 0xa3, 0xf8, 0x4c, 0xa8,
	0xe8, 0x70, 0x93, 0x0f, 0xdc, 0x40, 0x2d, 0x2a, 0x87, 0x35, 0xe2, 0xb1, 0xf4, 0x58, 0x9f, 0xc0,
	0x5b, 0xd3, 0x3b, 0x72, 0xac, 0xa6, 0x9d, 0x5a, 0x4f, 0xff, 0xe4, 0xa0, 0x3a, 0x9b, 0x40, 0x78,
	0xe8, 0xe9, 0x94, 0xa4, 0x0e, 0x97, 0xcb, 0xe1, 0x25, 0x36, 0xa9, 0xaa, 0xaf, 0xa6, 0x54, 0xb5,
	0x1a, 0xcd, 0x4c, 0x61, 0xfd, 0x91, 0x42, 0x58, 0xff, 0xb3, 0xe4, 0x2c, 0xdb, 0xf1, 0x57, 0x6a,
	0x52, 0x29, 0x75, 0x4d, 0x2a, 0xcf, 0xae, 0x49, 0xaf, 0x4f, 0x41, 0xcf, 0x13, 0x02, 0x78, 0xc2,
	0x44, 0x8f, 0x09, 0x11, 0x57, 0xc2, 0x87, 0xc9, 0xfc, 0x5a, 0xd7, 0xa1, 0x59, 0xd3, 0x0a, 0x1a,
	0xcc, 0xab, 0x81, 0xb2, 0xbb, 0xb5, 0x05, 0x77, 0xe6, 0x30, 0x0a, 0xcf, 0x7a, 0x06, 0xb7, 0xe3,
	0xe0, 0xb1, 0xe3, 0xfc, 0xf7, 0x51, 0x7e, 0xca, 0xc2, 0xe6, 0x34, 0x93, 0xf0, 0xd0, 0xd7, 0x50,
	0x1a, 0x08, 0xea, 0x33, 0xb7, 0xc5, 0x23, 0xd5, 0xee, 0x2e, 0x94, 0x5b, 0x84, 0xb3, 0xcf, 0x4e,
	0xf4, 0xd5, 0x35, 0x01, 0xe3, 0xb8, 0x35, 0xd1, 0x58, 0x76, 0x61, 0xf1, 0xca, 0xcd, 0x2d, 0x5e,
	0xb1, 0x90, 0xf2, 0x73, 0x4a, 0xc7, 0xa7, 0x90, 0x3d, 0x3b, 0x49, 0xa5, 0xe4, 0xec, 0x6c, 0x25,
	0x1f, 0xfd, 0xba, 0x06, 0xe5, 0x78, 0x45, 0xe8, 0x0b, 0x28, 0xc8, 0x0b, 0xd8, 0x1d, 0xa1, 0xed,
	0x59, 0x4b, 0x4f, 0x3e, 0x74, 0x8c, 0x7b, 0x4b, 0x7a, 0x08, 0x0f, 0x11, 0x80, 0x36, 0x0d, 0x1a,
	0xe7, 0xa3, 0x86, 0x9c, 0xcb, 0x5e, 0xca, 0x2b, 0xa1, 0x6f, 0xbc, 0x97, 0xfa, 0xf2, 0x40, 0x17,
	0x50, 0xf0, 0xd5, 0x3d, 0x89, 0x0e, 0x16, 0x82, 0x6e, 0x5e, 0xd5, 0xc6, 0x87, 0xab, 0x01, 0x84,
	0x87, 0x04, 0x6c, 0x0a, 0xf5, 0x04, 0x6a, 0xb4, 0xb8, 0xaf, 0xdf, 0x29, 0xc8, 0x5e, 0xe9, 0xc5,
	0xd4, 0x37, 0x0e, 0x56, 0x7c, 0x61, 0xa1, 0x1f, 0x61, 0x23, 0x4a, 0xa2, 0xbe, 0x55, 0xd0, 0x07,
	0xe9, 0x8b, 0x60, 0xdf, 0xb8, 0xbf, 0x4a, 0xc5, 0x44, 0x2d, 0x28, 0x3a, 0xfa, 0xd0, 0xa1, 0xc5,
	0xc0, 0x57, 0x0e, 0xbb, 0xb1, 0xbf, 0x42, 0x6f, 0xe1, 0xa1, 0x6f, 0xa0, 0x48, 0x3c, 0x8f, 0x33,
	0x37, 0x40, 0x3b, 0xcb, 0xcf, 0x58, 0xdf, 0x78, 0x27, 0xcd, 0x41, 0xac, 0x6f, 0xfe, 0x72, 0x55,
	0xcb, 0xfc, 0x7e, 0x55, 0xcb, 0xfc, 0x75, 0x55, 0xcb, 0x7c, 0x97, 0x1d, 0x1e, 0x9e, 0x17, 0xd4,
	0x1b, 0xfd, 0xc1, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xee, 0x30, 0x9e, 0x5f, 0xf7, 0x0b, 0x00,
	0x00,
}
