// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: appUcenter.proto

package v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetRoomInfoResp struct {
	RoomId               int64    `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	Uid                  int64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid"`
	Uname                string   `protobuf:"bytes,3,opt,name=uname,proto3" json:"uname"`
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	Face                 string   `protobuf:"bytes,5,opt,name=face,proto3" json:"face"`
	TryTime              string   `protobuf:"bytes,7,opt,name=try_time,json=tryTime,proto3" json:"try_time"`
	LiveStatus           int64    `protobuf:"varint,8,opt,name=live_status,json=liveStatus,proto3" json:"live_status"`
	AreaV2Name           string   `protobuf:"bytes,9,opt,name=area_v2_name,json=areaV2Name,proto3" json:"area_v2_name"`
	AreaV2Id             int64    `protobuf:"varint,10,opt,name=area_v2_id,json=areaV2Id,proto3" json:"area_v2_id"`
	MasterLevel          int64    `protobuf:"varint,11,opt,name=master_level,json=masterLevel,proto3" json:"master_level"`
	MasterLevelColor     int64    `protobuf:"varint,12,opt,name=master_level_color,json=masterLevelColor,proto3" json:"master_level_color"`
	MasterScore          int64    `protobuf:"varint,13,opt,name=master_score,json=masterScore,proto3" json:"master_score"`
	MasterNextLevel      int64    `protobuf:"varint,14,opt,name=master_next_level,json=masterNextLevel,proto3" json:"master_next_level"`
	MaxLevel             int64    `protobuf:"varint,15,opt,name=max_level,json=maxLevel,proto3" json:"max_level"`
	FcNum                int64    `protobuf:"varint,16,opt,name=fc_num,json=fcNum,proto3" json:"fc_num"`
	Rcost                int64    `protobuf:"varint,17,opt,name=rcost,proto3" json:"rcost"`
	MedalStatus          int64    `protobuf:"varint,18,opt,name=medal_status,json=medalStatus,proto3" json:"medal_status"`
	MedalName            string   `protobuf:"bytes,19,opt,name=medal_name,json=medalName,proto3" json:"medal_name"`
	MedalRenameStatus    int64    `protobuf:"varint,20,opt,name=medal_rename_status,json=medalRenameStatus,proto3" json:"medal_rename_status"`
	IsMedal              int64    `protobuf:"varint,21,opt,name=is_medal,json=isMedal,proto3" json:"is_medal"`
	FullText             string   `protobuf:"bytes,22,opt,name=full_text,json=fullText,proto3" json:"full_text"`
	IdentifyStatus       int64    `protobuf:"varint,23,opt,name=identify_status,json=identifyStatus,proto3" json:"identify_status"`
	LockStatus           int64    `protobuf:"varint,24,opt,name=lock_status,json=lockStatus,proto3" json:"lock_status"`
	LockTime             string   `protobuf:"bytes,25,opt,name=lock_time,json=lockTime,proto3" json:"lock_time"`
	OpenMedalLevel       int64    `protobuf:"varint,26,opt,name=open_medal_level,json=openMedalLevel,proto3" json:"open_medal_level"`
	MasterNextLevelScore int64    `protobuf:"varint,27,opt,name=master_next_level_score,json=masterNextLevelScore,proto3" json:"master_next_level_score"`
	ParentId             int64    `protobuf:"varint,28,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	ParentName           string   `protobuf:"bytes,29,opt,name=parent_name,json=parentName,proto3" json:"parent_name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoomInfoResp) Reset()         { *m = GetRoomInfoResp{} }
func (m *GetRoomInfoResp) String() string { return proto.CompactTextString(m) }
func (*GetRoomInfoResp) ProtoMessage()    {}
func (*GetRoomInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_appUcenter_63297cc2c584031c, []int{0}
}
func (m *GetRoomInfoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRoomInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRoomInfoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetRoomInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomInfoResp.Merge(dst, src)
}
func (m *GetRoomInfoResp) XXX_Size() int {
	return m.Size()
}
func (m *GetRoomInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomInfoResp proto.InternalMessageInfo

func (m *GetRoomInfoResp) GetRoomId() int64 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *GetRoomInfoResp) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GetRoomInfoResp) GetUname() string {
	if m != nil {
		return m.Uname
	}
	return ""
}

func (m *GetRoomInfoResp) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetRoomInfoResp) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *GetRoomInfoResp) GetTryTime() string {
	if m != nil {
		return m.TryTime
	}
	return ""
}

func (m *GetRoomInfoResp) GetLiveStatus() int64 {
	if m != nil {
		return m.LiveStatus
	}
	return 0
}

func (m *GetRoomInfoResp) GetAreaV2Name() string {
	if m != nil {
		return m.AreaV2Name
	}
	return ""
}

func (m *GetRoomInfoResp) GetAreaV2Id() int64 {
	if m != nil {
		return m.AreaV2Id
	}
	return 0
}

func (m *GetRoomInfoResp) GetMasterLevel() int64 {
	if m != nil {
		return m.MasterLevel
	}
	return 0
}

func (m *GetRoomInfoResp) GetMasterLevelColor() int64 {
	if m != nil {
		return m.MasterLevelColor
	}
	return 0
}

func (m *GetRoomInfoResp) GetMasterScore() int64 {
	if m != nil {
		return m.MasterScore
	}
	return 0
}

func (m *GetRoomInfoResp) GetMasterNextLevel() int64 {
	if m != nil {
		return m.MasterNextLevel
	}
	return 0
}

func (m *GetRoomInfoResp) GetMaxLevel() int64 {
	if m != nil {
		return m.MaxLevel
	}
	return 0
}

func (m *GetRoomInfoResp) GetFcNum() int64 {
	if m != nil {
		return m.FcNum
	}
	return 0
}

func (m *GetRoomInfoResp) GetRcost() int64 {
	if m != nil {
		return m.Rcost
	}
	return 0
}

func (m *GetRoomInfoResp) GetMedalStatus() int64 {
	if m != nil {
		return m.MedalStatus
	}
	return 0
}

func (m *GetRoomInfoResp) GetMedalName() string {
	if m != nil {
		return m.MedalName
	}
	return ""
}

func (m *GetRoomInfoResp) GetMedalRenameStatus() int64 {
	if m != nil {
		return m.MedalRenameStatus
	}
	return 0
}

func (m *GetRoomInfoResp) GetIsMedal() int64 {
	if m != nil {
		return m.IsMedal
	}
	return 0
}

func (m *GetRoomInfoResp) GetFullText() string {
	if m != nil {
		return m.FullText
	}
	return ""
}

func (m *GetRoomInfoResp) GetIdentifyStatus() int64 {
	if m != nil {
		return m.IdentifyStatus
	}
	return 0
}

func (m *GetRoomInfoResp) GetLockStatus() int64 {
	if m != nil {
		return m.LockStatus
	}
	return 0
}

func (m *GetRoomInfoResp) GetLockTime() string {
	if m != nil {
		return m.LockTime
	}
	return ""
}

func (m *GetRoomInfoResp) GetOpenMedalLevel() int64 {
	if m != nil {
		return m.OpenMedalLevel
	}
	return 0
}

func (m *GetRoomInfoResp) GetMasterNextLevelScore() int64 {
	if m != nil {
		return m.MasterNextLevelScore
	}
	return 0
}

func (m *GetRoomInfoResp) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *GetRoomInfoResp) GetParentName() string {
	if m != nil {
		return m.ParentName
	}
	return ""
}

type GetRoomInfoReq struct {
	Platform             string   `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty" form:"platform" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoomInfoReq) Reset()         { *m = GetRoomInfoReq{} }
func (m *GetRoomInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetRoomInfoReq) ProtoMessage()    {}
func (*GetRoomInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_appUcenter_63297cc2c584031c, []int{1}
}
func (m *GetRoomInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRoomInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRoomInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetRoomInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomInfoReq.Merge(dst, src)
}
func (m *GetRoomInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *GetRoomInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomInfoReq proto.InternalMessageInfo

func (m *GetRoomInfoReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type CreateResp struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResp) Reset()         { *m = CreateResp{} }
func (m *CreateResp) String() string { return proto.CompactTextString(m) }
func (*CreateResp) ProtoMessage()    {}
func (*CreateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_appUcenter_63297cc2c584031c, []int{2}
}
func (m *CreateResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CreateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResp.Merge(dst, src)
}
func (m *CreateResp) XXX_Size() int {
	return m.Size()
}
func (m *CreateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResp proto.InternalMessageInfo

func (m *CreateResp) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type CreateReq struct {
	Platform             string   `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty" form:"platform" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReq) Reset()         { *m = CreateReq{} }
func (m *CreateReq) String() string { return proto.CompactTextString(m) }
func (*CreateReq) ProtoMessage()    {}
func (*CreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_appUcenter_63297cc2c584031c, []int{3}
}
func (m *CreateReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReq.Merge(dst, src)
}
func (m *CreateReq) XXX_Size() int {
	return m.Size()
}
func (m *CreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReq proto.InternalMessageInfo

func (m *CreateReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type GetTopicListReq struct {
	Platform             string   `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty" form:"platform" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopicListReq) Reset()         { *m = GetTopicListReq{} }
func (m *GetTopicListReq) String() string { return proto.CompactTextString(m) }
func (*GetTopicListReq) ProtoMessage()    {}
func (*GetTopicListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_appUcenter_63297cc2c584031c, []int{4}
}
func (m *GetTopicListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTopicListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTopicListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetTopicListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopicListReq.Merge(dst, src)
}
func (m *GetTopicListReq) XXX_Size() int {
	return m.Size()
}
func (m *GetTopicListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopicListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopicListReq proto.InternalMessageInfo

func (m *GetTopicListReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type GetTopicListResp struct {
	TopicList            []string `protobuf:"bytes,1,rep,name=topic_list,json=topicList" json:"topic_list"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopicListResp) Reset()         { *m = GetTopicListResp{} }
func (m *GetTopicListResp) String() string { return proto.CompactTextString(m) }
func (*GetTopicListResp) ProtoMessage()    {}
func (*GetTopicListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_appUcenter_63297cc2c584031c, []int{5}
}
func (m *GetTopicListResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTopicListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTopicListResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetTopicListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopicListResp.Merge(dst, src)
}
func (m *GetTopicListResp) XXX_Size() int {
	return m.Size()
}
func (m *GetTopicListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopicListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopicListResp proto.InternalMessageInfo

func (m *GetTopicListResp) GetTopicList() []string {
	if m != nil {
		return m.TopicList
	}
	return nil
}

type CheckTopicReq struct {
	Platform             string   `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty" form:"platform" validate:"required"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty" form:"topic" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckTopicReq) Reset()         { *m = CheckTopicReq{} }
func (m *CheckTopicReq) String() string { return proto.CompactTextString(m) }
func (*CheckTopicReq) ProtoMessage()    {}
func (*CheckTopicReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_appUcenter_63297cc2c584031c, []int{6}
}
func (m *CheckTopicReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckTopicReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckTopicReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CheckTopicReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckTopicReq.Merge(dst, src)
}
func (m *CheckTopicReq) XXX_Size() int {
	return m.Size()
}
func (m *CheckTopicReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckTopicReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckTopicReq proto.InternalMessageInfo

func (m *CheckTopicReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *CheckTopicReq) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type CheckTopicResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckTopicResp) Reset()         { *m = CheckTopicResp{} }
func (m *CheckTopicResp) String() string { return proto.CompactTextString(m) }
func (*CheckTopicResp) ProtoMessage()    {}
func (*CheckTopicResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_appUcenter_63297cc2c584031c, []int{7}
}
func (m *CheckTopicResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckTopicResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckTopicResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CheckTopicResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckTopicResp.Merge(dst, src)
}
func (m *CheckTopicResp) XXX_Size() int {
	return m.Size()
}
func (m *CheckTopicResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckTopicResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckTopicResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetRoomInfoResp)(nil), "live.appucenter.v1.GetRoomInfoResp")
	proto.RegisterType((*GetRoomInfoReq)(nil), "live.appucenter.v1.GetRoomInfoReq")
	proto.RegisterType((*CreateResp)(nil), "live.appucenter.v1.CreateResp")
	proto.RegisterType((*CreateReq)(nil), "live.appucenter.v1.CreateReq")
	proto.RegisterType((*GetTopicListReq)(nil), "live.appucenter.v1.GetTopicListReq")
	proto.RegisterType((*GetTopicListResp)(nil), "live.appucenter.v1.GetTopicListResp")
	proto.RegisterType((*CheckTopicReq)(nil), "live.appucenter.v1.CheckTopicReq")
	proto.RegisterType((*CheckTopicResp)(nil), "live.appucenter.v1.CheckTopicResp")
}
func (m *GetRoomInfoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRoomInfoResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoomId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.RoomId))
	}
	if m.Uid != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.Uid))
	}
	if len(m.Uname) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.Uname)))
		i += copy(dAtA[i:], m.Uname)
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.Face) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.Face)))
		i += copy(dAtA[i:], m.Face)
	}
	if len(m.TryTime) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.TryTime)))
		i += copy(dAtA[i:], m.TryTime)
	}
	if m.LiveStatus != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.LiveStatus))
	}
	if len(m.AreaV2Name) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.AreaV2Name)))
		i += copy(dAtA[i:], m.AreaV2Name)
	}
	if m.AreaV2Id != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.AreaV2Id))
	}
	if m.MasterLevel != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.MasterLevel))
	}
	if m.MasterLevelColor != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.MasterLevelColor))
	}
	if m.MasterScore != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.MasterScore))
	}
	if m.MasterNextLevel != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.MasterNextLevel))
	}
	if m.MaxLevel != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.MaxLevel))
	}
	if m.FcNum != 0 {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.FcNum))
	}
	if m.Rcost != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.Rcost))
	}
	if m.MedalStatus != 0 {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.MedalStatus))
	}
	if len(m.MedalName) > 0 {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.MedalName)))
		i += copy(dAtA[i:], m.MedalName)
	}
	if m.MedalRenameStatus != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.MedalRenameStatus))
	}
	if m.IsMedal != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.IsMedal))
	}
	if len(m.FullText) > 0 {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.FullText)))
		i += copy(dAtA[i:], m.FullText)
	}
	if m.IdentifyStatus != 0 {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.IdentifyStatus))
	}
	if m.LockStatus != 0 {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.LockStatus))
	}
	if len(m.LockTime) > 0 {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.LockTime)))
		i += copy(dAtA[i:], m.LockTime)
	}
	if m.OpenMedalLevel != 0 {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.OpenMedalLevel))
	}
	if m.MasterNextLevelScore != 0 {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.MasterNextLevelScore))
	}
	if m.ParentId != 0 {
		dAtA[i] = 0xe0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(m.ParentId))
	}
	if len(m.ParentName) > 0 {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.ParentName)))
		i += copy(dAtA[i:], m.ParentName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetRoomInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRoomInfoReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Platform) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.Platform)))
		i += copy(dAtA[i:], m.Platform)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CreateResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.RoomId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.RoomId)))
		i += copy(dAtA[i:], m.RoomId)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CreateReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Platform) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.Platform)))
		i += copy(dAtA[i:], m.Platform)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetTopicListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTopicListReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Platform) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.Platform)))
		i += copy(dAtA[i:], m.Platform)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetTopicListResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTopicListResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.TopicList) > 0 {
		for _, s := range m.TopicList {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CheckTopicReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckTopicReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Platform) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.Platform)))
		i += copy(dAtA[i:], m.Platform)
	}
	if len(m.Topic) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintAppUcenter(dAtA, i, uint64(len(m.Topic)))
		i += copy(dAtA[i:], m.Topic)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CheckTopicResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckTopicResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintAppUcenter(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *GetRoomInfoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoomId != 0 {
		n += 1 + sovAppUcenter(uint64(m.RoomId))
	}
	if m.Uid != 0 {
		n += 1 + sovAppUcenter(uint64(m.Uid))
	}
	l = len(m.Uname)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	l = len(m.TryTime)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	if m.LiveStatus != 0 {
		n += 1 + sovAppUcenter(uint64(m.LiveStatus))
	}
	l = len(m.AreaV2Name)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	if m.AreaV2Id != 0 {
		n += 1 + sovAppUcenter(uint64(m.AreaV2Id))
	}
	if m.MasterLevel != 0 {
		n += 1 + sovAppUcenter(uint64(m.MasterLevel))
	}
	if m.MasterLevelColor != 0 {
		n += 1 + sovAppUcenter(uint64(m.MasterLevelColor))
	}
	if m.MasterScore != 0 {
		n += 1 + sovAppUcenter(uint64(m.MasterScore))
	}
	if m.MasterNextLevel != 0 {
		n += 1 + sovAppUcenter(uint64(m.MasterNextLevel))
	}
	if m.MaxLevel != 0 {
		n += 1 + sovAppUcenter(uint64(m.MaxLevel))
	}
	if m.FcNum != 0 {
		n += 2 + sovAppUcenter(uint64(m.FcNum))
	}
	if m.Rcost != 0 {
		n += 2 + sovAppUcenter(uint64(m.Rcost))
	}
	if m.MedalStatus != 0 {
		n += 2 + sovAppUcenter(uint64(m.MedalStatus))
	}
	l = len(m.MedalName)
	if l > 0 {
		n += 2 + l + sovAppUcenter(uint64(l))
	}
	if m.MedalRenameStatus != 0 {
		n += 2 + sovAppUcenter(uint64(m.MedalRenameStatus))
	}
	if m.IsMedal != 0 {
		n += 2 + sovAppUcenter(uint64(m.IsMedal))
	}
	l = len(m.FullText)
	if l > 0 {
		n += 2 + l + sovAppUcenter(uint64(l))
	}
	if m.IdentifyStatus != 0 {
		n += 2 + sovAppUcenter(uint64(m.IdentifyStatus))
	}
	if m.LockStatus != 0 {
		n += 2 + sovAppUcenter(uint64(m.LockStatus))
	}
	l = len(m.LockTime)
	if l > 0 {
		n += 2 + l + sovAppUcenter(uint64(l))
	}
	if m.OpenMedalLevel != 0 {
		n += 2 + sovAppUcenter(uint64(m.OpenMedalLevel))
	}
	if m.MasterNextLevelScore != 0 {
		n += 2 + sovAppUcenter(uint64(m.MasterNextLevelScore))
	}
	if m.ParentId != 0 {
		n += 2 + sovAppUcenter(uint64(m.ParentId))
	}
	l = len(m.ParentName)
	if l > 0 {
		n += 2 + l + sovAppUcenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetRoomInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Platform)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoomId)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Platform)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTopicListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Platform)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTopicListResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.TopicList) > 0 {
		for _, s := range m.TopicList {
			l = len(s)
			n += 1 + l + sovAppUcenter(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckTopicReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Platform)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	l = len(m.Topic)
	if l > 0 {
		n += 1 + l + sovAppUcenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckTopicResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovAppUcenter(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozAppUcenter(x uint64) (n int) {
	return sovAppUcenter(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetRoomInfoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAppUcenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRoomInfoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRoomInfoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			m.RoomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoomId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TryTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TryTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveStatus", wireType)
			}
			m.LiveStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LiveStatus |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreaV2Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AreaV2Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreaV2Id", wireType)
			}
			m.AreaV2Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AreaV2Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MasterLevel", wireType)
			}
			m.MasterLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MasterLevel |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MasterLevelColor", wireType)
			}
			m.MasterLevelColor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MasterLevelColor |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MasterScore", wireType)
			}
			m.MasterScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MasterScore |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MasterNextLevel", wireType)
			}
			m.MasterNextLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MasterNextLevel |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxLevel", wireType)
			}
			m.MaxLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxLevel |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FcNum", wireType)
			}
			m.FcNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FcNum |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rcost", wireType)
			}
			m.Rcost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rcost |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MedalStatus", wireType)
			}
			m.MedalStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MedalStatus |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MedalName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MedalName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MedalRenameStatus", wireType)
			}
			m.MedalRenameStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MedalRenameStatus |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsMedal", wireType)
			}
			m.IsMedal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsMedal |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FullText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentifyStatus", wireType)
			}
			m.IdentifyStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IdentifyStatus |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LockStatus", wireType)
			}
			m.LockStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LockStatus |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LockTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LockTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenMedalLevel", wireType)
			}
			m.OpenMedalLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OpenMedalLevel |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MasterNextLevelScore", wireType)
			}
			m.MasterNextLevelScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MasterNextLevelScore |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentId", wireType)
			}
			m.ParentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ParentId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAppUcenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAppUcenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRoomInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAppUcenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRoomInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRoomInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAppUcenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAppUcenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAppUcenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoomId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAppUcenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAppUcenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAppUcenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAppUcenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAppUcenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTopicListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAppUcenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTopicListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTopicListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAppUcenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAppUcenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTopicListResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAppUcenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTopicListResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTopicListResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicList = append(m.TopicList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAppUcenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAppUcenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckTopicReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAppUcenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckTopicReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckTopicReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppUcenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAppUcenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAppUcenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckTopicResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAppUcenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckTopicResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckTopicResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipAppUcenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAppUcenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAppUcenter(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAppUcenter
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAppUcenter
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthAppUcenter
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowAppUcenter
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipAppUcenter(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthAppUcenter = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAppUcenter   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("appUcenter.proto", fileDescriptor_appUcenter_63297cc2c584031c) }

var fileDescriptor_appUcenter_63297cc2c584031c = []byte{
	// 980 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0x4d, 0x6e, 0xdb, 0xc6,
	0x17, 0xc0, 0xc1, 0xf8, 0x43, 0xe4, 0xb3, 0x2c, 0xc9, 0x63, 0x27, 0x66, 0x94, 0xc4, 0xa3, 0x30,
	0x06, 0x1c, 0x18, 0xff, 0x28, 0xff, 0x28, 0x3b, 0xa3, 0x28, 0x10, 0xb9, 0x80, 0x61, 0x20, 0x35,
	0x8a, 0xb1, 0x13, 0xa0, 0xdd, 0x10, 0x34, 0x39, 0x72, 0x88, 0x90, 0x22, 0x43, 0x0e, 0x05, 0xf9,
	0x16, 0xbd, 0x43, 0x0f, 0xd1, 0x2b, 0x74, 0xd9, 0x13, 0x10, 0x85, 0x97, 0x5c, 0xe6, 0x04, 0xc5,
	0xbc, 0x21, 0x25, 0x3a, 0x52, 0xea, 0x8d, 0x37, 0xe2, 0xbc, 0xdf, 0xfb, 0x9c, 0x79, 0x6f, 0x48,
	0x41, 0xc7, 0x89, 0xe3, 0x0f, 0x2e, 0x1f, 0x0b, 0x9e, 0xf4, 0xe3, 0x24, 0x12, 0x11, 0x21, 0x81,
	0x3f, 0xe1, 0x7d, 0x27, 0x8e, 0xb3, 0x12, 0x4f, 0xde, 0x74, 0x5f, 0x5d, 0xf9, 0xe2, 0x53, 0x76,
	0xd9, 0x77, 0xa3, 0xf0, 0xf5, 0x55, 0x74, 0x15, 0xbd, 0x46, 0xd3, 0xcb, 0x6c, 0x84, 0x12, 0x0a,
	0xb8, 0x52, 0x21, 0xac, 0x1b, 0x80, 0xf6, 0x09, 0x17, 0x2c, 0x8a, 0xc2, 0xd3, 0xf1, 0x28, 0x62,
	0x3c, 0x8d, 0xc9, 0x3e, 0x34, 0x92, 0x28, 0x0a, 0x6d, 0xdf, 0x33, 0xb5, 0x9e, 0xf6, 0x72, 0x65,
	0xb8, 0x51, 0xe4, 0xb4, 0x42, 0x6c, 0x5d, 0x2e, 0x4e, 0x3d, 0xf2, 0x18, 0x56, 0x32, 0xdf, 0x33,
	0x1f, 0xa0, 0x45, 0xa3, 0xc8, 0xa9, 0x14, 0x99, 0xfc, 0x21, 0x14, 0xd6, 0xb2, 0xb1, 0x13, 0x72,
	0x73, 0xa5, 0xa7, 0xbd, 0x34, 0x86, 0x46, 0x91, 0x53, 0x05, 0x98, 0x7a, 0x48, 0x03, 0xe1, 0x8b,
	0x80, 0x9b, 0xab, 0x73, 0x03, 0x04, 0x4c, 0x3d, 0xc8, 0x53, 0x58, 0x1d, 0x39, 0x2e, 0x37, 0xd7,
	0x50, 0xaf, 0x17, 0x39, 0x45, 0x99, 0xe1, 0x2f, 0x39, 0x00, 0x5d, 0x24, 0xd7, 0xb6, 0xf0, 0x43,
	0x6e, 0x36, 0xd0, 0xa2, 0x59, 0xe4, 0x74, 0xc6, 0x58, 0x43, 0x24, 0xd7, 0x17, 0x7e, 0xc8, 0xc9,
	0xff, 0x61, 0x43, 0x1e, 0x91, 0x9d, 0x0a, 0x47, 0x64, 0xa9, 0xa9, 0x63, 0xad, 0xed, 0x22, 0xa7,
	0x75, 0xcc, 0x40, 0x0a, 0xe7, 0xb8, 0x26, 0x03, 0x68, 0x3a, 0x09, 0x77, 0xec, 0xc9, 0xc0, 0xc6,
	0x1d, 0x18, 0x18, 0xbe, 0x53, 0xe4, 0xf4, 0x16, 0x67, 0x20, 0xa5, 0x8f, 0x83, 0x33, 0xb9, 0x9b,
	0xff, 0x01, 0x54, 0x3a, 0xdf, 0x33, 0x01, 0x93, 0xb4, 0x8a, 0x9c, 0xd6, 0x28, 0xd3, 0x95, 0xfd,
	0xa9, 0x47, 0xde, 0x42, 0x33, 0x74, 0x52, 0xc1, 0x13, 0x3b, 0xe0, 0x13, 0x1e, 0x98, 0x1b, 0x68,
	0x8f, 0x19, 0xea, 0x9c, 0x6d, 0x28, 0xe9, 0xbd, 0x14, 0xc8, 0x4f, 0x40, 0xea, 0x4a, 0xdb, 0x8d,
	0x82, 0x28, 0x31, 0x9b, 0xe8, 0xfa, 0xa8, 0xc8, 0xe9, 0x12, 0x2d, 0xeb, 0xd4, 0x02, 0x1c, 0x4b,
	0x52, 0x4b, 0x9d, 0xba, 0x51, 0xc2, 0xcd, 0xcd, 0x85, 0xd4, 0xc8, 0xab, 0xd4, 0xe7, 0x52, 0x20,
	0xef, 0x60, 0xab, 0x54, 0x8e, 0xf9, 0x54, 0x94, 0x45, 0xb7, 0xd0, 0xf3, 0x61, 0x91, 0xd3, 0x45,
	0x25, 0x6b, 0x2b, 0x74, 0xc6, 0xa7, 0x42, 0x55, 0x7f, 0x08, 0x46, 0xe8, 0x4c, 0x4b, 0xd7, 0x36,
	0xba, 0x6e, 0x16, 0x39, 0x9d, 0x43, 0xa6, 0x87, 0xce, 0x54, 0xd9, 0x3e, 0x87, 0xf5, 0x91, 0x6b,
	0x8f, 0xb3, 0xd0, 0xec, 0xa0, 0x21, 0x14, 0x39, 0x2d, 0x09, 0x5b, 0x1b, 0xb9, 0x67, 0x59, 0x28,
	0xa7, 0x27, 0x71, 0xa3, 0x54, 0x98, 0x5b, 0x68, 0x81, 0xd3, 0x83, 0x80, 0xa9, 0x07, 0xee, 0x93,
	0x7b, 0x4e, 0x50, 0xf5, 0x9d, 0xd4, 0xf6, 0x59, 0xe3, 0x6c, 0x03, 0xa5, 0xb2, 0xf3, 0xaf, 0x00,
	0x94, 0x12, 0xfb, 0xbe, 0x8d, 0x7d, 0xc7, 0x2e, 0xce, 0x29, 0x33, 0x70, 0x8d, 0x4d, 0x3f, 0x81,
	0x6d, 0xa5, 0x48, 0xb8, 0x54, 0x55, 0xa9, 0x76, 0x30, 0xd5, 0x6e, 0x91, 0xd3, 0x65, 0x6a, 0xb6,
	0x85, 0x90, 0x21, 0x2b, 0xf3, 0x1e, 0x80, 0xee, 0xa7, 0x36, 0x72, 0xf3, 0x21, 0x7a, 0xe3, 0x30,
	0x57, 0x8c, 0x35, 0xfc, 0xf4, 0x67, 0xb9, 0x90, 0xa7, 0x38, 0xca, 0x82, 0xc0, 0x16, 0x7c, 0x2a,
	0xcc, 0x47, 0x58, 0x1f, 0x9e, 0xe2, 0x0c, 0x32, 0x5d, 0x2e, 0x2f, 0xf8, 0x54, 0x90, 0x1f, 0xa0,
	0xed, 0x7b, 0x7c, 0x2c, 0xfc, 0xd1, 0x75, 0x55, 0xd9, 0x2e, 0xc6, 0xde, 0x2e, 0x72, 0xfa, 0xad,
	0x8a, 0xb5, 0x2a, 0x50, 0x96, 0x24, 0xaf, 0x4d, 0xe4, 0x7e, 0xae, 0x3c, 0xcd, 0xda, 0xb5, 0x99,
	0x63, 0x06, 0x52, 0x28, 0x3d, 0x0e, 0xc1, 0x40, 0x15, 0x5e, 0xc9, 0xc7, 0xf3, 0xda, 0x66, 0x90,
	0xe9, 0x72, 0x89, 0x97, 0xf2, 0x47, 0xe8, 0x44, 0x31, 0x1f, 0xab, 0xed, 0x95, 0x43, 0xd1, 0xc5,
	0x14, 0x3b, 0x45, 0x4e, 0x17, 0x74, 0xac, 0x25, 0x09, 0x1e, 0x81, 0x9a, 0x10, 0x06, 0xbb, 0x0b,
	0x33, 0x57, 0x0e, 0xf4, 0x13, 0x0c, 0xf3, 0xa4, 0xc8, 0xe9, 0xf7, 0x4c, 0xd8, 0xce, 0x37, 0xc3,
	0xa9, 0x86, 0xfc, 0x10, 0x8c, 0xd8, 0x49, 0xf8, 0x58, 0xc8, 0x1b, 0xfc, 0x74, 0x3e, 0xa1, 0x33,
	0xc8, 0x74, 0xb5, 0x3c, 0xf5, 0xe4, 0xe9, 0x94, 0x18, 0x27, 0xe5, 0x19, 0xee, 0x16, 0x4f, 0xa7,
	0x86, 0x19, 0x28, 0x41, 0xce, 0x8a, 0xf5, 0x01, 0x5a, 0xb7, 0xde, 0xb1, 0x5f, 0xc8, 0x31, 0xe8,
	0x71, 0xe0, 0x88, 0x51, 0x94, 0x84, 0xf8, 0x8e, 0x35, 0x86, 0x07, 0x5f, 0x73, 0xfa, 0x42, 0xca,
	0x47, 0x56, 0xa5, 0xb1, 0x7a, 0x13, 0x27, 0xf0, 0x3d, 0x47, 0xf0, 0x23, 0x2b, 0xe1, 0x5f, 0x32,
	0x3f, 0xe1, 0x9e, 0xc5, 0x66, 0x8e, 0xd6, 0x00, 0xe0, 0x38, 0xe1, 0x8e, 0xe0, 0xcb, 0xde, 0xda,
	0xc6, 0xd2, 0xb7, 0xb6, 0xf5, 0x0b, 0x18, 0x95, 0xcf, 0x3d, 0x55, 0xf1, 0x11, 0x3f, 0x20, 0x17,
	0x51, 0xec, 0xbb, 0xef, 0xfd, 0x54, 0xdc, 0x5b, 0xdc, 0x77, 0xd0, 0xb9, 0x1d, 0x37, 0x8d, 0xe5,
	0x1d, 0x15, 0x12, 0xd8, 0x81, 0x9f, 0x0a, 0x53, 0xeb, 0xad, 0x54, 0x77, 0x74, 0x4e, 0x99, 0x21,
	0x2a, 0x17, 0xeb, 0x77, 0x0d, 0x36, 0x8f, 0x3f, 0x71, 0xf7, 0x33, 0x46, 0xb9, 0xaf, 0xca, 0xc8,
	0x11, 0xac, 0x61, 0x0e, 0xfc, 0xf6, 0x19, 0xc3, 0xfd, 0xaf, 0x39, 0xed, 0xa9, 0x08, 0x88, 0x97,
	0xbb, 0x2b, 0x17, 0xab, 0x03, 0xad, 0x7a, 0x45, 0x69, 0x3c, 0xf8, 0x43, 0x83, 0x55, 0x39, 0x1a,
	0x84, 0x41, 0xe3, 0x84, 0x0b, 0x39, 0x21, 0xc4, 0xea, 0x2f, 0x7e, 0xd9, 0xfb, 0xb7, 0x47, 0xa8,
	0xfb, 0xe2, 0x4e, 0x9b, 0x34, 0x26, 0x27, 0xb0, 0xae, 0xda, 0x4d, 0x9e, 0x2d, 0x33, 0x9f, 0x8d,
	0x42, 0x77, 0xef, 0xbf, 0xd4, 0x69, 0x3c, 0xf8, 0x53, 0x83, 0x35, 0xac, 0x99, 0xfc, 0x0a, 0xcd,
	0x7a, 0x5f, 0xc8, 0xf7, 0xea, 0xa8, 0x4f, 0x44, 0x77, 0xff, 0x6e, 0xa3, 0x34, 0x26, 0xe7, 0x00,
	0xf3, 0xc3, 0x21, 0xcf, 0x97, 0x96, 0x54, 0x6f, 0x67, 0xd7, 0xba, 0xcb, 0x24, 0x8d, 0x87, 0x9d,
	0xbf, 0x6e, 0xf6, 0xb4, 0xbf, 0x6f, 0xf6, 0xb4, 0x7f, 0x6e, 0xf6, 0xb4, 0xdf, 0x1e, 0x4c, 0xde,
	0x5c, 0xae, 0xe3, 0x5f, 0x9f, 0xb7, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe2, 0x57, 0x03, 0xb0,
	0x51, 0x09, 0x00, 0x00,
}
