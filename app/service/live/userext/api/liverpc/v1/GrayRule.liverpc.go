// Code generated by protoc-gen-liverpc v0.1, DO NOT EDIT.
// source: v1/GrayRule.proto

package v1

import context "context"

import proto "github.com/golang/protobuf/proto"
import "go-common/library/net/rpc/liverpc"

var _ proto.Message // generate to suppress unused imports

// ==================
// GrayRule Interface
// ==================

type GrayRuleRPCClient interface {
	// * 获取灰度策略配置
	//
	GetByMark(ctx context.Context, req *GrayRuleGetByMarkReq, opts ...liverpc.CallOption) (resp *GrayRuleGetByMarkResp, err error)
}

// ========================
// GrayRule Live Rpc Client
// ========================

type grayRuleRPCClient struct {
	client *liverpc.Client
}

// NewGrayRuleRPCClient creates a client that implements the GrayRuleRPCClient interface.
func NewGrayRuleRPCClient(client *liverpc.Client) GrayRuleRPCClient {
	return &grayRuleRPCClient{
		client: client,
	}
}

func (c *grayRuleRPCClient) GetByMark(ctx context.Context, in *GrayRuleGetByMarkReq, opts ...liverpc.CallOption) (*GrayRuleGetByMarkResp, error) {
	out := new(GrayRuleGetByMarkResp)
	err := doRPCRequest(ctx, c.client, 1, "GrayRule.getByMark", in, out, opts)
	if err != nil {
		return nil, err
	}
	return out, nil
}
