// Code generated by protoc-gen-liverpc v0.1, DO NOT EDIT.
// source: v1/Color.proto

package v1

import context "context"

import proto "github.com/golang/protobuf/proto"
import "go-common/library/net/rpc/liverpc"

var _ proto.Message // generate to suppress unused imports

// ===============
// Color Interface
// ===============

type ColorRPCClient interface {
	// * 获取昵称颜色
	//
	GetUnameColor(ctx context.Context, req *ColorGetUnameColorReq, opts ...liverpc.CallOption) (resp *ColorGetUnameColorResp, err error)
}

// =====================
// Color Live Rpc Client
// =====================

type colorRPCClient struct {
	client *liverpc.Client
}

// NewColorRPCClient creates a client that implements the ColorRPCClient interface.
func NewColorRPCClient(client *liverpc.Client) ColorRPCClient {
	return &colorRPCClient{
		client: client,
	}
}

func (c *colorRPCClient) GetUnameColor(ctx context.Context, in *ColorGetUnameColorReq, opts ...liverpc.CallOption) (*ColorGetUnameColorResp, error) {
	out := new(ColorGetUnameColorResp)
	err := doRPCRequest(ctx, c.client, 1, "Color.getUnameColor", in, out, opts)
	if err != nil {
		return nil, err
	}
	return out, nil
}
