// Code generated by protoc-gen-liverpc v0.1, DO NOT EDIT.
// source: v1/SiteBlockMng.proto

package v1

import context "context"

import proto "github.com/golang/protobuf/proto"
import "go-common/library/net/rpc/liverpc"

var _ proto.Message // generate to suppress unused imports

// ======================
// SiteBlockMng Interface
// ======================

type SiteBlockMng interface {
	// * 是否封禁
	// room-ex调用
	IsBlockUser(context.Context, *SiteBlockMngIsBlockUserReq) (*SiteBlockMngIsBlockUserResp, error)
}

// ============================
// SiteBlockMng Live Rpc Client
// ============================

type siteBlockMngRpcClient struct {
	client *liverpc.Client
}

// NewSiteBlockMngRpcClient creates a Rpc client that implements the SiteBlockMng interface.
// It communicates using Rpc and can be configured with a custom HTTPClient.
func NewSiteBlockMngRpcClient(client *liverpc.Client) SiteBlockMng {
	return &siteBlockMngRpcClient{
		client: client,
	}
}

func (c *siteBlockMngRpcClient) IsBlockUser(ctx context.Context, in *SiteBlockMngIsBlockUserReq) (*SiteBlockMngIsBlockUserResp, error) {
	out := new(SiteBlockMngIsBlockUserResp)
	err := doRpcRequest(ctx, c.client, 1, "SiteBlockMng.isBlockUser", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}
