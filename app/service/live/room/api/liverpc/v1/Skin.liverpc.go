// Code generated by protoc-gen-liverpc v0.1, DO NOT EDIT.
// source: v1/Skin.proto

package v1

import context "context"

import proto "github.com/golang/protobuf/proto"
import "go-common/library/net/rpc/liverpc"

var _ proto.Message // generate to suppress unused imports

// ==============
// Skin Interface
// ==============

type SkinRPCClient interface {
	// * 房间当前皮肤
	//
	Current(ctx context.Context, req *SkinCurrentReq, opts ...liverpc.CallOption) (resp *SkinCurrentResp, err error)
}

// ====================
// Skin Live Rpc Client
// ====================

type skinRPCClient struct {
	client *liverpc.Client
}

// NewSkinRPCClient creates a client that implements the SkinRPCClient interface.
func NewSkinRPCClient(client *liverpc.Client) SkinRPCClient {
	return &skinRPCClient{
		client: client,
	}
}

func (c *skinRPCClient) Current(ctx context.Context, in *SkinCurrentReq, opts ...liverpc.CallOption) (*SkinCurrentResp, error) {
	out := new(SkinCurrentResp)
	err := doRPCRequest(ctx, c.client, 1, "Skin.current", in, out, opts)
	if err != nil {
		return nil, err
	}
	return out, nil
}
