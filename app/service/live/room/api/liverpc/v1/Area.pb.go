// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: v1/Area.proto

package v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type AreaGetParentListReq struct {
	// 1播端 2看端
	SourceId int64 `protobuf:"varint,1,opt,name=source_id,json=sourceId,proto3" json:"source_id"`
}

func (m *AreaGetParentListReq) Reset()         { *m = AreaGetParentListReq{} }
func (m *AreaGetParentListReq) String() string { return proto.CompactTextString(m) }
func (*AreaGetParentListReq) ProtoMessage()    {}
func (*AreaGetParentListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_Area_5a8e9d615451257b, []int{0}
}
func (m *AreaGetParentListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AreaGetParentListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AreaGetParentListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AreaGetParentListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaGetParentListReq.Merge(dst, src)
}
func (m *AreaGetParentListReq) XXX_Size() int {
	return m.Size()
}
func (m *AreaGetParentListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaGetParentListReq.DiscardUnknown(m)
}

var xxx_messageInfo_AreaGetParentListReq proto.InternalMessageInfo

func (m *AreaGetParentListReq) GetSourceId() int64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

type AreaGetParentListResp struct {
	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	// msg
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	//
	Data []*AreaGetParentListResp_Info `protobuf:"bytes,3,rep,name=data" json:"data"`
}

func (m *AreaGetParentListResp) Reset()         { *m = AreaGetParentListResp{} }
func (m *AreaGetParentListResp) String() string { return proto.CompactTextString(m) }
func (*AreaGetParentListResp) ProtoMessage()    {}
func (*AreaGetParentListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_Area_5a8e9d615451257b, []int{1}
}
func (m *AreaGetParentListResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AreaGetParentListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AreaGetParentListResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AreaGetParentListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaGetParentListResp.Merge(dst, src)
}
func (m *AreaGetParentListResp) XXX_Size() int {
	return m.Size()
}
func (m *AreaGetParentListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaGetParentListResp.DiscardUnknown(m)
}

var xxx_messageInfo_AreaGetParentListResp proto.InternalMessageInfo

func (m *AreaGetParentListResp) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AreaGetParentListResp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *AreaGetParentListResp) GetData() []*AreaGetParentListResp_Info {
	if m != nil {
		return m.Data
	}
	return nil
}

type AreaGetParentListResp_Info struct {
	// 父分区id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 父分区名字
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
}

func (m *AreaGetParentListResp_Info) Reset()         { *m = AreaGetParentListResp_Info{} }
func (m *AreaGetParentListResp_Info) String() string { return proto.CompactTextString(m) }
func (*AreaGetParentListResp_Info) ProtoMessage()    {}
func (*AreaGetParentListResp_Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_Area_5a8e9d615451257b, []int{1, 0}
}
func (m *AreaGetParentListResp_Info) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AreaGetParentListResp_Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AreaGetParentListResp_Info.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AreaGetParentListResp_Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaGetParentListResp_Info.Merge(dst, src)
}
func (m *AreaGetParentListResp_Info) XXX_Size() int {
	return m.Size()
}
func (m *AreaGetParentListResp_Info) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaGetParentListResp_Info.DiscardUnknown(m)
}

var xxx_messageInfo_AreaGetParentListResp_Info proto.InternalMessageInfo

func (m *AreaGetParentListResp_Info) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AreaGetParentListResp_Info) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AreaGetDetailReq struct {
	// id表示二级分区id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (m *AreaGetDetailReq) Reset()         { *m = AreaGetDetailReq{} }
func (m *AreaGetDetailReq) String() string { return proto.CompactTextString(m) }
func (*AreaGetDetailReq) ProtoMessage()    {}
func (*AreaGetDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_Area_5a8e9d615451257b, []int{2}
}
func (m *AreaGetDetailReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AreaGetDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AreaGetDetailReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AreaGetDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaGetDetailReq.Merge(dst, src)
}
func (m *AreaGetDetailReq) XXX_Size() int {
	return m.Size()
}
func (m *AreaGetDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaGetDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_AreaGetDetailReq proto.InternalMessageInfo

func (m *AreaGetDetailReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type AreaGetDetailResp struct {
	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	// msg
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	// 分区详情信息
	Data *AreaGetDetailResp_AreaInfo `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *AreaGetDetailResp) Reset()         { *m = AreaGetDetailResp{} }
func (m *AreaGetDetailResp) String() string { return proto.CompactTextString(m) }
func (*AreaGetDetailResp) ProtoMessage()    {}
func (*AreaGetDetailResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_Area_5a8e9d615451257b, []int{3}
}
func (m *AreaGetDetailResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AreaGetDetailResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AreaGetDetailResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AreaGetDetailResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaGetDetailResp.Merge(dst, src)
}
func (m *AreaGetDetailResp) XXX_Size() int {
	return m.Size()
}
func (m *AreaGetDetailResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaGetDetailResp.DiscardUnknown(m)
}

var xxx_messageInfo_AreaGetDetailResp proto.InternalMessageInfo

func (m *AreaGetDetailResp) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AreaGetDetailResp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *AreaGetDetailResp) GetData() *AreaGetDetailResp_AreaInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type AreaGetDetailResp_AreaInfo struct {
	// 分区id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 父分区id
	ParentId string `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	// 对应的老分区id
	OldAreaId string `protobuf:"bytes,3,opt,name=old_area_id,json=oldAreaId,proto3" json:"old_area_id"`
	// 分区名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	// 父分区名称
	ParentName string `protobuf:"bytes,5,opt,name=parent_name,json=parentName,proto3" json:"parent_name"`
	// 绑定的活动id
	ActId string `protobuf:"bytes,6,opt,name=act_id,json=actId,proto3" json:"act_id"`
	// 0 默认 1 最热
	HotStatus string `protobuf:"bytes,7,opt,name=hot_status,json=hotStatus,proto3" json:"hot_status"`
	// 分区图标
	Pic string `protobuf:"bytes,8,opt,name=pic,proto3" json:"pic"`
}

func (m *AreaGetDetailResp_AreaInfo) Reset()         { *m = AreaGetDetailResp_AreaInfo{} }
func (m *AreaGetDetailResp_AreaInfo) String() string { return proto.CompactTextString(m) }
func (*AreaGetDetailResp_AreaInfo) ProtoMessage()    {}
func (*AreaGetDetailResp_AreaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_Area_5a8e9d615451257b, []int{3, 0}
}
func (m *AreaGetDetailResp_AreaInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AreaGetDetailResp_AreaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AreaGetDetailResp_AreaInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AreaGetDetailResp_AreaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaGetDetailResp_AreaInfo.Merge(dst, src)
}
func (m *AreaGetDetailResp_AreaInfo) XXX_Size() int {
	return m.Size()
}
func (m *AreaGetDetailResp_AreaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaGetDetailResp_AreaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AreaGetDetailResp_AreaInfo proto.InternalMessageInfo

func (m *AreaGetDetailResp_AreaInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AreaGetDetailResp_AreaInfo) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *AreaGetDetailResp_AreaInfo) GetOldAreaId() string {
	if m != nil {
		return m.OldAreaId
	}
	return ""
}

func (m *AreaGetDetailResp_AreaInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AreaGetDetailResp_AreaInfo) GetParentName() string {
	if m != nil {
		return m.ParentName
	}
	return ""
}

func (m *AreaGetDetailResp_AreaInfo) GetActId() string {
	if m != nil {
		return m.ActId
	}
	return ""
}

func (m *AreaGetDetailResp_AreaInfo) GetHotStatus() string {
	if m != nil {
		return m.HotStatus
	}
	return ""
}

func (m *AreaGetDetailResp_AreaInfo) GetPic() string {
	if m != nil {
		return m.Pic
	}
	return ""
}

func init() {
	proto.RegisterType((*AreaGetParentListReq)(nil), "room.v1.AreaGetParentListReq")
	proto.RegisterType((*AreaGetParentListResp)(nil), "room.v1.AreaGetParentListResp")
	proto.RegisterType((*AreaGetParentListResp_Info)(nil), "room.v1.AreaGetParentListResp.Info")
	proto.RegisterType((*AreaGetDetailReq)(nil), "room.v1.AreaGetDetailReq")
	proto.RegisterType((*AreaGetDetailResp)(nil), "room.v1.AreaGetDetailResp")
	proto.RegisterType((*AreaGetDetailResp_AreaInfo)(nil), "room.v1.AreaGetDetailResp.AreaInfo")
}
func (m *AreaGetParentListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AreaGetParentListReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.SourceId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintArea(dAtA, i, uint64(m.SourceId))
	}
	return i, nil
}

func (m *AreaGetParentListResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AreaGetParentListResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Code != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintArea(dAtA, i, uint64(m.Code))
	}
	if len(m.Msg) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.Msg)))
		i += copy(dAtA[i:], m.Msg)
	}
	if len(m.Data) > 0 {
		for _, msg := range m.Data {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintArea(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *AreaGetParentListResp_Info) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AreaGetParentListResp_Info) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintArea(dAtA, i, uint64(m.Id))
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	return i, nil
}

func (m *AreaGetDetailReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AreaGetDetailReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintArea(dAtA, i, uint64(m.Id))
	}
	return i, nil
}

func (m *AreaGetDetailResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AreaGetDetailResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Code != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintArea(dAtA, i, uint64(m.Code))
	}
	if len(m.Msg) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.Msg)))
		i += copy(dAtA[i:], m.Msg)
	}
	if m.Data != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintArea(dAtA, i, uint64(m.Data.Size()))
		n1, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	return i, nil
}

func (m *AreaGetDetailResp_AreaInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AreaGetDetailResp_AreaInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.ParentId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.ParentId)))
		i += copy(dAtA[i:], m.ParentId)
	}
	if len(m.OldAreaId) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.OldAreaId)))
		i += copy(dAtA[i:], m.OldAreaId)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.ParentName) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.ParentName)))
		i += copy(dAtA[i:], m.ParentName)
	}
	if len(m.ActId) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.ActId)))
		i += copy(dAtA[i:], m.ActId)
	}
	if len(m.HotStatus) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.HotStatus)))
		i += copy(dAtA[i:], m.HotStatus)
	}
	if len(m.Pic) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintArea(dAtA, i, uint64(len(m.Pic)))
		i += copy(dAtA[i:], m.Pic)
	}
	return i, nil
}

func encodeVarintArea(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AreaGetParentListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SourceId != 0 {
		n += 1 + sovArea(uint64(m.SourceId))
	}
	return n
}

func (m *AreaGetParentListResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovArea(uint64(m.Code))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovArea(uint64(l))
		}
	}
	return n
}

func (m *AreaGetParentListResp_Info) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovArea(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	return n
}

func (m *AreaGetDetailReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovArea(uint64(m.Id))
	}
	return n
}

func (m *AreaGetDetailResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovArea(uint64(m.Code))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovArea(uint64(l))
	}
	return n
}

func (m *AreaGetDetailResp_AreaInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	l = len(m.ParentId)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	l = len(m.OldAreaId)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	l = len(m.ParentName)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	l = len(m.ActId)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	l = len(m.HotStatus)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	l = len(m.Pic)
	if l > 0 {
		n += 1 + l + sovArea(uint64(l))
	}
	return n
}

func sovArea(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozArea(x uint64) (n int) {
	return sovArea(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AreaGetParentListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowArea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AreaGetParentListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AreaGetParentListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceId", wireType)
			}
			m.SourceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipArea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthArea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AreaGetParentListResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowArea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AreaGetParentListResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AreaGetParentListResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &AreaGetParentListResp_Info{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipArea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthArea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AreaGetParentListResp_Info) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowArea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipArea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthArea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AreaGetDetailReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowArea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AreaGetDetailReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AreaGetDetailReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipArea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthArea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AreaGetDetailResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowArea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AreaGetDetailResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AreaGetDetailResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &AreaGetDetailResp_AreaInfo{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipArea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthArea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AreaGetDetailResp_AreaInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowArea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AreaInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AreaInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldAreaId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldAreaId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HotStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HotStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowArea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthArea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipArea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthArea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipArea(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowArea
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowArea
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowArea
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthArea
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowArea
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipArea(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthArea = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowArea   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("v1/Area.proto", fileDescriptor_Area_5a8e9d615451257b) }

var fileDescriptor_Area_5a8e9d615451257b = []byte{
	// 505 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xcd, 0x8e, 0xd2, 0x50,
	0x14, 0xa6, 0x2d, 0x03, 0xf4, 0x10, 0xfc, 0xb9, 0x51, 0xc3, 0x90, 0xb1, 0x45, 0xdc, 0x10, 0x92,
	0x29, 0x32, 0x6e, 0xdd, 0x4c, 0x63, 0x62, 0x48, 0xcc, 0xc4, 0x5c, 0x77, 0x6e, 0xc8, 0xa5, 0xed,
	0x94, 0x26, 0xc0, 0x2d, 0xed, 0x85, 0xe7, 0x70, 0xed, 0xb3, 0xf8, 0x00, 0xae, 0xcc, 0xb8, 0x73,
	0xd5, 0x18, 0xd8, 0xf5, 0x29, 0xcc, 0x3d, 0xed, 0x4c, 0xab, 0x29, 0xb3, 0x9a, 0xcd, 0xc9, 0x39,
	0x5f, 0xcf, 0xdf, 0x77, 0xbe, 0x5b, 0xe8, 0xec, 0x26, 0xe3, 0xcb, 0xc8, 0x63, 0x56, 0x18, 0x71,
	0xc1, 0x49, 0x33, 0xe2, 0x7c, 0x65, 0xed, 0x26, 0xbd, 0x73, 0x3f, 0x10, 0x8b, 0xed, 0xdc, 0x72,
	0xf8, 0x6a, 0xec, 0x73, 0x9f, 0x8f, 0xf1, 0xfb, 0x7c, 0x7b, 0x8d, 0x11, 0x06, 0xe8, 0x65, 0x75,
	0x03, 0x1b, 0x9e, 0xc9, 0x2e, 0x1f, 0x3c, 0xf1, 0x89, 0x45, 0xde, 0x5a, 0x7c, 0x0c, 0x62, 0x41,
	0xbd, 0x0d, 0x19, 0x81, 0x1e, 0xf3, 0x6d, 0xe4, 0x78, 0xb3, 0xc0, 0xed, 0x2a, 0x7d, 0x65, 0xa8,
	0xd9, 0x9d, 0x34, 0x31, 0x0b, 0x90, 0xb6, 0x32, 0x77, 0xea, 0x0e, 0x7e, 0x29, 0xf0, 0xbc, 0xa2,
	0x49, 0x1c, 0x92, 0x33, 0xa8, 0x3b, 0xdc, 0xf5, 0xf2, 0x06, 0xad, 0x34, 0x31, 0x31, 0xa6, 0x68,
	0xc9, 0x29, 0x68, 0xab, 0xd8, 0xef, 0xaa, 0x7d, 0x65, 0xa8, 0xdb, 0xcd, 0x34, 0x31, 0x65, 0x48,
	0xa5, 0x21, 0x97, 0x50, 0x77, 0x99, 0x60, 0x5d, 0xad, 0xaf, 0x0d, 0xdb, 0x17, 0xaf, 0xad, 0x9c,
	0x9d, 0x55, 0x39, 0xc6, 0x9a, 0xae, 0xaf, 0x79, 0xd6, 0x5d, 0x16, 0x51, 0xb4, 0xbd, 0x77, 0x50,
	0x97, 0x38, 0x79, 0x01, 0xea, 0x1d, 0x85, 0x46, 0x9a, 0x98, 0x6a, 0xe0, 0x52, 0x35, 0x70, 0xe5,
	0x6e, 0x6b, 0xb6, 0xf2, 0xf2, 0xf1, 0x58, 0x2d, 0x63, 0x8a, 0x76, 0x30, 0x82, 0x27, 0xf9, 0xac,
	0xf7, 0x9e, 0x60, 0xc1, 0x52, 0xde, 0xe4, 0x48, 0xa7, 0xc1, 0x4f, 0x0d, 0x9e, 0xfe, 0x97, 0xfc,
	0x30, 0xdc, 0x95, 0x2a, 0xee, 0xc5, 0x08, 0x44, 0x2a, 0xb9, 0x7f, 0x57, 0xa1, 0x75, 0xfb, 0xb1,
	0xb4, 0xb6, 0xfe, 0xcf, 0x01, 0x46, 0xa0, 0x87, 0x78, 0x47, 0x29, 0x71, 0xb6, 0x08, 0x4a, 0x7c,
	0x07, 0xd2, 0x56, 0xe6, 0x4e, 0x5d, 0x32, 0x86, 0x36, 0x5f, 0xba, 0x33, 0x16, 0x79, 0x4c, 0x66,
	0x6b, 0x98, 0xfd, 0x38, 0x4d, 0xcc, 0x32, 0x4c, 0x75, 0xbe, 0x74, 0x71, 0x6c, 0x71, 0xdd, 0x7a,
	0xd5, 0x75, 0xc9, 0x1b, 0x68, 0xe7, 0x53, 0x30, 0xe9, 0xa4, 0x68, 0x57, 0x82, 0x29, 0x64, 0xc1,
	0x95, 0xac, 0x78, 0x05, 0x0d, 0xe6, 0xe0, 0xa6, 0x0d, 0x4c, 0x86, 0x34, 0x31, 0x73, 0x84, 0x9e,
	0x30, 0x47, 0xee, 0x78, 0x0e, 0xb0, 0xe0, 0x62, 0x16, 0x0b, 0x26, 0xb6, 0x71, 0xb7, 0x89, 0x69,
	0x8f, 0xd2, 0xc4, 0x2c, 0xa1, 0x54, 0x5f, 0x70, 0xf1, 0x19, 0x5d, 0xa9, 0x40, 0x18, 0x38, 0xdd,
	0x56, 0xa1, 0x40, 0x18, 0x38, 0x54, 0x9a, 0x8b, 0x6f, 0x0a, 0xd4, 0x25, 0x0f, 0x72, 0x05, 0x1d,
	0xbf, 0xfc, 0xda, 0xc8, 0xcb, 0xfb, 0x5e, 0xe2, 0xa6, 0x67, 0xdc, 0xff, 0x50, 0x89, 0x0d, 0xba,
	0x7f, 0xab, 0x20, 0x39, 0x3d, 0xa6, 0xec, 0xa6, 0xd7, 0x3b, 0x2e, 0xba, 0x7d, 0xf6, 0x63, 0x6f,
	0x28, 0x37, 0x7b, 0x43, 0xf9, 0xb3, 0x37, 0x94, 0xaf, 0x07, 0xa3, 0x76, 0x73, 0x30, 0x6a, 0xbf,
	0x0f, 0x46, 0xed, 0x8b, 0xba, 0x9b, 0xcc, 0x1b, 0xf8, 0x5b, 0xbf, 0xfd, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0xaf, 0x6b, 0xef, 0xa9, 0x1f, 0x04, 0x00, 0x00,
}
