// Code generated by protoc-gen-liverpc v0.1, DO NOT EDIT.
// source: v1/UserSetting.proto

package v1

import context "context"

import proto "github.com/golang/protobuf/proto"
import "go-common/library/net/rpc/liverpc"

var _ proto.Message // generate to suppress unused imports

// =====================
// UserSetting Interface
// =====================

type UserSetting interface {
	// * 移动端首页获取用户关注标签
	//
	GetTag(context.Context, *UserSettingGetTagReq) (*UserSettingGetTagResp, error)
}

// ===========================
// UserSetting Live Rpc Client
// ===========================

type userSettingRpcClient struct {
	client *liverpc.Client
}

// NewUserSettingRpcClient creates a Rpc client that implements the UserSetting interface.
// It communicates using Rpc and can be configured with a custom HTTPClient.
func NewUserSettingRpcClient(client *liverpc.Client) UserSetting {
	return &userSettingRpcClient{
		client: client,
	}
}

func (c *userSettingRpcClient) GetTag(ctx context.Context, in *UserSettingGetTagReq) (*UserSettingGetTagResp, error) {
	out := new(UserSettingGetTagResp)
	err := doRpcRequest(ctx, c.client, 1, "UserSetting.get_tag", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}
