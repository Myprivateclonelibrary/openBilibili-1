// Code generated by protoc-gen-liverpc v0.1, DO NOT EDIT.
// source: v1/Note.proto

package v1

import context "context"

import proto "github.com/golang/protobuf/proto"
import "go-common/library/net/rpc/liverpc"

var _ proto.Message // generate to suppress unused imports

// ==============
// Note Interface
// ==============

type Note interface {
	// * 大航海续费提醒
	//
	Get(context.Context, *NoteGetReq) (*NoteGetResp, error)
}

// ====================
// Note Live Rpc Client
// ====================

type noteRpcClient struct {
	client *liverpc.Client
}

// NewNoteRpcClient creates a Rpc client that implements the Note interface.
// It communicates using Rpc and can be configured with a custom HTTPClient.
func NewNoteRpcClient(client *liverpc.Client) Note {
	return &noteRpcClient{
		client: client,
	}
}

func (c *noteRpcClient) Get(ctx context.Context, in *NoteGetReq) (*NoteGetResp, error) {
	out := new(NoteGetResp)
	err := doRpcRequest(ctx, c.client, 1, "Note.get", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}
