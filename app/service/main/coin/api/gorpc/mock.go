// Code generated by MockGen. DO NOT EDIT.
// Source: coin.go

// Package coin is a generated GoMock package.
package coin

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "go-common/app/service/main/coin/model"
	reflect "reflect"
)

// MockRPC is a mock of RPC interface
type MockRPC struct {
	ctrl     *gomock.Controller
	recorder *MockRPCMockRecorder
}

// MockRPCMockRecorder is the mock recorder for MockRPC
type MockRPCMockRecorder struct {
	mock *MockRPC
}

// NewMockRPC creates a new mock instance
func NewMockRPC(ctrl *gomock.Controller) *MockRPC {
	mock := &MockRPC{ctrl: ctrl}
	mock.recorder = &MockRPCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRPC) EXPECT() *MockRPCMockRecorder {
	return m.recorder
}

// AddCoins mocks base method
func (m *MockRPC) AddCoins(c context.Context, arg *model.ArgAddCoin) error {
	ret := m.ctrl.Call(m, "AddCoins", c, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddCoins indicates an expected call of AddCoins
func (mr *MockRPCMockRecorder) AddCoins(c, arg interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCoins", reflect.TypeOf((*MockRPC)(nil).AddCoins), c, arg)
}

// ArchiveUserCoins mocks base method
func (m *MockRPC) ArchiveUserCoins(c context.Context, arg *model.ArgCoinInfo) (*model.ArchiveUserCoins, error) {
	ret := m.ctrl.Call(m, "ArchiveUserCoins", c, arg)
	ret0, _ := ret[0].(*model.ArchiveUserCoins)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ArchiveUserCoins indicates an expected call of ArchiveUserCoins
func (mr *MockRPCMockRecorder) ArchiveUserCoins(c, arg interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ArchiveUserCoins", reflect.TypeOf((*MockRPC)(nil).ArchiveUserCoins), c, arg)
}

// UserCoins mocks base method
func (m *MockRPC) UserCoins(c context.Context, arg *model.ArgCoinInfo) (float64, error) {
	ret := m.ctrl.Call(m, "UserCoins", c, arg)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserCoins indicates an expected call of UserCoins
func (mr *MockRPCMockRecorder) UserCoins(c, arg interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserCoins", reflect.TypeOf((*MockRPC)(nil).UserCoins), c, arg)
}
