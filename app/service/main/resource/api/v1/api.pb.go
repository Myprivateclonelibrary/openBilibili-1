// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: app/service/main/resource/api/v1/api.proto

package v1

/*
	use {app_id}.{version} as package name
*/

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// 相关推荐请求参数
type RelateRequest struct {
	// pgc seasonID
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MobiApp              string   `protobuf:"bytes,2,opt,name=mobi_app,json=mobiApp,proto3" json:"mobi_app,omitempty"`
	Device               string   `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	Build                int32    `protobuf:"varint,4,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelateRequest) Reset()         { *m = RelateRequest{} }
func (m *RelateRequest) String() string { return proto.CompactTextString(m) }
func (*RelateRequest) ProtoMessage()    {}
func (*RelateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_7649870860128c69, []int{0}
}
func (m *RelateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RelateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RelateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RelateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelateRequest.Merge(dst, src)
}
func (m *RelateRequest) XXX_Size() int {
	return m.Size()
}
func (m *RelateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RelateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RelateRequest proto.InternalMessageInfo

func (m *RelateRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RelateRequest) GetMobiApp() string {
	if m != nil {
		return m.MobiApp
	}
	return ""
}

func (m *RelateRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *RelateRequest) GetBuild() int32 {
	if m != nil {
		return m.Build
	}
	return 0
}

type SpecialReply struct {
	// 主键id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 特殊卡片标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 特殊卡片描述
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// 特殊卡片单列封面
	Cover string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	// 特殊卡片双列封面
	Scover string `protobuf:"bytes,5,opt,name=scover,proto3" json:"scover,omitempty"`
	// 跳转类型 URL:0 游戏小卡:1 稿件:2 番剧:3 直播:4 专栏:6 每日精选:7 歌单:8 歌曲:9 相簿:10 小视频:11
	ReType int32 `protobuf:"varint,6,opt,name=re_type,json=reType,proto3" json:"re_type,omitempty"`
	// 跳转参数
	ReValue string `protobuf:"bytes,7,opt,name=re_value,json=reValue,proto3" json:"re_value,omitempty"`
	// 角标文字
	Corner string `protobuf:"bytes,8,opt,name=corner,proto3" json:"corner,omitempty"`
	// 卡片类型 1特殊小卡 2特殊大卡 3置顶卡片
	Card int32 `protobuf:"varint,9,opt,name=card,proto3" json:"card,omitempty"`
	// 特殊大卡参数 如果是1020*300则封面比例为34 如果是1020*378则封面比例为27
	Siz string `protobuf:"bytes,10,opt,name=siz,proto3" json:"siz,omitempty"`
	// 位置
	Position             int32    `protobuf:"varint,11,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpecialReply) Reset()         { *m = SpecialReply{} }
func (m *SpecialReply) String() string { return proto.CompactTextString(m) }
func (*SpecialReply) ProtoMessage()    {}
func (*SpecialReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_7649870860128c69, []int{1}
}
func (m *SpecialReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SpecialReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SpecialReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SpecialReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecialReply.Merge(dst, src)
}
func (m *SpecialReply) XXX_Size() int {
	return m.Size()
}
func (m *SpecialReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecialReply.DiscardUnknown(m)
}

var xxx_messageInfo_SpecialReply proto.InternalMessageInfo

func (m *SpecialReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SpecialReply) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SpecialReply) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *SpecialReply) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *SpecialReply) GetScover() string {
	if m != nil {
		return m.Scover
	}
	return ""
}

func (m *SpecialReply) GetReType() int32 {
	if m != nil {
		return m.ReType
	}
	return 0
}

func (m *SpecialReply) GetReValue() string {
	if m != nil {
		return m.ReValue
	}
	return ""
}

func (m *SpecialReply) GetCorner() string {
	if m != nil {
		return m.Corner
	}
	return ""
}

func (m *SpecialReply) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

func (m *SpecialReply) GetSiz() string {
	if m != nil {
		return m.Siz
	}
	return ""
}

func (m *SpecialReply) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func init() {
	proto.RegisterType((*RelateRequest)(nil), "resource.service.v1.RelateRequest")
	proto.RegisterType((*SpecialReply)(nil), "resource.service.v1.SpecialReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceClient is the client API for Resource service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceClient interface {
	// 相关推荐列表
	// -400:RequestErr -404:NothingFound
	Relate(ctx context.Context, in *RelateRequest, opts ...grpc.CallOption) (*SpecialReply, error)
}

type resourceClient struct {
	cc *grpc.ClientConn
}

func NewResourceClient(cc *grpc.ClientConn) ResourceClient {
	return &resourceClient{cc}
}

func (c *resourceClient) Relate(ctx context.Context, in *RelateRequest, opts ...grpc.CallOption) (*SpecialReply, error) {
	out := new(SpecialReply)
	err := c.cc.Invoke(ctx, "/resource.service.v1.Resource/Relate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceServer is the server API for Resource service.
type ResourceServer interface {
	// 相关推荐列表
	// -400:RequestErr -404:NothingFound
	Relate(context.Context, *RelateRequest) (*SpecialReply, error)
}

func RegisterResourceServer(s *grpc.Server, srv ResourceServer) {
	s.RegisterService(&_Resource_serviceDesc, srv)
}

func _Resource_Relate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RelateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServer).Relate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resource.service.v1.Resource/Relate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServer).Relate(ctx, req.(*RelateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Resource_serviceDesc = grpc.ServiceDesc{
	ServiceName: "resource.service.v1.Resource",
	HandlerType: (*ResourceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Relate",
			Handler:    _Resource_Relate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app/service/main/resource/api/v1/api.proto",
}

func (m *RelateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RelateRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
	}
	if len(m.MobiApp) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintApi(dAtA, i, uint64(len(m.MobiApp)))
		i += copy(dAtA[i:], m.MobiApp)
	}
	if len(m.Device) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintApi(dAtA, i, uint64(len(m.Device)))
		i += copy(dAtA[i:], m.Device)
	}
	if m.Build != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.Build))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SpecialReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SpecialReply) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.Desc) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintApi(dAtA, i, uint64(len(m.Desc)))
		i += copy(dAtA[i:], m.Desc)
	}
	if len(m.Cover) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintApi(dAtA, i, uint64(len(m.Cover)))
		i += copy(dAtA[i:], m.Cover)
	}
	if len(m.Scover) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintApi(dAtA, i, uint64(len(m.Scover)))
		i += copy(dAtA[i:], m.Scover)
	}
	if m.ReType != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.ReType))
	}
	if len(m.ReValue) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintApi(dAtA, i, uint64(len(m.ReValue)))
		i += copy(dAtA[i:], m.ReValue)
	}
	if len(m.Corner) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintApi(dAtA, i, uint64(len(m.Corner)))
		i += copy(dAtA[i:], m.Corner)
	}
	if m.Card != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.Card))
	}
	if len(m.Siz) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintApi(dAtA, i, uint64(len(m.Siz)))
		i += copy(dAtA[i:], m.Siz)
	}
	if m.Position != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.Position))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *RelateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	l = len(m.MobiApp)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Device)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Build != 0 {
		n += 1 + sovApi(uint64(m.Build))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SpecialReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Scover)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ReType != 0 {
		n += 1 + sovApi(uint64(m.ReType))
	}
	l = len(m.ReValue)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Corner)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Card != 0 {
		n += 1 + sovApi(uint64(m.Card))
	}
	l = len(m.Siz)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Position != 0 {
		n += 1 + sovApi(uint64(m.Position))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RelateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RelateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RelateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MobiApp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MobiApp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Device = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			m.Build = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Build |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SpecialReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SpecialReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SpecialReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReType", wireType)
			}
			m.ReType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Corner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Corner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Card", wireType)
			}
			m.Card = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Card |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Siz", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Siz = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			m.Position = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Position |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowApi
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipApi(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthApi = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("app/service/main/resource/api/v1/api.proto", fileDescriptor_api_7649870860128c69)
}

var fileDescriptor_api_7649870860128c69 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4d, 0x4e, 0xeb, 0x30,
	0x14, 0x85, 0x5f, 0xd2, 0x26, 0x4d, 0xef, 0x7b, 0x0f, 0x55, 0xa6, 0x02, 0xd3, 0x41, 0x55, 0x32,
	0xea, 0x28, 0x51, 0x61, 0x05, 0xb0, 0x03, 0x0c, 0x62, 0x80, 0x84, 0x2a, 0xd7, 0xb9, 0x02, 0x4b,
	0x69, 0x6d, 0x9c, 0x1f, 0xa9, 0x8c, 0x59, 0x1c, 0x43, 0x96, 0x80, 0xba, 0x12, 0x64, 0x3b, 0x20,
	0x10, 0x9d, 0xdd, 0x2f, 0xbe, 0x39, 0xe7, 0xd8, 0x07, 0x72, 0xae, 0x75, 0x5e, 0xa1, 0x69, 0xa5,
	0xc0, 0x7c, 0xcd, 0xe5, 0x26, 0x37, 0x58, 0xa9, 0xc6, 0x08, 0xcc, 0xb9, 0x96, 0xf9, 0x83, 0xd1,
	0x22, 0x6f, 0x17, 0x76, 0xce, 0xb4, 0x51, 0xb5, 0x22, 0x87, 0x9f, 0xe7, 0x59, 0xf7, 0x57, 0xd6,
	0x2e, 0xd2, 0x47, 0xf8, 0xcf, 0xb0, 0xe4, 0x35, 0x32, 0x7c, 0x6a, 0xb0, 0xaa, 0xc9, 0x01, 0x84,
	0xb2, 0xa0, 0xc1, 0x2c, 0x98, 0xf7, 0x58, 0x28, 0x0b, 0x72, 0x02, 0xc9, 0x5a, 0xad, 0xe4, 0x92,
	0x6b, 0x4d, 0xc3, 0x59, 0x30, 0x1f, 0xb2, 0x81, 0xe5, 0x0b, 0xad, 0xc9, 0x11, 0xc4, 0x05, 0x5a,
	0x21, 0xda, 0x73, 0x07, 0x1d, 0x91, 0x31, 0x44, 0xab, 0x46, 0x96, 0x05, 0xed, 0xcf, 0x82, 0x79,
	0xc4, 0x3c, 0xa4, 0x2f, 0x21, 0xfc, 0xbb, 0xd6, 0x28, 0x24, 0x2f, 0x19, 0xea, 0x72, 0xfb, 0xcb,
	0x69, 0x0c, 0x51, 0x2d, 0xeb, 0x12, 0x3b, 0x1b, 0x0f, 0x84, 0x40, 0xbf, 0xc0, 0x4a, 0x74, 0x16,
	0x6e, 0xb6, 0x9b, 0x42, 0xb5, 0x68, 0x9c, 0xc1, 0x90, 0x79, 0xb0, 0x71, 0x2a, 0xff, 0x39, 0xf2,
	0x71, 0x3c, 0x91, 0x63, 0x18, 0x18, 0x5c, 0xd6, 0x5b, 0x8d, 0x34, 0x76, 0x81, 0x62, 0x83, 0x37,
	0x5b, 0x8d, 0xf6, 0x6a, 0x06, 0x97, 0x2d, 0x2f, 0x1b, 0xa4, 0x03, 0x7f, 0x35, 0x83, 0xb7, 0x16,
	0xad, 0x96, 0x50, 0x66, 0x83, 0x86, 0x26, 0x5e, 0xcb, 0x93, 0x4d, 0x23, 0xb8, 0x29, 0xe8, 0xd0,
	0x09, 0xb9, 0x99, 0x8c, 0xa0, 0x57, 0xc9, 0x67, 0x0a, 0x6e, 0xd1, 0x8e, 0x64, 0x02, 0x89, 0x56,
	0x95, 0xac, 0xa5, 0xda, 0xd0, 0xbf, 0x6e, 0xf3, 0x8b, 0xcf, 0xee, 0x21, 0x61, 0x5d, 0x0f, 0xe4,
	0x0a, 0x62, 0xff, 0xf8, 0x24, 0xcd, 0xf6, 0x94, 0x93, 0xfd, 0x68, 0x66, 0x72, 0xba, 0x77, 0xe7,
	0xfb, 0x93, 0xa6, 0x7f, 0x2e, 0x47, 0xaf, 0xbb, 0x69, 0xf0, 0xb6, 0x9b, 0x06, 0xef, 0xbb, 0x69,
	0x70, 0x17, 0xb6, 0x8b, 0x55, 0xec, 0xda, 0x3f, 0xff, 0x08, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x10,
	0x80, 0x31, 0x30, 0x02, 0x00, 0x00,
}
