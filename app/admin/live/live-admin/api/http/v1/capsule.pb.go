// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: capsule.proto

package v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetCoinListReqAdmin struct {
	// 页码，从1开始
	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty" form:"page" validate:"required"`
	// 页面的大小
	PageSize             int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" form:"page_size" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCoinListReqAdmin) Reset()         { *m = GetCoinListReqAdmin{} }
func (m *GetCoinListReqAdmin) String() string { return proto.CompactTextString(m) }
func (*GetCoinListReqAdmin) ProtoMessage()    {}
func (*GetCoinListReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{0}
}
func (m *GetCoinListReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCoinListReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCoinListReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetCoinListReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCoinListReqAdmin.Merge(dst, src)
}
func (m *GetCoinListReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *GetCoinListReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCoinListReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_GetCoinListReqAdmin proto.InternalMessageInfo

func (m *GetCoinListReqAdmin) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetCoinListReqAdmin) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type GetCoinListRespAdmin struct {
	Total                int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	TotalPage            int64                        `protobuf:"varint,2,opt,name=total_page,json=totalPage,proto3" json:"total_page"`
	List                 []*GetCoinListRespAdmin_List `protobuf:"bytes,3,rep,name=list" json:"list"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetCoinListRespAdmin) Reset()         { *m = GetCoinListRespAdmin{} }
func (m *GetCoinListRespAdmin) String() string { return proto.CompactTextString(m) }
func (*GetCoinListRespAdmin) ProtoMessage()    {}
func (*GetCoinListRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{1}
}
func (m *GetCoinListRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCoinListRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCoinListRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetCoinListRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCoinListRespAdmin.Merge(dst, src)
}
func (m *GetCoinListRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *GetCoinListRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCoinListRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_GetCoinListRespAdmin proto.InternalMessageInfo

func (m *GetCoinListRespAdmin) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetCoinListRespAdmin) GetTotalPage() int64 {
	if m != nil {
		return m.TotalPage
	}
	return 0
}

func (m *GetCoinListRespAdmin) GetList() []*GetCoinListRespAdmin_List {
	if m != nil {
		return m.List
	}
	return nil
}

type GetCoinListRespAdmin_List struct {
	// 扭蛋ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 名称 普通扭蛋, 梦幻扭蛋
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	// 转化数量
	ChangeNum int64 `protobuf:"varint,3,opt,name=change_num,json=changeNum,proto3" json:"change_num"`
	// 开始时间
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	// 结束时间
	EndTime string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	// 状态 0为下线，1为上线
	Status int64 `protobuf:"varint,6,opt,name=status,proto3" json:"status"`
	// 获得方式 1为所有瓜子道具，2为所有金瓜子道具，3为指定道具ID
	GiftType int64 `protobuf:"varint,7,opt,name=gift_type,json=giftType,proto3" json:"gift_type"`
	// 道具的ID
	GiftConfig string `protobuf:"bytes,8,opt,name=gift_config,json=giftConfig,proto3" json:"gift_config"`
	// 活动分区
	AreaIds              []*GetCoinListRespAdmin_List_AreaIds `protobuf:"bytes,9,rep,name=area_ids,json=areaIds" json:"area_ids"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *GetCoinListRespAdmin_List) Reset()         { *m = GetCoinListRespAdmin_List{} }
func (m *GetCoinListRespAdmin_List) String() string { return proto.CompactTextString(m) }
func (*GetCoinListRespAdmin_List) ProtoMessage()    {}
func (*GetCoinListRespAdmin_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{1, 0}
}
func (m *GetCoinListRespAdmin_List) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCoinListRespAdmin_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCoinListRespAdmin_List.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetCoinListRespAdmin_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCoinListRespAdmin_List.Merge(dst, src)
}
func (m *GetCoinListRespAdmin_List) XXX_Size() int {
	return m.Size()
}
func (m *GetCoinListRespAdmin_List) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCoinListRespAdmin_List.DiscardUnknown(m)
}

var xxx_messageInfo_GetCoinListRespAdmin_List proto.InternalMessageInfo

func (m *GetCoinListRespAdmin_List) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetCoinListRespAdmin_List) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetCoinListRespAdmin_List) GetChangeNum() int64 {
	if m != nil {
		return m.ChangeNum
	}
	return 0
}

func (m *GetCoinListRespAdmin_List) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *GetCoinListRespAdmin_List) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *GetCoinListRespAdmin_List) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetCoinListRespAdmin_List) GetGiftType() int64 {
	if m != nil {
		return m.GiftType
	}
	return 0
}

func (m *GetCoinListRespAdmin_List) GetGiftConfig() string {
	if m != nil {
		return m.GiftConfig
	}
	return ""
}

func (m *GetCoinListRespAdmin_List) GetAreaIds() []*GetCoinListRespAdmin_List_AreaIds {
	if m != nil {
		return m.AreaIds
	}
	return nil
}

type GetCoinListRespAdmin_List_AreaIds struct {
	// 父分区ID
	ParentId int64 `protobuf:"varint,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	// 是否全选
	IsAll int64 `protobuf:"varint,2,opt,name=is_all,json=isAll,proto3" json:"is_all"`
	// 子分区ID
	List                 []int64  `protobuf:"varint,3,rep,packed,name=list" json:"list"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCoinListRespAdmin_List_AreaIds) Reset()         { *m = GetCoinListRespAdmin_List_AreaIds{} }
func (m *GetCoinListRespAdmin_List_AreaIds) String() string { return proto.CompactTextString(m) }
func (*GetCoinListRespAdmin_List_AreaIds) ProtoMessage()    {}
func (*GetCoinListRespAdmin_List_AreaIds) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{1, 0, 0}
}
func (m *GetCoinListRespAdmin_List_AreaIds) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCoinListRespAdmin_List_AreaIds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCoinListRespAdmin_List_AreaIds.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetCoinListRespAdmin_List_AreaIds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCoinListRespAdmin_List_AreaIds.Merge(dst, src)
}
func (m *GetCoinListRespAdmin_List_AreaIds) XXX_Size() int {
	return m.Size()
}
func (m *GetCoinListRespAdmin_List_AreaIds) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCoinListRespAdmin_List_AreaIds.DiscardUnknown(m)
}

var xxx_messageInfo_GetCoinListRespAdmin_List_AreaIds proto.InternalMessageInfo

func (m *GetCoinListRespAdmin_List_AreaIds) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *GetCoinListRespAdmin_List_AreaIds) GetIsAll() int64 {
	if m != nil {
		return m.IsAll
	}
	return 0
}

func (m *GetCoinListRespAdmin_List_AreaIds) GetList() []int64 {
	if m != nil {
		return m.List
	}
	return nil
}

type UpdateCoinConfigReqAdmin struct {
	// 扭蛋ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id"`
	// 名称 普通扭蛋, 梦幻扭蛋
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty" form:"title" validate:"required"`
	// 转化数量
	ChangeNum int64 `protobuf:"varint,3,opt,name=change_num,json=changeNum,proto3" json:"change_num,omitempty" form:"change_num" validate:"required"`
	// 开始时间
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty" form:"start_time" validate:"required"`
	// 结束时间
	EndTime string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty" form:"end_time" validate:"required"`
	// 状态 0为下线，1为上线
	Status int64 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty" form:"status" validate:"required"`
	// 获得方式 1为所有瓜子道具，2为所有金瓜子道具，3为指定道具ID
	GiftType int64 `protobuf:"varint,7,opt,name=gift_type,json=giftType,proto3" json:"gift_type,omitempty" form:"gift_type" validate:"required"`
	// 道具的ID
	GiftConfig string `protobuf:"bytes,8,opt,name=gift_config,json=giftConfig,proto3" json:"gift_config,omitempty" form:"gift_config"`
	// 里面是父分区ID，是否全选，分区ID
	AreaIds              string   `protobuf:"bytes,9,opt,name=area_ids,json=areaIds,proto3" json:"area_ids,omitempty" form:"area_ids" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCoinConfigReqAdmin) Reset()         { *m = UpdateCoinConfigReqAdmin{} }
func (m *UpdateCoinConfigReqAdmin) String() string { return proto.CompactTextString(m) }
func (*UpdateCoinConfigReqAdmin) ProtoMessage()    {}
func (*UpdateCoinConfigReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{2}
}
func (m *UpdateCoinConfigReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateCoinConfigReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateCoinConfigReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdateCoinConfigReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCoinConfigReqAdmin.Merge(dst, src)
}
func (m *UpdateCoinConfigReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *UpdateCoinConfigReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCoinConfigReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCoinConfigReqAdmin proto.InternalMessageInfo

func (m *UpdateCoinConfigReqAdmin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateCoinConfigReqAdmin) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateCoinConfigReqAdmin) GetChangeNum() int64 {
	if m != nil {
		return m.ChangeNum
	}
	return 0
}

func (m *UpdateCoinConfigReqAdmin) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *UpdateCoinConfigReqAdmin) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *UpdateCoinConfigReqAdmin) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UpdateCoinConfigReqAdmin) GetGiftType() int64 {
	if m != nil {
		return m.GiftType
	}
	return 0
}

func (m *UpdateCoinConfigReqAdmin) GetGiftConfig() string {
	if m != nil {
		return m.GiftConfig
	}
	return ""
}

func (m *UpdateCoinConfigReqAdmin) GetAreaIds() string {
	if m != nil {
		return m.AreaIds
	}
	return ""
}

type UpdateCoinConfigRespAdmin struct {
	// 状态
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCoinConfigRespAdmin) Reset()         { *m = UpdateCoinConfigRespAdmin{} }
func (m *UpdateCoinConfigRespAdmin) String() string { return proto.CompactTextString(m) }
func (*UpdateCoinConfigRespAdmin) ProtoMessage()    {}
func (*UpdateCoinConfigRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{3}
}
func (m *UpdateCoinConfigRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateCoinConfigRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateCoinConfigRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdateCoinConfigRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCoinConfigRespAdmin.Merge(dst, src)
}
func (m *UpdateCoinConfigRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *UpdateCoinConfigRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCoinConfigRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCoinConfigRespAdmin proto.InternalMessageInfo

func (m *UpdateCoinConfigRespAdmin) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type UpdateCoinStatusReqAdmin struct {
	// 扭蛋币id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id" validate:"required"`
	// 状态 0为下线，1为上线
	Status               int64    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty" form:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCoinStatusReqAdmin) Reset()         { *m = UpdateCoinStatusReqAdmin{} }
func (m *UpdateCoinStatusReqAdmin) String() string { return proto.CompactTextString(m) }
func (*UpdateCoinStatusReqAdmin) ProtoMessage()    {}
func (*UpdateCoinStatusReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{4}
}
func (m *UpdateCoinStatusReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateCoinStatusReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateCoinStatusReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdateCoinStatusReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCoinStatusReqAdmin.Merge(dst, src)
}
func (m *UpdateCoinStatusReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *UpdateCoinStatusReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCoinStatusReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCoinStatusReqAdmin proto.InternalMessageInfo

func (m *UpdateCoinStatusReqAdmin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateCoinStatusReqAdmin) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type UpdateCoinStatusRespAdmin struct {
	// 状态
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCoinStatusRespAdmin) Reset()         { *m = UpdateCoinStatusRespAdmin{} }
func (m *UpdateCoinStatusRespAdmin) String() string { return proto.CompactTextString(m) }
func (*UpdateCoinStatusRespAdmin) ProtoMessage()    {}
func (*UpdateCoinStatusRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{5}
}
func (m *UpdateCoinStatusRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateCoinStatusRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateCoinStatusRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdateCoinStatusRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCoinStatusRespAdmin.Merge(dst, src)
}
func (m *UpdateCoinStatusRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *UpdateCoinStatusRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCoinStatusRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCoinStatusRespAdmin proto.InternalMessageInfo

func (m *UpdateCoinStatusRespAdmin) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type DeleteCoinReqAdmin struct {
	// 扭蛋币id
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCoinReqAdmin) Reset()         { *m = DeleteCoinReqAdmin{} }
func (m *DeleteCoinReqAdmin) String() string { return proto.CompactTextString(m) }
func (*DeleteCoinReqAdmin) ProtoMessage()    {}
func (*DeleteCoinReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{6}
}
func (m *DeleteCoinReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteCoinReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteCoinReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeleteCoinReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCoinReqAdmin.Merge(dst, src)
}
func (m *DeleteCoinReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *DeleteCoinReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCoinReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCoinReqAdmin proto.InternalMessageInfo

func (m *DeleteCoinReqAdmin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteCoinRespAdmin struct {
	// 状态
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCoinRespAdmin) Reset()         { *m = DeleteCoinRespAdmin{} }
func (m *DeleteCoinRespAdmin) String() string { return proto.CompactTextString(m) }
func (*DeleteCoinRespAdmin) ProtoMessage()    {}
func (*DeleteCoinRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{7}
}
func (m *DeleteCoinRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteCoinRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteCoinRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeleteCoinRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCoinRespAdmin.Merge(dst, src)
}
func (m *DeleteCoinRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *DeleteCoinRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCoinRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCoinRespAdmin proto.InternalMessageInfo

func (m *DeleteCoinRespAdmin) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type GetPoolListReqAdmin struct {
	// 页码
	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty" form:"page" validate:"required"`
	// 页面的大小
	PageSize             int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" form:"page_size" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPoolListReqAdmin) Reset()         { *m = GetPoolListReqAdmin{} }
func (m *GetPoolListReqAdmin) String() string { return proto.CompactTextString(m) }
func (*GetPoolListReqAdmin) ProtoMessage()    {}
func (*GetPoolListReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{8}
}
func (m *GetPoolListReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPoolListReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPoolListReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPoolListReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPoolListReqAdmin.Merge(dst, src)
}
func (m *GetPoolListReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *GetPoolListReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPoolListReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_GetPoolListReqAdmin proto.InternalMessageInfo

func (m *GetPoolListReqAdmin) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetPoolListReqAdmin) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type GetPoolListRespAdmin struct {
	// 总数
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	// 总页数
	TotalPage            int64                        `protobuf:"varint,2,opt,name=total_page,json=totalPage,proto3" json:"total_page"`
	List                 []*GetPoolListRespAdmin_List `protobuf:"bytes,3,rep,name=list" json:"list"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetPoolListRespAdmin) Reset()         { *m = GetPoolListRespAdmin{} }
func (m *GetPoolListRespAdmin) String() string { return proto.CompactTextString(m) }
func (*GetPoolListRespAdmin) ProtoMessage()    {}
func (*GetPoolListRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{9}
}
func (m *GetPoolListRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPoolListRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPoolListRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPoolListRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPoolListRespAdmin.Merge(dst, src)
}
func (m *GetPoolListRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *GetPoolListRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPoolListRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_GetPoolListRespAdmin proto.InternalMessageInfo

func (m *GetPoolListRespAdmin) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetPoolListRespAdmin) GetTotalPage() int64 {
	if m != nil {
		return m.TotalPage
	}
	return 0
}

func (m *GetPoolListRespAdmin) GetList() []*GetPoolListRespAdmin_List {
	if m != nil {
		return m.List
	}
	return nil
}

type GetPoolListRespAdmin_List struct {
	// 奖池id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 扭蛋名称
	CoinId int64 `protobuf:"varint,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id"`
	// 奖池名称
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	// 奖池名称
	CoinTitle string `protobuf:"bytes,8,opt,name=coin_title,json=coinTitle,proto3" json:"coin_title"`
	// 开始时间
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	// 结束时间
	EndTime string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	// 状态 0为下线，1为上线
	Status int64 `protobuf:"varint,6,opt,name=status,proto3" json:"status"`
	// 描述
	Rule                 string   `protobuf:"bytes,7,opt,name=rule,proto3" json:"rule"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPoolListRespAdmin_List) Reset()         { *m = GetPoolListRespAdmin_List{} }
func (m *GetPoolListRespAdmin_List) String() string { return proto.CompactTextString(m) }
func (*GetPoolListRespAdmin_List) ProtoMessage()    {}
func (*GetPoolListRespAdmin_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{9, 0}
}
func (m *GetPoolListRespAdmin_List) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPoolListRespAdmin_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPoolListRespAdmin_List.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPoolListRespAdmin_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPoolListRespAdmin_List.Merge(dst, src)
}
func (m *GetPoolListRespAdmin_List) XXX_Size() int {
	return m.Size()
}
func (m *GetPoolListRespAdmin_List) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPoolListRespAdmin_List.DiscardUnknown(m)
}

var xxx_messageInfo_GetPoolListRespAdmin_List proto.InternalMessageInfo

func (m *GetPoolListRespAdmin_List) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetPoolListRespAdmin_List) GetCoinId() int64 {
	if m != nil {
		return m.CoinId
	}
	return 0
}

func (m *GetPoolListRespAdmin_List) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetPoolListRespAdmin_List) GetCoinTitle() string {
	if m != nil {
		return m.CoinTitle
	}
	return ""
}

func (m *GetPoolListRespAdmin_List) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *GetPoolListRespAdmin_List) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *GetPoolListRespAdmin_List) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetPoolListRespAdmin_List) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

type UpdatePoolReqAdmin struct {
	// 奖池id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id"`
	// 扭蛋名称
	CoinId int64 `protobuf:"varint,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty" form:"coin_id" validate:"required"`
	// 奖池名称
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty" form:"title" validate:"required"`
	// 开始时间
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty" form:"start_time" validate:"required"`
	// 结束时间
	EndTime string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty" form:"end_time" validate:"required"`
	// 描述
	Rule                 string   `protobuf:"bytes,6,opt,name=rule,proto3" json:"rule,omitempty" form:"rule" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePoolReqAdmin) Reset()         { *m = UpdatePoolReqAdmin{} }
func (m *UpdatePoolReqAdmin) String() string { return proto.CompactTextString(m) }
func (*UpdatePoolReqAdmin) ProtoMessage()    {}
func (*UpdatePoolReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{10}
}
func (m *UpdatePoolReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdatePoolReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdatePoolReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdatePoolReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePoolReqAdmin.Merge(dst, src)
}
func (m *UpdatePoolReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *UpdatePoolReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePoolReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePoolReqAdmin proto.InternalMessageInfo

func (m *UpdatePoolReqAdmin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdatePoolReqAdmin) GetCoinId() int64 {
	if m != nil {
		return m.CoinId
	}
	return 0
}

func (m *UpdatePoolReqAdmin) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdatePoolReqAdmin) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *UpdatePoolReqAdmin) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *UpdatePoolReqAdmin) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

type UpdatePoolRespAdmin struct {
	// 状态
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePoolRespAdmin) Reset()         { *m = UpdatePoolRespAdmin{} }
func (m *UpdatePoolRespAdmin) String() string { return proto.CompactTextString(m) }
func (*UpdatePoolRespAdmin) ProtoMessage()    {}
func (*UpdatePoolRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{11}
}
func (m *UpdatePoolRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdatePoolRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdatePoolRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdatePoolRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePoolRespAdmin.Merge(dst, src)
}
func (m *UpdatePoolRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *UpdatePoolRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePoolRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePoolRespAdmin proto.InternalMessageInfo

func (m *UpdatePoolRespAdmin) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type DeletePoolReqAdmin struct {
	// 奖池id
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePoolReqAdmin) Reset()         { *m = DeletePoolReqAdmin{} }
func (m *DeletePoolReqAdmin) String() string { return proto.CompactTextString(m) }
func (*DeletePoolReqAdmin) ProtoMessage()    {}
func (*DeletePoolReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{12}
}
func (m *DeletePoolReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeletePoolReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeletePoolReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeletePoolReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePoolReqAdmin.Merge(dst, src)
}
func (m *DeletePoolReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *DeletePoolReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePoolReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePoolReqAdmin proto.InternalMessageInfo

func (m *DeletePoolReqAdmin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeletePoolRespAdmin struct {
	// 状态
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePoolRespAdmin) Reset()         { *m = DeletePoolRespAdmin{} }
func (m *DeletePoolRespAdmin) String() string { return proto.CompactTextString(m) }
func (*DeletePoolRespAdmin) ProtoMessage()    {}
func (*DeletePoolRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{13}
}
func (m *DeletePoolRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeletePoolRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeletePoolRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeletePoolRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePoolRespAdmin.Merge(dst, src)
}
func (m *DeletePoolRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *DeletePoolRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePoolRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePoolRespAdmin proto.InternalMessageInfo

func (m *DeletePoolRespAdmin) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type UpdatePoolStatusReqAdmin struct {
	// 奖池id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id" validate:"required"`
	// 状态 0为未上线，1为上线
	Status               int64    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty" form:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePoolStatusReqAdmin) Reset()         { *m = UpdatePoolStatusReqAdmin{} }
func (m *UpdatePoolStatusReqAdmin) String() string { return proto.CompactTextString(m) }
func (*UpdatePoolStatusReqAdmin) ProtoMessage()    {}
func (*UpdatePoolStatusReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{14}
}
func (m *UpdatePoolStatusReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdatePoolStatusReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdatePoolStatusReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdatePoolStatusReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePoolStatusReqAdmin.Merge(dst, src)
}
func (m *UpdatePoolStatusReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *UpdatePoolStatusReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePoolStatusReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePoolStatusReqAdmin proto.InternalMessageInfo

func (m *UpdatePoolStatusReqAdmin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdatePoolStatusReqAdmin) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type UpdatePoolStatusRespAdmin struct {
	// 状态
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePoolStatusRespAdmin) Reset()         { *m = UpdatePoolStatusRespAdmin{} }
func (m *UpdatePoolStatusRespAdmin) String() string { return proto.CompactTextString(m) }
func (*UpdatePoolStatusRespAdmin) ProtoMessage()    {}
func (*UpdatePoolStatusRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{15}
}
func (m *UpdatePoolStatusRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdatePoolStatusRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdatePoolStatusRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdatePoolStatusRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePoolStatusRespAdmin.Merge(dst, src)
}
func (m *UpdatePoolStatusRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *UpdatePoolStatusRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePoolStatusRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePoolStatusRespAdmin proto.InternalMessageInfo

func (m *UpdatePoolStatusRespAdmin) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type GetPoolPrizeReqAdmin struct {
	// 奖池id
	PoolId               int64    `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty" form:"pool_id" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPoolPrizeReqAdmin) Reset()         { *m = GetPoolPrizeReqAdmin{} }
func (m *GetPoolPrizeReqAdmin) String() string { return proto.CompactTextString(m) }
func (*GetPoolPrizeReqAdmin) ProtoMessage()    {}
func (*GetPoolPrizeReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{16}
}
func (m *GetPoolPrizeReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPoolPrizeReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPoolPrizeReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPoolPrizeReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPoolPrizeReqAdmin.Merge(dst, src)
}
func (m *GetPoolPrizeReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *GetPoolPrizeReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPoolPrizeReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_GetPoolPrizeReqAdmin proto.InternalMessageInfo

func (m *GetPoolPrizeReqAdmin) GetPoolId() int64 {
	if m != nil {
		return m.PoolId
	}
	return 0
}

type GetPoolPrizeRespAdmin struct {
	List                 []*GetPoolPrizeRespAdmin_List `protobuf:"bytes,1,rep,name=list" json:"list"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetPoolPrizeRespAdmin) Reset()         { *m = GetPoolPrizeRespAdmin{} }
func (m *GetPoolPrizeRespAdmin) String() string { return proto.CompactTextString(m) }
func (*GetPoolPrizeRespAdmin) ProtoMessage()    {}
func (*GetPoolPrizeRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{17}
}
func (m *GetPoolPrizeRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPoolPrizeRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPoolPrizeRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPoolPrizeRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPoolPrizeRespAdmin.Merge(dst, src)
}
func (m *GetPoolPrizeRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *GetPoolPrizeRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPoolPrizeRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_GetPoolPrizeRespAdmin proto.InternalMessageInfo

func (m *GetPoolPrizeRespAdmin) GetList() []*GetPoolPrizeRespAdmin_List {
	if m != nil {
		return m.List
	}
	return nil
}

type GetPoolPrizeRespAdmin_List struct {
	// 奖励id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 奖池id
	PoolId int64 `protobuf:"varint,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id"`
	// 奖品类型 1为道具，2为头衔，3为经验原石，4为经验曜石，5为贤者之石，6为小号小电视，7为舰长守护，8为提督守护，9为总督守护
	Type int64 `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
	// 数量
	Num int64 `protobuf:"varint,4,opt,name=num,proto3" json:"num"`
	// 奖品真实id
	ObjectId int64 `protobuf:"varint,5,opt,name=object_id,json=objectId,proto3" json:"object_id"`
	// web端图片
	WebUrl string `protobuf:"bytes,6,opt,name=web_url,json=webUrl,proto3" json:"web_url"`
	// 移动端图片
	MobileUrl string `protobuf:"bytes,7,opt,name=mobile_url,json=mobileUrl,proto3" json:"mobile_url"`
	// 奖励描述
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description"`
	// 跳转地址
	JumpUrl string `protobuf:"bytes,9,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url"`
	// 概率类型 1为普通，2为固定每天，3为固定每周
	ProType int64 `protobuf:"varint,10,opt,name=pro_type,json=proType,proto3" json:"pro_type"`
	// 概率，3位小数，''为另一种概率模式
	Chance string `protobuf:"bytes,11,opt,name=chance,proto3" json:"chance"`
	// 循环的数量 0为另一种概率模式
	Loop int64 `protobuf:"varint,12,opt,name=loop,proto3" json:"loop"`
	// 限制数量 0为另一种概率模式
	Limit int64 `protobuf:"varint,13,opt,name=limit,proto3" json:"limit"`
	// 奖励名称
	Name string `protobuf:"bytes,14,opt,name=name,proto3" json:"name"`
	// 权重
	Weight int64 `protobuf:"varint,15,opt,name=weight,proto3" json:"weight"`
	// 白名单用户
	WhiteUids string `protobuf:"bytes,16,opt,name=white_uids,json=whiteUids,proto3" json:"white_uids"`
	// 过期类型
	Expire               int64    `protobuf:"varint,17,opt,name=expire,proto3" json:"expire"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPoolPrizeRespAdmin_List) Reset()         { *m = GetPoolPrizeRespAdmin_List{} }
func (m *GetPoolPrizeRespAdmin_List) String() string { return proto.CompactTextString(m) }
func (*GetPoolPrizeRespAdmin_List) ProtoMessage()    {}
func (*GetPoolPrizeRespAdmin_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{17, 0}
}
func (m *GetPoolPrizeRespAdmin_List) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPoolPrizeRespAdmin_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPoolPrizeRespAdmin_List.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPoolPrizeRespAdmin_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPoolPrizeRespAdmin_List.Merge(dst, src)
}
func (m *GetPoolPrizeRespAdmin_List) XXX_Size() int {
	return m.Size()
}
func (m *GetPoolPrizeRespAdmin_List) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPoolPrizeRespAdmin_List.DiscardUnknown(m)
}

var xxx_messageInfo_GetPoolPrizeRespAdmin_List proto.InternalMessageInfo

func (m *GetPoolPrizeRespAdmin_List) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetPoolPrizeRespAdmin_List) GetPoolId() int64 {
	if m != nil {
		return m.PoolId
	}
	return 0
}

func (m *GetPoolPrizeRespAdmin_List) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetPoolPrizeRespAdmin_List) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *GetPoolPrizeRespAdmin_List) GetObjectId() int64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *GetPoolPrizeRespAdmin_List) GetWebUrl() string {
	if m != nil {
		return m.WebUrl
	}
	return ""
}

func (m *GetPoolPrizeRespAdmin_List) GetMobileUrl() string {
	if m != nil {
		return m.MobileUrl
	}
	return ""
}

func (m *GetPoolPrizeRespAdmin_List) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetPoolPrizeRespAdmin_List) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *GetPoolPrizeRespAdmin_List) GetProType() int64 {
	if m != nil {
		return m.ProType
	}
	return 0
}

func (m *GetPoolPrizeRespAdmin_List) GetChance() string {
	if m != nil {
		return m.Chance
	}
	return ""
}

func (m *GetPoolPrizeRespAdmin_List) GetLoop() int64 {
	if m != nil {
		return m.Loop
	}
	return 0
}

func (m *GetPoolPrizeRespAdmin_List) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetPoolPrizeRespAdmin_List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetPoolPrizeRespAdmin_List) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *GetPoolPrizeRespAdmin_List) GetWhiteUids() string {
	if m != nil {
		return m.WhiteUids
	}
	return ""
}

func (m *GetPoolPrizeRespAdmin_List) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

type UpdatePoolPrizeReqAdmin struct {
	// 奖励id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id"`
	// 奖池id
	PoolId int64 `protobuf:"varint,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty" form:"pool_id"`
	// 奖品类型 1为道具，2为头衔，3为经验原石，4为经验曜石，5为贤者之石，6为小号小电视，7为舰长守护，8为提督守护，9为总督守护
	Type int64 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty" form:"type" validate:"required"`
	// 数量
	Num int64 `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty" form:"num" validate:"required"`
	// 奖品真实id
	ObjectId int64 `protobuf:"varint,5,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty" form:"object_id"`
	// 过期时间
	Expire int64 `protobuf:"varint,6,opt,name=expire,proto3" json:"expire,omitempty" form:"expire"`
	// web端图片
	WebUrl string `protobuf:"bytes,7,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty" form:"web_url" validate:"required"`
	// 移动端图片
	MobileUrl string `protobuf:"bytes,8,opt,name=mobile_url,json=mobileUrl,proto3" json:"mobile_url,omitempty" form:"mobile_url" validate:"required"`
	// 奖励描述
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty" form:"description" validate:"required"`
	// 跳转地址
	JumpUrl string `protobuf:"bytes,10,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty" form:"jump_url"`
	// 概率类型 1为普通，2为固定每天，3为固定每周，4位白名单
	ProType int64 `protobuf:"varint,11,opt,name=pro_type,json=proType,proto3" json:"pro_type,omitempty" form:"pro_type" validate:"required"`
	// 概率，3位小数，''为另一种概率模式
	Chance string `protobuf:"bytes,12,opt,name=chance,proto3" json:"chance,omitempty" form:"chance"`
	// 循环的数量 0为另一种概率模式
	Loop int64 `protobuf:"varint,13,opt,name=loop,proto3" json:"loop,omitempty" form:"loop"`
	// 限制数量 0为另一种概率模式
	Limit int64 `protobuf:"varint,14,opt,name=limit,proto3" json:"limit,omitempty" form:"limit"`
	// 权重
	Weight int64 `protobuf:"varint,15,opt,name=weight,proto3" json:"weight,omitempty" form:"weight"`
	// 白名单用户
	WhiteUids            string   `protobuf:"bytes,16,opt,name=white_uids,json=whiteUids,proto3" json:"white_uids,omitempty" form:"white_uids"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePoolPrizeReqAdmin) Reset()         { *m = UpdatePoolPrizeReqAdmin{} }
func (m *UpdatePoolPrizeReqAdmin) String() string { return proto.CompactTextString(m) }
func (*UpdatePoolPrizeReqAdmin) ProtoMessage()    {}
func (*UpdatePoolPrizeReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{18}
}
func (m *UpdatePoolPrizeReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdatePoolPrizeReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdatePoolPrizeReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdatePoolPrizeReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePoolPrizeReqAdmin.Merge(dst, src)
}
func (m *UpdatePoolPrizeReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *UpdatePoolPrizeReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePoolPrizeReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePoolPrizeReqAdmin proto.InternalMessageInfo

func (m *UpdatePoolPrizeReqAdmin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdatePoolPrizeReqAdmin) GetPoolId() int64 {
	if m != nil {
		return m.PoolId
	}
	return 0
}

func (m *UpdatePoolPrizeReqAdmin) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UpdatePoolPrizeReqAdmin) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *UpdatePoolPrizeReqAdmin) GetObjectId() int64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *UpdatePoolPrizeReqAdmin) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *UpdatePoolPrizeReqAdmin) GetWebUrl() string {
	if m != nil {
		return m.WebUrl
	}
	return ""
}

func (m *UpdatePoolPrizeReqAdmin) GetMobileUrl() string {
	if m != nil {
		return m.MobileUrl
	}
	return ""
}

func (m *UpdatePoolPrizeReqAdmin) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdatePoolPrizeReqAdmin) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *UpdatePoolPrizeReqAdmin) GetProType() int64 {
	if m != nil {
		return m.ProType
	}
	return 0
}

func (m *UpdatePoolPrizeReqAdmin) GetChance() string {
	if m != nil {
		return m.Chance
	}
	return ""
}

func (m *UpdatePoolPrizeReqAdmin) GetLoop() int64 {
	if m != nil {
		return m.Loop
	}
	return 0
}

func (m *UpdatePoolPrizeReqAdmin) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *UpdatePoolPrizeReqAdmin) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *UpdatePoolPrizeReqAdmin) GetWhiteUids() string {
	if m != nil {
		return m.WhiteUids
	}
	return ""
}

type UpdatePoolPrizeRespAdmin struct {
	// 状态
	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	// 新增id
	PrizeId              int64    `protobuf:"varint,2,opt,name=prize_id,json=prizeId,proto3" json:"prize_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePoolPrizeRespAdmin) Reset()         { *m = UpdatePoolPrizeRespAdmin{} }
func (m *UpdatePoolPrizeRespAdmin) String() string { return proto.CompactTextString(m) }
func (*UpdatePoolPrizeRespAdmin) ProtoMessage()    {}
func (*UpdatePoolPrizeRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{19}
}
func (m *UpdatePoolPrizeRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdatePoolPrizeRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdatePoolPrizeRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdatePoolPrizeRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePoolPrizeRespAdmin.Merge(dst, src)
}
func (m *UpdatePoolPrizeRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *UpdatePoolPrizeRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePoolPrizeRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePoolPrizeRespAdmin proto.InternalMessageInfo

func (m *UpdatePoolPrizeRespAdmin) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *UpdatePoolPrizeRespAdmin) GetPrizeId() int64 {
	if m != nil {
		return m.PrizeId
	}
	return 0
}

type DeletePoolPrizeReqAdmin struct {
	// 奖励id
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePoolPrizeReqAdmin) Reset()         { *m = DeletePoolPrizeReqAdmin{} }
func (m *DeletePoolPrizeReqAdmin) String() string { return proto.CompactTextString(m) }
func (*DeletePoolPrizeReqAdmin) ProtoMessage()    {}
func (*DeletePoolPrizeReqAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{20}
}
func (m *DeletePoolPrizeReqAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeletePoolPrizeReqAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeletePoolPrizeReqAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeletePoolPrizeReqAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePoolPrizeReqAdmin.Merge(dst, src)
}
func (m *DeletePoolPrizeReqAdmin) XXX_Size() int {
	return m.Size()
}
func (m *DeletePoolPrizeReqAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePoolPrizeReqAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePoolPrizeReqAdmin proto.InternalMessageInfo

func (m *DeletePoolPrizeReqAdmin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeletePoolPrizeRespAdmin struct {
	// 状态
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePoolPrizeRespAdmin) Reset()         { *m = DeletePoolPrizeRespAdmin{} }
func (m *DeletePoolPrizeRespAdmin) String() string { return proto.CompactTextString(m) }
func (*DeletePoolPrizeRespAdmin) ProtoMessage()    {}
func (*DeletePoolPrizeRespAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{21}
}
func (m *DeletePoolPrizeRespAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeletePoolPrizeRespAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeletePoolPrizeRespAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeletePoolPrizeRespAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePoolPrizeRespAdmin.Merge(dst, src)
}
func (m *DeletePoolPrizeRespAdmin) XXX_Size() int {
	return m.Size()
}
func (m *DeletePoolPrizeRespAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePoolPrizeRespAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePoolPrizeRespAdmin proto.InternalMessageInfo

func (m *DeletePoolPrizeRespAdmin) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type GetPrizeTypeReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPrizeTypeReq) Reset()         { *m = GetPrizeTypeReq{} }
func (m *GetPrizeTypeReq) String() string { return proto.CompactTextString(m) }
func (*GetPrizeTypeReq) ProtoMessage()    {}
func (*GetPrizeTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{22}
}
func (m *GetPrizeTypeReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPrizeTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPrizeTypeReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPrizeTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrizeTypeReq.Merge(dst, src)
}
func (m *GetPrizeTypeReq) XXX_Size() int {
	return m.Size()
}
func (m *GetPrizeTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrizeTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrizeTypeReq proto.InternalMessageInfo

type GetPrizeTypeResp struct {
	List                 []*GetPrizeTypeResp_List `protobuf:"bytes,3,rep,name=list" json:"list"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetPrizeTypeResp) Reset()         { *m = GetPrizeTypeResp{} }
func (m *GetPrizeTypeResp) String() string { return proto.CompactTextString(m) }
func (*GetPrizeTypeResp) ProtoMessage()    {}
func (*GetPrizeTypeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{23}
}
func (m *GetPrizeTypeResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPrizeTypeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPrizeTypeResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPrizeTypeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrizeTypeResp.Merge(dst, src)
}
func (m *GetPrizeTypeResp) XXX_Size() int {
	return m.Size()
}
func (m *GetPrizeTypeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrizeTypeResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrizeTypeResp proto.InternalMessageInfo

func (m *GetPrizeTypeResp) GetList() []*GetPrizeTypeResp_List {
	if m != nil {
		return m.List
	}
	return nil
}

type GetPrizeTypeResp_List struct {
	//
	Type int64 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	//
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPrizeTypeResp_List) Reset()         { *m = GetPrizeTypeResp_List{} }
func (m *GetPrizeTypeResp_List) String() string { return proto.CompactTextString(m) }
func (*GetPrizeTypeResp_List) ProtoMessage()    {}
func (*GetPrizeTypeResp_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{23, 0}
}
func (m *GetPrizeTypeResp_List) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPrizeTypeResp_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPrizeTypeResp_List.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPrizeTypeResp_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrizeTypeResp_List.Merge(dst, src)
}
func (m *GetPrizeTypeResp_List) XXX_Size() int {
	return m.Size()
}
func (m *GetPrizeTypeResp_List) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrizeTypeResp_List.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrizeTypeResp_List proto.InternalMessageInfo

func (m *GetPrizeTypeResp_List) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetPrizeTypeResp_List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPrizeExpireReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPrizeExpireReq) Reset()         { *m = GetPrizeExpireReq{} }
func (m *GetPrizeExpireReq) String() string { return proto.CompactTextString(m) }
func (*GetPrizeExpireReq) ProtoMessage()    {}
func (*GetPrizeExpireReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{24}
}
func (m *GetPrizeExpireReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPrizeExpireReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPrizeExpireReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPrizeExpireReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrizeExpireReq.Merge(dst, src)
}
func (m *GetPrizeExpireReq) XXX_Size() int {
	return m.Size()
}
func (m *GetPrizeExpireReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrizeExpireReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrizeExpireReq proto.InternalMessageInfo

type GetPrizeExpireResp struct {
	List                 []*GetPrizeExpireResp_List `protobuf:"bytes,3,rep,name=list" json:"list"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetPrizeExpireResp) Reset()         { *m = GetPrizeExpireResp{} }
func (m *GetPrizeExpireResp) String() string { return proto.CompactTextString(m) }
func (*GetPrizeExpireResp) ProtoMessage()    {}
func (*GetPrizeExpireResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{25}
}
func (m *GetPrizeExpireResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPrizeExpireResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPrizeExpireResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPrizeExpireResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrizeExpireResp.Merge(dst, src)
}
func (m *GetPrizeExpireResp) XXX_Size() int {
	return m.Size()
}
func (m *GetPrizeExpireResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrizeExpireResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrizeExpireResp proto.InternalMessageInfo

func (m *GetPrizeExpireResp) GetList() []*GetPrizeExpireResp_List {
	if m != nil {
		return m.List
	}
	return nil
}

type GetPrizeExpireResp_List struct {
	//
	Expire int64 `protobuf:"varint,1,opt,name=expire,proto3" json:"expire"`
	//
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPrizeExpireResp_List) Reset()         { *m = GetPrizeExpireResp_List{} }
func (m *GetPrizeExpireResp_List) String() string { return proto.CompactTextString(m) }
func (*GetPrizeExpireResp_List) ProtoMessage()    {}
func (*GetPrizeExpireResp_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{25, 0}
}
func (m *GetPrizeExpireResp_List) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPrizeExpireResp_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPrizeExpireResp_List.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPrizeExpireResp_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrizeExpireResp_List.Merge(dst, src)
}
func (m *GetPrizeExpireResp_List) XXX_Size() int {
	return m.Size()
}
func (m *GetPrizeExpireResp_List) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrizeExpireResp_List.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrizeExpireResp_List proto.InternalMessageInfo

func (m *GetPrizeExpireResp_List) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *GetPrizeExpireResp_List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CapsuleGetCouponListReq struct {
	//
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty" form:"uid" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapsuleGetCouponListReq) Reset()         { *m = CapsuleGetCouponListReq{} }
func (m *CapsuleGetCouponListReq) String() string { return proto.CompactTextString(m) }
func (*CapsuleGetCouponListReq) ProtoMessage()    {}
func (*CapsuleGetCouponListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{26}
}
func (m *CapsuleGetCouponListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CapsuleGetCouponListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CapsuleGetCouponListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CapsuleGetCouponListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapsuleGetCouponListReq.Merge(dst, src)
}
func (m *CapsuleGetCouponListReq) XXX_Size() int {
	return m.Size()
}
func (m *CapsuleGetCouponListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CapsuleGetCouponListReq.DiscardUnknown(m)
}

var xxx_messageInfo_CapsuleGetCouponListReq proto.InternalMessageInfo

func (m *CapsuleGetCouponListReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type CapsuleGetCouponListResp struct {
	List                 []*CapsuleGetCouponListResp_List `protobuf:"bytes,1,rep,name=list" json:"list"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CapsuleGetCouponListResp) Reset()         { *m = CapsuleGetCouponListResp{} }
func (m *CapsuleGetCouponListResp) String() string { return proto.CompactTextString(m) }
func (*CapsuleGetCouponListResp) ProtoMessage()    {}
func (*CapsuleGetCouponListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{27}
}
func (m *CapsuleGetCouponListResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CapsuleGetCouponListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CapsuleGetCouponListResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CapsuleGetCouponListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapsuleGetCouponListResp.Merge(dst, src)
}
func (m *CapsuleGetCouponListResp) XXX_Size() int {
	return m.Size()
}
func (m *CapsuleGetCouponListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CapsuleGetCouponListResp.DiscardUnknown(m)
}

var xxx_messageInfo_CapsuleGetCouponListResp proto.InternalMessageInfo

func (m *CapsuleGetCouponListResp) GetList() []*CapsuleGetCouponListResp_List {
	if m != nil {
		return m.List
	}
	return nil
}

type CapsuleGetCouponListResp_List struct {
	//
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	// 中奖时间
	AwardTime string `protobuf:"bytes,2,opt,name=award_time,json=awardTime,proto3" json:"award_time"`
	// 奖品名称
	AwardName string `protobuf:"bytes,3,opt,name=award_name,json=awardName,proto3" json:"award_name"`
	// 券码
	AwardCode string `protobuf:"bytes,4,opt,name=award_code,json=awardCode,proto3" json:"award_code"`
	// 0 重试 1 成功
	Status int64 `protobuf:"varint,5,opt,name=status,proto3" json:"status"`
	// 上次重试时间
	RetryTime            string   `protobuf:"bytes,6,opt,name=retry_time,json=retryTime,proto3" json:"retry_time"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapsuleGetCouponListResp_List) Reset()         { *m = CapsuleGetCouponListResp_List{} }
func (m *CapsuleGetCouponListResp_List) String() string { return proto.CompactTextString(m) }
func (*CapsuleGetCouponListResp_List) ProtoMessage()    {}
func (*CapsuleGetCouponListResp_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_capsule_34fc59ffc8688791, []int{27, 0}
}
func (m *CapsuleGetCouponListResp_List) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CapsuleGetCouponListResp_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CapsuleGetCouponListResp_List.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CapsuleGetCouponListResp_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapsuleGetCouponListResp_List.Merge(dst, src)
}
func (m *CapsuleGetCouponListResp_List) XXX_Size() int {
	return m.Size()
}
func (m *CapsuleGetCouponListResp_List) XXX_DiscardUnknown() {
	xxx_messageInfo_CapsuleGetCouponListResp_List.DiscardUnknown(m)
}

var xxx_messageInfo_CapsuleGetCouponListResp_List proto.InternalMessageInfo

func (m *CapsuleGetCouponListResp_List) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *CapsuleGetCouponListResp_List) GetAwardTime() string {
	if m != nil {
		return m.AwardTime
	}
	return ""
}

func (m *CapsuleGetCouponListResp_List) GetAwardName() string {
	if m != nil {
		return m.AwardName
	}
	return ""
}

func (m *CapsuleGetCouponListResp_List) GetAwardCode() string {
	if m != nil {
		return m.AwardCode
	}
	return ""
}

func (m *CapsuleGetCouponListResp_List) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CapsuleGetCouponListResp_List) GetRetryTime() string {
	if m != nil {
		return m.RetryTime
	}
	return ""
}

func init() {
	proto.RegisterType((*GetCoinListReqAdmin)(nil), "live.liveadmin.v1.GetCoinListReqAdmin")
	proto.RegisterType((*GetCoinListRespAdmin)(nil), "live.liveadmin.v1.GetCoinListRespAdmin")
	proto.RegisterType((*GetCoinListRespAdmin_List)(nil), "live.liveadmin.v1.GetCoinListRespAdmin.List")
	proto.RegisterType((*GetCoinListRespAdmin_List_AreaIds)(nil), "live.liveadmin.v1.GetCoinListRespAdmin.List.Area_ids")
	proto.RegisterType((*UpdateCoinConfigReqAdmin)(nil), "live.liveadmin.v1.UpdateCoinConfigReqAdmin")
	proto.RegisterType((*UpdateCoinConfigRespAdmin)(nil), "live.liveadmin.v1.UpdateCoinConfigRespAdmin")
	proto.RegisterType((*UpdateCoinStatusReqAdmin)(nil), "live.liveadmin.v1.UpdateCoinStatusReqAdmin")
	proto.RegisterType((*UpdateCoinStatusRespAdmin)(nil), "live.liveadmin.v1.UpdateCoinStatusRespAdmin")
	proto.RegisterType((*DeleteCoinReqAdmin)(nil), "live.liveadmin.v1.DeleteCoinReqAdmin")
	proto.RegisterType((*DeleteCoinRespAdmin)(nil), "live.liveadmin.v1.DeleteCoinRespAdmin")
	proto.RegisterType((*GetPoolListReqAdmin)(nil), "live.liveadmin.v1.GetPoolListReqAdmin")
	proto.RegisterType((*GetPoolListRespAdmin)(nil), "live.liveadmin.v1.GetPoolListRespAdmin")
	proto.RegisterType((*GetPoolListRespAdmin_List)(nil), "live.liveadmin.v1.GetPoolListRespAdmin.List")
	proto.RegisterType((*UpdatePoolReqAdmin)(nil), "live.liveadmin.v1.UpdatePoolReqAdmin")
	proto.RegisterType((*UpdatePoolRespAdmin)(nil), "live.liveadmin.v1.UpdatePoolRespAdmin")
	proto.RegisterType((*DeletePoolReqAdmin)(nil), "live.liveadmin.v1.DeletePoolReqAdmin")
	proto.RegisterType((*DeletePoolRespAdmin)(nil), "live.liveadmin.v1.DeletePoolRespAdmin")
	proto.RegisterType((*UpdatePoolStatusReqAdmin)(nil), "live.liveadmin.v1.UpdatePoolStatusReqAdmin")
	proto.RegisterType((*UpdatePoolStatusRespAdmin)(nil), "live.liveadmin.v1.UpdatePoolStatusRespAdmin")
	proto.RegisterType((*GetPoolPrizeReqAdmin)(nil), "live.liveadmin.v1.GetPoolPrizeReqAdmin")
	proto.RegisterType((*GetPoolPrizeRespAdmin)(nil), "live.liveadmin.v1.GetPoolPrizeRespAdmin")
	proto.RegisterType((*GetPoolPrizeRespAdmin_List)(nil), "live.liveadmin.v1.GetPoolPrizeRespAdmin.List")
	proto.RegisterType((*UpdatePoolPrizeReqAdmin)(nil), "live.liveadmin.v1.UpdatePoolPrizeReqAdmin")
	proto.RegisterType((*UpdatePoolPrizeRespAdmin)(nil), "live.liveadmin.v1.UpdatePoolPrizeRespAdmin")
	proto.RegisterType((*DeletePoolPrizeReqAdmin)(nil), "live.liveadmin.v1.DeletePoolPrizeReqAdmin")
	proto.RegisterType((*DeletePoolPrizeRespAdmin)(nil), "live.liveadmin.v1.DeletePoolPrizeRespAdmin")
	proto.RegisterType((*GetPrizeTypeReq)(nil), "live.liveadmin.v1.GetPrizeTypeReq")
	proto.RegisterType((*GetPrizeTypeResp)(nil), "live.liveadmin.v1.GetPrizeTypeResp")
	proto.RegisterType((*GetPrizeTypeResp_List)(nil), "live.liveadmin.v1.GetPrizeTypeResp.List")
	proto.RegisterType((*GetPrizeExpireReq)(nil), "live.liveadmin.v1.GetPrizeExpireReq")
	proto.RegisterType((*GetPrizeExpireResp)(nil), "live.liveadmin.v1.GetPrizeExpireResp")
	proto.RegisterType((*GetPrizeExpireResp_List)(nil), "live.liveadmin.v1.GetPrizeExpireResp.List")
	proto.RegisterType((*CapsuleGetCouponListReq)(nil), "live.liveadmin.v1.CapsuleGetCouponListReq")
	proto.RegisterType((*CapsuleGetCouponListResp)(nil), "live.liveadmin.v1.CapsuleGetCouponListResp")
	proto.RegisterType((*CapsuleGetCouponListResp_List)(nil), "live.liveadmin.v1.CapsuleGetCouponListResp.List")
}
func (m *GetCoinListReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCoinListReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Page != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Page))
	}
	if m.PageSize != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetCoinListRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCoinListRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Total != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Total))
	}
	if m.TotalPage != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.TotalPage))
	}
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintCapsule(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetCoinListRespAdmin_List) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCoinListRespAdmin_List) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.ChangeNum != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.ChangeNum))
	}
	if len(m.StartTime) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.StartTime)))
		i += copy(dAtA[i:], m.StartTime)
	}
	if len(m.EndTime) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.EndTime)))
		i += copy(dAtA[i:], m.EndTime)
	}
	if m.Status != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Status))
	}
	if m.GiftType != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.GiftType))
	}
	if len(m.GiftConfig) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.GiftConfig)))
		i += copy(dAtA[i:], m.GiftConfig)
	}
	if len(m.AreaIds) > 0 {
		for _, msg := range m.AreaIds {
			dAtA[i] = 0x4a
			i++
			i = encodeVarintCapsule(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetCoinListRespAdmin_List_AreaIds) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCoinListRespAdmin_List_AreaIds) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ParentId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.ParentId))
	}
	if m.IsAll != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.IsAll))
	}
	if len(m.List) > 0 {
		dAtA2 := make([]byte, len(m.List)*10)
		var j1 int
		for _, num1 := range m.List {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(j1))
		i += copy(dAtA[i:], dAtA2[:j1])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdateCoinConfigReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateCoinConfigReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.ChangeNum != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.ChangeNum))
	}
	if len(m.StartTime) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.StartTime)))
		i += copy(dAtA[i:], m.StartTime)
	}
	if len(m.EndTime) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.EndTime)))
		i += copy(dAtA[i:], m.EndTime)
	}
	if m.Status != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Status))
	}
	if m.GiftType != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.GiftType))
	}
	if len(m.GiftConfig) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.GiftConfig)))
		i += copy(dAtA[i:], m.GiftConfig)
	}
	if len(m.AreaIds) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.AreaIds)))
		i += copy(dAtA[i:], m.AreaIds)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdateCoinConfigRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateCoinConfigRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Status {
		dAtA[i] = 0x8
		i++
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdateCoinStatusReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateCoinStatusReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if m.Status != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdateCoinStatusRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateCoinStatusRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Status {
		dAtA[i] = 0x8
		i++
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeleteCoinReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteCoinReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeleteCoinRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteCoinRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Status {
		dAtA[i] = 0x8
		i++
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPoolListReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPoolListReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Page != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Page))
	}
	if m.PageSize != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPoolListRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPoolListRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Total != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Total))
	}
	if m.TotalPage != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.TotalPage))
	}
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintCapsule(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPoolListRespAdmin_List) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPoolListRespAdmin_List) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if m.CoinId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.CoinId))
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.StartTime) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.StartTime)))
		i += copy(dAtA[i:], m.StartTime)
	}
	if len(m.EndTime) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.EndTime)))
		i += copy(dAtA[i:], m.EndTime)
	}
	if m.Status != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Status))
	}
	if len(m.Rule) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Rule)))
		i += copy(dAtA[i:], m.Rule)
	}
	if len(m.CoinTitle) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.CoinTitle)))
		i += copy(dAtA[i:], m.CoinTitle)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdatePoolReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePoolReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if m.CoinId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.CoinId))
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.StartTime) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.StartTime)))
		i += copy(dAtA[i:], m.StartTime)
	}
	if len(m.EndTime) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.EndTime)))
		i += copy(dAtA[i:], m.EndTime)
	}
	if len(m.Rule) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Rule)))
		i += copy(dAtA[i:], m.Rule)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdatePoolRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePoolRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Status {
		dAtA[i] = 0x8
		i++
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeletePoolReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeletePoolReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeletePoolRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeletePoolRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Status {
		dAtA[i] = 0x8
		i++
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdatePoolStatusReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePoolStatusReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if m.Status != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdatePoolStatusRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePoolStatusRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Status {
		dAtA[i] = 0x8
		i++
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPoolPrizeReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPoolPrizeReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.PoolId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.PoolId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPoolPrizeRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPoolPrizeRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0xa
			i++
			i = encodeVarintCapsule(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPoolPrizeRespAdmin_List) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPoolPrizeRespAdmin_List) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if m.PoolId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.PoolId))
	}
	if m.Type != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Type))
	}
	if m.Num != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Num))
	}
	if m.ObjectId != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.ObjectId))
	}
	if len(m.WebUrl) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.WebUrl)))
		i += copy(dAtA[i:], m.WebUrl)
	}
	if len(m.MobileUrl) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.MobileUrl)))
		i += copy(dAtA[i:], m.MobileUrl)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if len(m.JumpUrl) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.JumpUrl)))
		i += copy(dAtA[i:], m.JumpUrl)
	}
	if m.ProType != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.ProType))
	}
	if len(m.Chance) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Chance)))
		i += copy(dAtA[i:], m.Chance)
	}
	if m.Loop != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Loop))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Limit))
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.Weight != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Weight))
	}
	if len(m.WhiteUids) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.WhiteUids)))
		i += copy(dAtA[i:], m.WhiteUids)
	}
	if m.Expire != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Expire))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdatePoolPrizeReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePoolPrizeReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if m.PoolId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.PoolId))
	}
	if m.Type != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Type))
	}
	if m.Num != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Num))
	}
	if m.ObjectId != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.ObjectId))
	}
	if m.Expire != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Expire))
	}
	if len(m.WebUrl) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.WebUrl)))
		i += copy(dAtA[i:], m.WebUrl)
	}
	if len(m.MobileUrl) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.MobileUrl)))
		i += copy(dAtA[i:], m.MobileUrl)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if len(m.JumpUrl) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.JumpUrl)))
		i += copy(dAtA[i:], m.JumpUrl)
	}
	if m.ProType != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.ProType))
	}
	if len(m.Chance) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Chance)))
		i += copy(dAtA[i:], m.Chance)
	}
	if m.Loop != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Loop))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Limit))
	}
	if m.Weight != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Weight))
	}
	if len(m.WhiteUids) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.WhiteUids)))
		i += copy(dAtA[i:], m.WhiteUids)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdatePoolPrizeRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePoolPrizeRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Status {
		dAtA[i] = 0x8
		i++
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.PrizeId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.PrizeId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeletePoolPrizeReqAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeletePoolPrizeReqAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeletePoolPrizeRespAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeletePoolPrizeRespAdmin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Status {
		dAtA[i] = 0x8
		i++
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPrizeTypeReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPrizeTypeReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPrizeTypeResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPrizeTypeResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintCapsule(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPrizeTypeResp_List) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPrizeTypeResp_List) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Type))
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPrizeExpireReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPrizeExpireReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPrizeExpireResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPrizeExpireResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintCapsule(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPrizeExpireResp_List) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPrizeExpireResp_List) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Expire != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Expire))
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CapsuleGetCouponListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CapsuleGetCouponListReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Uid != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Uid))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CapsuleGetCouponListResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CapsuleGetCouponListResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0xa
			i++
			i = encodeVarintCapsule(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CapsuleGetCouponListResp_List) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CapsuleGetCouponListResp_List) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Uid != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Uid))
	}
	if len(m.AwardTime) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.AwardTime)))
		i += copy(dAtA[i:], m.AwardTime)
	}
	if len(m.AwardName) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.AwardName)))
		i += copy(dAtA[i:], m.AwardName)
	}
	if len(m.AwardCode) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.AwardCode)))
		i += copy(dAtA[i:], m.AwardCode)
	}
	if m.Status != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(m.Status))
	}
	if len(m.RetryTime) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintCapsule(dAtA, i, uint64(len(m.RetryTime)))
		i += copy(dAtA[i:], m.RetryTime)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintCapsule(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *GetCoinListReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovCapsule(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovCapsule(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCoinListRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Total != 0 {
		n += 1 + sovCapsule(uint64(m.Total))
	}
	if m.TotalPage != 0 {
		n += 1 + sovCapsule(uint64(m.TotalPage))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovCapsule(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCoinListRespAdmin_List) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.ChangeNum != 0 {
		n += 1 + sovCapsule(uint64(m.ChangeNum))
	}
	l = len(m.StartTime)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.EndTime)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovCapsule(uint64(m.Status))
	}
	if m.GiftType != 0 {
		n += 1 + sovCapsule(uint64(m.GiftType))
	}
	l = len(m.GiftConfig)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if len(m.AreaIds) > 0 {
		for _, e := range m.AreaIds {
			l = e.Size()
			n += 1 + l + sovCapsule(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCoinListRespAdmin_List_AreaIds) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ParentId != 0 {
		n += 1 + sovCapsule(uint64(m.ParentId))
	}
	if m.IsAll != 0 {
		n += 1 + sovCapsule(uint64(m.IsAll))
	}
	if len(m.List) > 0 {
		l = 0
		for _, e := range m.List {
			l += sovCapsule(uint64(e))
		}
		n += 1 + sovCapsule(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateCoinConfigReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.ChangeNum != 0 {
		n += 1 + sovCapsule(uint64(m.ChangeNum))
	}
	l = len(m.StartTime)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.EndTime)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovCapsule(uint64(m.Status))
	}
	if m.GiftType != 0 {
		n += 1 + sovCapsule(uint64(m.GiftType))
	}
	l = len(m.GiftConfig)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.AreaIds)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateCoinConfigRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateCoinStatusReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	if m.Status != 0 {
		n += 1 + sovCapsule(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateCoinStatusRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteCoinReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteCoinRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPoolListReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovCapsule(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovCapsule(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPoolListRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Total != 0 {
		n += 1 + sovCapsule(uint64(m.Total))
	}
	if m.TotalPage != 0 {
		n += 1 + sovCapsule(uint64(m.TotalPage))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovCapsule(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPoolListRespAdmin_List) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	if m.CoinId != 0 {
		n += 1 + sovCapsule(uint64(m.CoinId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.StartTime)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.EndTime)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovCapsule(uint64(m.Status))
	}
	l = len(m.Rule)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.CoinTitle)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdatePoolReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	if m.CoinId != 0 {
		n += 1 + sovCapsule(uint64(m.CoinId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.StartTime)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.EndTime)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.Rule)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdatePoolRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeletePoolReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeletePoolRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdatePoolStatusReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	if m.Status != 0 {
		n += 1 + sovCapsule(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdatePoolStatusRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPoolPrizeReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PoolId != 0 {
		n += 1 + sovCapsule(uint64(m.PoolId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPoolPrizeRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovCapsule(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPoolPrizeRespAdmin_List) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	if m.PoolId != 0 {
		n += 1 + sovCapsule(uint64(m.PoolId))
	}
	if m.Type != 0 {
		n += 1 + sovCapsule(uint64(m.Type))
	}
	if m.Num != 0 {
		n += 1 + sovCapsule(uint64(m.Num))
	}
	if m.ObjectId != 0 {
		n += 1 + sovCapsule(uint64(m.ObjectId))
	}
	l = len(m.WebUrl)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.MobileUrl)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.ProType != 0 {
		n += 1 + sovCapsule(uint64(m.ProType))
	}
	l = len(m.Chance)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.Loop != 0 {
		n += 1 + sovCapsule(uint64(m.Loop))
	}
	if m.Limit != 0 {
		n += 1 + sovCapsule(uint64(m.Limit))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.Weight != 0 {
		n += 1 + sovCapsule(uint64(m.Weight))
	}
	l = len(m.WhiteUids)
	if l > 0 {
		n += 2 + l + sovCapsule(uint64(l))
	}
	if m.Expire != 0 {
		n += 2 + sovCapsule(uint64(m.Expire))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdatePoolPrizeReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	if m.PoolId != 0 {
		n += 1 + sovCapsule(uint64(m.PoolId))
	}
	if m.Type != 0 {
		n += 1 + sovCapsule(uint64(m.Type))
	}
	if m.Num != 0 {
		n += 1 + sovCapsule(uint64(m.Num))
	}
	if m.ObjectId != 0 {
		n += 1 + sovCapsule(uint64(m.ObjectId))
	}
	if m.Expire != 0 {
		n += 1 + sovCapsule(uint64(m.Expire))
	}
	l = len(m.WebUrl)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.MobileUrl)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.ProType != 0 {
		n += 1 + sovCapsule(uint64(m.ProType))
	}
	l = len(m.Chance)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.Loop != 0 {
		n += 1 + sovCapsule(uint64(m.Loop))
	}
	if m.Limit != 0 {
		n += 1 + sovCapsule(uint64(m.Limit))
	}
	if m.Weight != 0 {
		n += 1 + sovCapsule(uint64(m.Weight))
	}
	l = len(m.WhiteUids)
	if l > 0 {
		n += 2 + l + sovCapsule(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdatePoolPrizeRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	if m.PrizeId != 0 {
		n += 1 + sovCapsule(uint64(m.PrizeId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeletePoolPrizeReqAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCapsule(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeletePoolPrizeRespAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPrizeTypeReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPrizeTypeResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovCapsule(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPrizeTypeResp_List) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovCapsule(uint64(m.Type))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPrizeExpireReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPrizeExpireResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovCapsule(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPrizeExpireResp_List) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Expire != 0 {
		n += 1 + sovCapsule(uint64(m.Expire))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CapsuleGetCouponListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovCapsule(uint64(m.Uid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CapsuleGetCouponListResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovCapsule(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CapsuleGetCouponListResp_List) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovCapsule(uint64(m.Uid))
	}
	l = len(m.AwardTime)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.AwardName)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	l = len(m.AwardCode)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovCapsule(uint64(m.Status))
	}
	l = len(m.RetryTime)
	if l > 0 {
		n += 1 + l + sovCapsule(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCapsule(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozCapsule(x uint64) (n int) {
	return sovCapsule(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetCoinListReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCoinListReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCoinListReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCoinListRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCoinListRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCoinListRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalPage", wireType)
			}
			m.TotalPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalPage |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &GetCoinListRespAdmin_List{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCoinListRespAdmin_List) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: List: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: List: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeNum", wireType)
			}
			m.ChangeNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChangeNum |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GiftType", wireType)
			}
			m.GiftType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GiftType |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GiftConfig", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GiftConfig = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreaIds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AreaIds = append(m.AreaIds, &GetCoinListRespAdmin_List_AreaIds{})
			if err := m.AreaIds[len(m.AreaIds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCoinListRespAdmin_List_AreaIds) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Area_ids: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Area_ids: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentId", wireType)
			}
			m.ParentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ParentId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAll", wireType)
			}
			m.IsAll = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsAll |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowCapsule
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.List = append(m.List, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowCapsule
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthCapsule
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.List) == 0 {
					m.List = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowCapsule
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.List = append(m.List, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateCoinConfigReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateCoinConfigReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateCoinConfigReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeNum", wireType)
			}
			m.ChangeNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChangeNum |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GiftType", wireType)
			}
			m.GiftType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GiftType |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GiftConfig", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GiftConfig = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreaIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AreaIds = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateCoinConfigRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateCoinConfigRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateCoinConfigRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateCoinStatusReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateCoinStatusReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateCoinStatusReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateCoinStatusRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateCoinStatusRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateCoinStatusRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteCoinReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteCoinReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteCoinReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteCoinRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteCoinRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteCoinRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPoolListReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPoolListReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPoolListReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPoolListRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPoolListRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPoolListRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalPage", wireType)
			}
			m.TotalPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalPage |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &GetPoolListRespAdmin_List{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPoolListRespAdmin_List) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: List: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: List: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinId", wireType)
			}
			m.CoinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoinId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rule", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rule = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoinTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePoolReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePoolReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePoolReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinId", wireType)
			}
			m.CoinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoinId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rule", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rule = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePoolRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePoolRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePoolRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeletePoolReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeletePoolReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeletePoolReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeletePoolRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeletePoolRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeletePoolRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePoolStatusReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePoolStatusReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePoolStatusReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePoolStatusRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePoolStatusRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePoolStatusRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPoolPrizeReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPoolPrizeReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPoolPrizeReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			m.PoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PoolId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPoolPrizeRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPoolPrizeRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPoolPrizeRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &GetPoolPrizeRespAdmin_List{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPoolPrizeRespAdmin_List) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: List: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: List: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			m.PoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PoolId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
			}
			m.ObjectId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObjectId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MobileUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MobileUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProType", wireType)
			}
			m.ProType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProType |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chance = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Loop", wireType)
			}
			m.Loop = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Loop |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			m.Weight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Weight |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WhiteUids", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WhiteUids = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expire", wireType)
			}
			m.Expire = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Expire |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePoolPrizeReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePoolPrizeReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePoolPrizeReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			m.PoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PoolId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
			}
			m.ObjectId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObjectId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expire", wireType)
			}
			m.Expire = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Expire |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MobileUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MobileUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProType", wireType)
			}
			m.ProType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProType |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chance = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Loop", wireType)
			}
			m.Loop = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Loop |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			m.Weight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Weight |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WhiteUids", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WhiteUids = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePoolPrizeRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePoolPrizeRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePoolPrizeRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrizeId", wireType)
			}
			m.PrizeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrizeId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeletePoolPrizeReqAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeletePoolPrizeReqAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeletePoolPrizeReqAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeletePoolPrizeRespAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeletePoolPrizeRespAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeletePoolPrizeRespAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPrizeTypeReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPrizeTypeReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPrizeTypeReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPrizeTypeResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPrizeTypeResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPrizeTypeResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &GetPrizeTypeResp_List{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPrizeTypeResp_List) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: List: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: List: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPrizeExpireReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPrizeExpireReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPrizeExpireReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPrizeExpireResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPrizeExpireResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPrizeExpireResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &GetPrizeExpireResp_List{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPrizeExpireResp_List) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: List: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: List: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expire", wireType)
			}
			m.Expire = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Expire |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CapsuleGetCouponListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CapsuleGetCouponListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CapsuleGetCouponListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CapsuleGetCouponListResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CapsuleGetCouponListResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CapsuleGetCouponListResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &CapsuleGetCouponListResp_List{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CapsuleGetCouponListResp_List) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: List: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: List: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwardTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AwardTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwardName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AwardName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwardCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AwardCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetryTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCapsule
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RetryTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCapsule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCapsule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCapsule(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCapsule
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCapsule
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthCapsule
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowCapsule
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipCapsule(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthCapsule = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCapsule   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("capsule.proto", fileDescriptor_capsule_34fc59ffc8688791) }

var fileDescriptor_capsule_34fc59ffc8688791 = []byte{
	// 2024 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0xcd, 0x8f, 0xdb, 0xc6,
	0x15, 0x87, 0x3e, 0x56, 0x12, 0x47, 0xde, 0x2f, 0x6e, 0x12, 0xd3, 0x8b, 0xc4, 0xb4, 0x69, 0x7b,
	0xbf, 0x1c, 0x2b, 0xd9, 0x34, 0x85, 0x11, 0x03, 0xad, 0xe1, 0x75, 0xdd, 0xec, 0xb6, 0x86, 0x6b,
	0x4c, 0x6c, 0x14, 0x2d, 0x82, 0xaa, 0x5c, 0x71, 0x2c, 0x8f, 0x41, 0x89, 0x5c, 0x7e, 0x78, 0x63,
	0xdf, 0xfa, 0x47, 0xf4, 0x5a, 0xa0, 0xe8, 0xa5, 0xa7, 0xfe, 0x1d, 0x3d, 0xe6, 0x54, 0xf4, 0x44,
	0x14, 0xdb, 0x9b, 0x0e, 0x3d, 0xf0, 0xd2, 0x43, 0x2f, 0xc5, 0xbc, 0x19, 0x72, 0x86, 0x12, 0xb9,
	0xd2, 0x26, 0x07, 0xe7, 0x22, 0x0e, 0xdf, 0x7b, 0xf3, 0xe6, 0xf1, 0xcd, 0x7b, 0xef, 0xf7, 0x66,
	0x84, 0x96, 0x07, 0xb6, 0x1f, 0xc6, 0x2e, 0xe9, 0xf9, 0x81, 0x17, 0x79, 0xfa, 0xba, 0x4b, 0x5f,
	0x93, 0x1e, 0xfb, 0xb1, 0x9d, 0x11, 0x1d, 0xf7, 0x5e, 0xef, 0x6f, 0xde, 0x19, 0xd2, 0xe8, 0x65,
	0x7c, 0xdc, 0x1b, 0x78, 0xa3, 0x4f, 0x86, 0xde, 0xd0, 0xfb, 0x04, 0x24, 0x8f, 0xe3, 0x17, 0xf0,
	0x06, 0x2f, 0x30, 0xe2, 0x1a, 0xac, 0x3f, 0xd6, 0xd0, 0xc6, 0x97, 0x24, 0x7a, 0xe8, 0xd1, 0xf1,
	0x63, 0x1a, 0x46, 0x98, 0x9c, 0x3c, 0x60, 0x9a, 0xf4, 0xbb, 0xa8, 0xe9, 0xdb, 0x43, 0x62, 0xd4,
	0xae, 0xd5, 0x76, 0x1a, 0x07, 0x37, 0xd2, 0xc4, 0x34, 0x5f, 0x78, 0xc1, 0xe8, 0x9e, 0xc5, 0xa8,
	0xd6, 0xb5, 0xd7, 0xb6, 0x4b, 0x1d, 0x3b, 0x22, 0xf7, 0xac, 0x80, 0x9c, 0xc4, 0x34, 0x20, 0x8e,
	0x85, 0x61, 0x82, 0xfe, 0x08, 0x69, 0xec, 0xd9, 0x0f, 0xe9, 0x5b, 0x62, 0xd4, 0x61, 0xf6, 0x4e,
	0x9a, 0x98, 0x37, 0xe5, 0x6c, 0x60, 0x95, 0xab, 0xe8, 0x30, 0xfe, 0x57, 0x8c, 0xfd, 0x8f, 0x25,
	0xf4, 0x5e, 0xc1, 0xae, 0xd0, 0xe7, 0x86, 0x99, 0x68, 0x29, 0xf2, 0x22, 0xdb, 0x15, 0x96, 0x69,
	0x93, 0xc4, 0xe4, 0x04, 0xcc, 0x1f, 0xfa, 0x1d, 0x84, 0x60, 0xd0, 0x07, 0xfb, 0xb9, 0x05, 0x2b,
	0x93, 0xc4, 0x54, 0xa8, 0x58, 0x83, 0xf1, 0x53, 0x66, 0xef, 0x2f, 0x50, 0xd3, 0xa5, 0x61, 0x64,
	0x34, 0xae, 0x35, 0x76, 0xba, 0x9f, 0x7d, 0xdc, 0x9b, 0xf1, 0x68, 0xaf, 0xcc, 0x8c, 0x1e, 0x7b,
	0x3b, 0xe8, 0x4c, 0x12, 0x13, 0x66, 0x63, 0xf8, 0xdd, 0xfc, 0x73, 0x13, 0x35, 0x19, 0x43, 0xff,
	0x00, 0xd5, 0xa9, 0x23, 0x2c, 0x6c, 0x4d, 0x12, 0xb3, 0x4e, 0x1d, 0x5c, 0xa7, 0x0e, 0x18, 0x4f,
	0x23, 0x97, 0x9b, 0xa5, 0x09, 0xe3, 0x19, 0x01, 0xf3, 0x07, 0x33, 0x7e, 0xf0, 0xd2, 0x1e, 0x0f,
	0x49, 0x7f, 0x1c, 0x8f, 0x8c, 0x86, 0x34, 0x5e, 0x52, 0xb1, 0xc6, 0xc7, 0x4f, 0xe2, 0x11, 0x13,
	0x0f, 0x23, 0x3b, 0x88, 0xfa, 0x11, 0x1d, 0x11, 0xa3, 0x09, 0x4a, 0x41, 0x5c, 0x52, 0xb1, 0x06,
	0xe3, 0x67, 0x74, 0x44, 0xf4, 0x6d, 0xd4, 0x21, 0x63, 0x87, 0x0b, 0x2f, 0x81, 0xf0, 0xa5, 0x49,
	0x62, 0xe6, 0x34, 0xdc, 0x26, 0x63, 0x07, 0x04, 0x2d, 0xd4, 0x0a, 0x23, 0x3b, 0x8a, 0x43, 0xa3,
	0x05, 0x26, 0xa0, 0x49, 0x62, 0x0a, 0x0a, 0x16, 0x4f, 0x7d, 0x0f, 0x69, 0x43, 0xfa, 0x22, 0xea,
	0x47, 0x6f, 0x7c, 0x62, 0xb4, 0x41, 0x6c, 0x79, 0x92, 0x98, 0x92, 0x88, 0x3b, 0x6c, 0xf8, 0xec,
	0x8d, 0x4f, 0xf4, 0x4f, 0x51, 0x17, 0xc8, 0x03, 0x6f, 0xfc, 0x82, 0x0e, 0x8d, 0x0e, 0xac, 0xbd,
	0x3a, 0x49, 0x4c, 0x95, 0x8c, 0x11, 0x7b, 0x79, 0x08, 0x63, 0xfd, 0x77, 0xa8, 0x63, 0x07, 0xc4,
	0xee, 0x53, 0x27, 0x34, 0x34, 0xd8, 0x9a, 0x1f, 0x5f, 0x64, 0x6b, 0x7a, 0x0f, 0xc4, 0x64, 0xfe,
	0x85, 0x99, 0x2a, 0xdc, 0x66, 0xa3, 0x23, 0x27, 0xdc, 0x3c, 0x45, 0x9d, 0x4c, 0x84, 0x7d, 0x89,
	0x6f, 0x07, 0x64, 0x1c, 0xf5, 0xf3, 0x4d, 0x83, 0x2f, 0xc9, 0x89, 0x2c, 0x2e, 0xd9, 0xf0, 0xc8,
	0xd1, 0xaf, 0xa3, 0x16, 0x0d, 0xfb, 0xb6, 0xeb, 0x8a, 0xc8, 0x02, 0xcf, 0x70, 0x0a, 0x5e, 0xa2,
	0xe1, 0x03, 0xd7, 0xd5, 0x3f, 0x54, 0x22, 0xaa, 0x31, 0x1d, 0x23, 0xd6, 0xb7, 0x4d, 0x64, 0x3c,
	0xf7, 0x59, 0xe0, 0x33, 0xcb, 0xf9, 0xd7, 0xe6, 0x59, 0xf7, 0x91, 0x12, 0x37, 0xcb, 0x69, 0x62,
	0x6a, 0x3c, 0x6b, 0xa8, 0x63, 0x41, 0xf8, 0xdc, 0x2b, 0x86, 0xcf, 0xcd, 0x34, 0x31, 0xaf, 0x71,
	0x09, 0x20, 0x97, 0xe7, 0x94, 0x88, 0xac, 0xc3, 0x92, 0xc8, 0xda, 0x4d, 0x13, 0xf3, 0x16, 0x57,
	0x20, 0x79, 0xe5, 0x5a, 0x94, 0xa0, 0x3b, 0x2c, 0x09, 0x3a, 0x45, 0x93, 0xe4, 0x55, 0x68, 0x92,
	0xf1, 0x78, 0x30, 0x13, 0x8f, 0xdb, 0x69, 0x62, 0xde, 0xe0, 0x7a, 0x32, 0x4e, 0xb9, 0x96, 0x3c,
	0x54, 0x7f, 0x32, 0x15, 0xaa, 0xb7, 0xd2, 0xc4, 0xbc, 0x9e, 0x5b, 0x12, 0xc5, 0x61, 0xf9, 0xfc,
	0x2c, 0x8a, 0x1f, 0xcd, 0x46, 0xb1, 0x52, 0xae, 0x72, 0x56, 0x45, 0xb9, 0xca, 0x03, 0xfc, 0x6e,
	0x59, 0x80, 0x7f, 0x90, 0x26, 0xa6, 0xae, 0x28, 0xe2, 0x4c, 0xab, 0x10, 0xe7, 0x07, 0x85, 0x38,
	0x9f, 0x72, 0x41, 0xc6, 0xa9, 0x70, 0x81, 0x88, 0x65, 0xeb, 0x3e, 0xba, 0x32, 0x1b, 0x51, 0x59,
	0xbd, 0x94, 0xa9, 0xcc, 0xc2, 0xaa, 0x53, 0x96, 0xca, 0xd6, 0x37, 0x6a, 0x48, 0x7e, 0xc5, 0x79,
	0x59, 0x48, 0xee, 0x2b, 0x21, 0x79, 0x3d, 0x4d, 0xcc, 0x8f, 0xf2, 0x90, 0x2c, 0x35, 0x8a, 0x85,
	0xe9, 0x6e, 0xbe, 0x24, 0xcf, 0x91, 0xf5, 0x34, 0x31, 0x97, 0x0b, 0x5b, 0x92, 0xaf, 0x5c, 0x30,
	0x3d, 0x5b, 0xf9, 0x22, 0xa6, 0x7f, 0x89, 0xf4, 0x9f, 0x11, 0x97, 0x70, 0x05, 0xdf, 0xc3, 0x68,
	0xeb, 0x0b, 0xb4, 0xa1, 0x2a, 0xba, 0x88, 0x0d, 0x02, 0x43, 0x9f, 0x7a, 0x9e, 0xfb, 0x83, 0xc2,
	0xd0, 0x7f, 0x37, 0x00, 0x43, 0xa5, 0x5d, 0xef, 0x14, 0x43, 0x67, 0xcc, 0x28, 0xc7, 0xd0, 0xbf,
	0xd5, 0xe7, 0x60, 0xe8, 0x4d, 0xd4, 0x1e, 0x78, 0x74, 0xcc, 0x6a, 0x35, 0x37, 0xac, 0x3b, 0x49,
	0xcc, 0x8c, 0x84, 0x5b, 0x6c, 0x70, 0xa4, 0x20, 0x6d, 0xa3, 0x1a, 0x69, 0xdf, 0x19, 0x74, 0x7e,
	0x88, 0x9a, 0x41, 0xec, 0xf2, 0x7a, 0xa3, 0x71, 0x0f, 0xb0, 0x77, 0x0c, 0xbf, 0xd0, 0x03, 0xb0,
	0xaf, 0xe1, 0xf6, 0x77, 0xa4, 0x65, 0x92, 0x8a, 0x35, 0x36, 0x7e, 0x06, 0x45, 0xff, 0xbf, 0x75,
	0xa4, 0xf3, 0x1c, 0x62, 0x1e, 0x5e, 0x14, 0x4a, 0xee, 0x4f, 0x7b, 0x71, 0x2b, 0x4d, 0x4c, 0x4b,
	0x60, 0x01, 0x67, 0x54, 0x14, 0x4e, 0xe1, 0xe0, 0x7b, 0x45, 0x07, 0x5f, 0x14, 0x8b, 0x7e, 0x40,
	0x08, 0x72, 0x57, 0xec, 0x46, 0x0b, 0xe6, 0x2b, 0x69, 0xca, 0xa8, 0x15, 0x69, 0x0a, 0xac, 0x2f,
	0xd0, 0x86, 0xea, 0xf8, 0xef, 0x54, 0xb6, 0x0a, 0x7b, 0xf6, 0x7d, 0xca, 0xd6, 0xc5, 0x6d, 0xc8,
	0xab, 0x3e, 0x9b, 0xfa, 0x6e, 0xaa, 0xbe, 0xba, 0xf2, 0x45, 0x4c, 0xff, 0x75, 0x5e, 0xd8, 0x9e,
	0x06, 0xf4, 0x2d, 0xc9, 0xcd, 0xbe, 0x8f, 0xda, 0xbe, 0xe7, 0xb9, 0xb2, 0x8f, 0x53, 0xa2, 0x5a,
	0x30, 0x2a, 0xa2, 0x9a, 0x71, 0x8f, 0x1c, 0xeb, 0x6c, 0x09, 0xbd, 0x5f, 0xd4, 0x9c, 0x99, 0xf5,
	0x4b, 0x51, 0xe3, 0x6a, 0x50, 0xe3, 0xee, 0x54, 0xd7, 0xb8, 0xe2, 0xbc, 0xf2, 0x22, 0xf7, 0xbf,
	0xe6, 0xfc, 0x22, 0x97, 0x7d, 0x88, 0x52, 0xe4, 0x04, 0x29, 0xb3, 0x96, 0xd5, 0x11, 0xe8, 0x5b,
	0x78, 0x37, 0x07, 0x8b, 0x40, 0xe3, 0x0d, 0xbf, 0xfa, 0x15, 0xd4, 0x60, 0xad, 0x5e, 0x13, 0x98,
	0xed, 0x49, 0x62, 0xb2, 0x57, 0xcc, 0x7e, 0x58, 0xc7, 0xeb, 0x1d, 0xbf, 0x22, 0x03, 0xe8, 0x78,
	0x97, 0x64, 0xc7, 0x9b, 0x13, 0x71, 0x87, 0x0f, 0x8f, 0xc0, 0x94, 0x53, 0x72, 0xdc, 0x8f, 0x03,
	0x57, 0x64, 0x08, 0x98, 0x22, 0x48, 0xb8, 0x75, 0x4a, 0x8e, 0x9f, 0x07, 0x80, 0x18, 0x23, 0xef,
	0x98, 0xba, 0x04, 0x04, 0xdb, 0xb2, 0x68, 0x49, 0x2a, 0xd6, 0xf8, 0x98, 0x89, 0xef, 0xa3, 0xae,
	0x43, 0xc2, 0x41, 0x40, 0xfd, 0x88, 0x7a, 0x63, 0xf5, 0x40, 0xa0, 0x90, 0xb1, 0xfa, 0xc2, 0x2a,
	0xf0, 0xab, 0x78, 0xe4, 0x83, 0x7e, 0x4d, 0x56, 0xe0, 0x8c, 0x86, 0xdb, 0x6c, 0xc4, 0x74, 0x6f,
	0xa3, 0x8e, 0x1f, 0x78, 0xbc, 0xa3, 0x43, 0xf0, 0x6d, 0x20, 0x98, 0xd1, 0x70, 0xdb, 0x0f, 0x3c,
	0x68, 0xda, 0x2c, 0xd4, 0x62, 0x5d, 0xed, 0x80, 0x18, 0x5d, 0xd0, 0x07, 0x91, 0xc6, 0x29, 0x58,
	0x3c, 0xa1, 0x99, 0xf7, 0x3c, 0xdf, 0xb8, 0x24, 0x5d, 0xcc, 0xde, 0x31, 0xfc, 0x32, 0x94, 0x71,
	0xe9, 0x88, 0x46, 0xc6, 0xb2, 0x04, 0x52, 0x20, 0x60, 0xfe, 0x60, 0xd3, 0xc7, 0xf6, 0x88, 0x18,
	0x2b, 0xb2, 0xd2, 0xb3, 0x77, 0x0c, 0xbf, 0xcc, 0x80, 0x53, 0x42, 0x87, 0x2f, 0x23, 0x63, 0x55,
	0x62, 0x05, 0xa7, 0x60, 0xf1, 0x64, 0x8e, 0x3d, 0x7d, 0x49, 0x23, 0xd2, 0x8f, 0x59, 0x8b, 0xb8,
	0x26, 0x1d, 0x2b, 0xa9, 0x58, 0x83, 0xf1, 0x73, 0x76, 0x96, 0xb1, 0x50, 0x8b, 0x7c, 0xe3, 0xd3,
	0x80, 0x18, 0xeb, 0x52, 0x25, 0xa7, 0x60, 0xf1, 0xb4, 0xfe, 0xd9, 0x42, 0x97, 0x65, 0xfe, 0x15,
	0x33, 0x68, 0x0e, 0x6c, 0xdc, 0x9e, 0x8e, 0x4b, 0x3d, 0x4d, 0xcc, 0x95, 0x62, 0x82, 0xe5, 0xe1,
	0x79, 0xb7, 0x10, 0x9e, 0x4a, 0x61, 0xad, 0xee, 0xa8, 0x79, 0xe4, 0x7e, 0xae, 0x46, 0xae, 0x95,
	0x26, 0xe6, 0x55, 0x3e, 0xaf, 0xf2, 0x74, 0x02, 0x41, 0xbd, 0x3f, 0x1b, 0xd4, 0xef, 0xa5, 0x89,
	0xb9, 0xc6, 0xe7, 0xe6, 0x2c, 0x4b, 0x89, 0xed, 0xdd, 0xdc, 0x5b, 0xad, 0xe9, 0x9a, 0x25, 0x7c,
	0x95, 0x39, 0x8d, 0x95, 0x96, 0x2c, 0x0d, 0x78, 0x74, 0x2b, 0xa5, 0x45, 0x30, 0x2a, 0x4a, 0x8b,
	0xc8, 0x90, 0xc3, 0x42, 0x86, 0x74, 0xa6, 0x41, 0x4f, 0xf2, 0x2a, 0x40, 0x4f, 0x26, 0xcf, 0xe3,
	0x62, 0xf2, 0xf0, 0x64, 0xd8, 0x4b, 0x13, 0x73, 0x8b, 0xab, 0x52, 0x98, 0xe5, 0xba, 0x0a, 0x79,
	0xd5, 0x53, 0xf2, 0x0a, 0x81, 0xaa, 0x8d, 0x34, 0x31, 0x57, 0xb9, 0xaa, 0x8c, 0x63, 0xc9, 0xf4,
	0x3a, 0x50, 0xd2, 0xab, 0x0b, 0x5e, 0x53, 0x20, 0x37, 0xe3, 0x54, 0x40, 0x6e, 0x96, 0x79, 0xbb,
	0x79, 0xe6, 0x5d, 0x82, 0x15, 0x15, 0xbf, 0x73, 0xba, 0x95, 0x27, 0xe0, 0x0d, 0x91, 0x80, 0x3c,
	0xc3, 0x56, 0xd3, 0xc4, 0xec, 0x72, 0x41, 0x46, 0xb5, 0x44, 0x1e, 0x6e, 0x65, 0x79, 0xb8, 0x02,
	0x52, 0x6b, 0x69, 0x62, 0x5e, 0x12, 0x52, 0x8c, 0x6c, 0x65, 0xe9, 0xb8, 0x3b, 0x95, 0x70, 0xca,
	0xba, 0x9c, 0x6e, 0xe5, 0x79, 0xf7, 0x79, 0x49, 0xde, 0xbd, 0x9f, 0x26, 0xe6, 0xba, 0x10, 0xcf,
	0x79, 0x96, 0x92, 0x7e, 0xd6, 0x50, 0xc5, 0xd4, 0x29, 0x04, 0x59, 0x00, 0xd8, 0x78, 0xed, 0xa2,
	0x6f, 0x89, 0x4c, 0x30, 0x51, 0xbb, 0x38, 0x8d, 0x79, 0x90, 0xbe, 0x25, 0x47, 0x8e, 0xf5, 0x18,
	0x5d, 0x96, 0xb8, 0x5f, 0x4c, 0xe1, 0xef, 0xd0, 0x45, 0xfc, 0x14, 0x19, 0x33, 0xda, 0x2e, 0x82,
	0xc7, 0xeb, 0x68, 0x95, 0xa1, 0x1f, 0x9b, 0xc8, 0xf6, 0x17, 0x93, 0x13, 0xeb, 0x4f, 0x35, 0xb4,
	0x56, 0xa4, 0x85, 0xbe, 0xfe, 0xf3, 0xc2, 0x41, 0x61, 0xa7, 0x02, 0x44, 0xd5, 0x29, 0xe5, 0xf8,
	0x79, 0x20, 0xe0, 0x33, 0x03, 0xc0, 0x5a, 0x29, 0x00, 0x66, 0xc5, 0xb7, 0x5e, 0x56, 0x7c, 0xad,
	0x0d, 0xb4, 0x9e, 0x2d, 0xf6, 0x88, 0xd7, 0x47, 0x72, 0x62, 0xfd, 0xb5, 0x86, 0xf4, 0x69, 0x6a,
	0xe8, 0xeb, 0x87, 0x05, 0xbb, 0xf7, 0xce, 0xb1, 0x5b, 0x4e, 0x2a, 0xb7, 0xfc, 0x50, 0x58, 0x2e,
	0xeb, 0x74, 0xad, 0xaa, 0x4e, 0xcf, 0xb1, 0xff, 0x57, 0xe8, 0xf2, 0x43, 0x7e, 0x19, 0x0c, 0xb7,
	0x60, 0xb1, 0xef, 0x65, 0x37, 0xb8, 0xac, 0x7e, 0xc6, 0x79, 0x08, 0x28, 0xf5, 0x33, 0xae, 0x8a,
	0x01, 0x26, 0x6e, 0xfd, 0xa7, 0x8e, 0x8c, 0x72, 0x8d, 0xa1, 0xaf, 0x3f, 0x29, 0xb4, 0x3f, 0x9f,
	0x96, 0x78, 0xa0, 0x6a, 0x6a, 0xb9, 0x1f, 0xfe, 0x90, 0x1d, 0xf3, 0xae, 0xa8, 0xb6, 0x42, 0x97,
	0x12, 0x53, 0x07, 0x0c, 0x62, 0xd0, 0x67, 0x9f, 0xda, 0x81, 0x68, 0xef, 0xeb, 0x12, 0xfa, 0x24,
	0x15, 0x6b, 0x30, 0x86, 0x3e, 0x3e, 0x17, 0x07, 0xa7, 0x35, 0xa6, 0xc5, 0xc1, 0x75, 0x5c, 0xfc,
	0x89, 0xad, 0x8a, 0x0f, 0x3c, 0xa7, 0x70, 0x00, 0x94, 0x54, 0x21, 0xfe, 0xd0, 0x73, 0xd4, 0x73,
	0xdd, 0x52, 0xe5, 0xb9, 0xee, 0x0e, 0x42, 0x01, 0x89, 0x82, 0x37, 0xdc, 0xe0, 0x96, 0x54, 0x29,
	0xa9, 0x58, 0x83, 0x31, 0x33, 0xf8, 0xb3, 0xbf, 0x74, 0x51, 0x5b, 0x78, 0x4d, 0xff, 0x3d, 0x5a,
	0x1e, 0x92, 0xa8, 0x0f, 0x47, 0x2f, 0xe6, 0x20, 0x7d, 0x6b, 0xde, 0x75, 0x27, 0xcf, 0xf6, 0xcd,
	0xed, 0x05, 0xaf, 0x45, 0x75, 0x0f, 0xe9, 0x31, 0x94, 0x26, 0xbe, 0x08, 0xbf, 0x8c, 0xd2, 0x6f,
	0x97, 0x4c, 0xaf, 0xba, 0x9e, 0xdc, 0xfc, 0x78, 0x21, 0xe1, 0x8a, 0x05, 0x85, 0x8f, 0xce, 0x5f,
	0xb0, 0x78, 0x0c, 0x99, 0xb3, 0xe0, 0xf4, 0xc9, 0xe1, 0x6b, 0x86, 0x8b, 0xac, 0x8a, 0xc1, 0x82,
	0xfa, 0xad, 0x92, 0xc9, 0xb3, 0x77, 0x45, 0x9b, 0x5b, 0x73, 0xc4, 0x32, 0xed, 0x62, 0x87, 0xa0,
	0xcb, 0x39, 0x6f, 0x87, 0xa6, 0xaf, 0x81, 0xaa, 0x76, 0x68, 0xf6, 0x5a, 0xe6, 0x6b, 0xd4, 0x15,
	0x0e, 0x63, 0x8b, 0x94, 0xda, 0x3f, 0x7b, 0xd0, 0x2f, 0xb5, 0xbf, 0xec, 0x58, 0x2a, 0xbd, 0x53,
	0xa9, 0x7d, 0xf6, 0x48, 0x7a, 0x8e, 0x77, 0x8a, 0xda, 0xe5, 0x66, 0x83, 0x83, 0xe6, 0x6e, 0xf6,
	0xec, 0x99, 0xf3, 0x9c, 0xcd, 0x2e, 0x3b, 0x26, 0x0e, 0xd0, 0x4a, 0xbe, 0x1d, 0x00, 0x8a, 0xfa,
	0xf6, 0xdc, 0x33, 0x99, 0x58, 0x68, 0x67, 0xd1, 0xc3, 0x9b, 0xfe, 0x1b, 0xb1, 0x08, 0xc0, 0x2f,
	0x60, 0x8a, 0x35, 0x17, 0xb3, 0x4e, 0x36, 0x6f, 0x2c, 0x80, 0x6b, 0x7a, 0x1f, 0xad, 0x49, 0xd5,
	0xa2, 0xe0, 0xdf, 0x5c, 0x00, 0x58, 0x4e, 0x36, 0x6f, 0x2d, 0x04, 0x3f, 0xba, 0x8b, 0xd6, 0xd5,
	0x1d, 0xe1, 0x3e, 0xda, 0x3b, 0xd7, 0xc7, 0x45, 0x37, 0xdd, 0x5e, 0x44, 0x36, 0xf3, 0x94, 0x8b,
	0xd6, 0x95, 0xe8, 0x3a, 0x67, 0xb5, 0x8a, 0xae, 0xa5, 0x74, 0xb5, 0xca, 0x9e, 0xe4, 0x15, 0x5a,
	0xe5, 0xd5, 0x92, 0x01, 0x0d, 0xcf, 0xc6, 0xbd, 0x85, 0x21, 0xe9, 0xa4, 0x74, 0xad, 0x2a, 0xf8,
	0x3a, 0x58, 0xfb, 0xfb, 0xd9, 0xd5, 0xda, 0xb7, 0x67, 0x57, 0x6b, 0xff, 0x3a, 0xbb, 0x5a, 0xfb,
	0x6d, 0xfd, 0xf5, 0xfe, 0x71, 0x0b, 0xfe, 0x3a, 0xfd, 0xd1, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x4b, 0x61, 0xd2, 0xdb, 0x8d, 0x1d, 0x00, 0x00,
}
