// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gaea.proto

package v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// 通过参数获取一条记录的信息
type GetConfigReq struct {
	// team
	Team int64 `protobuf:"varint,1,opt,name=team,proto3" json:"team,omitempty" form:"team"`
	// 索引名称
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty" form:"keyword"`
	// id
	Id                   int64    `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty" form:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigReq) Reset()         { *m = GetConfigReq{} }
func (m *GetConfigReq) String() string { return proto.CompactTextString(m) }
func (*GetConfigReq) ProtoMessage()    {}
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{0}
}
func (m *GetConfigReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetConfigReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigReq.Merge(dst, src)
}
func (m *GetConfigReq) XXX_Size() int {
	return m.Size()
}
func (m *GetConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigReq proto.InternalMessageInfo

func (m *GetConfigReq) GetTeam() int64 {
	if m != nil {
		return m.Team
	}
	return 0
}

func (m *GetConfigReq) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *GetConfigReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetConfigResp struct {
	// team
	Team int64 `protobuf:"varint,1,opt,name=team,proto3" json:"team"`
	// 索引名称
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword"`
	// 配置值
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value"`
	// 配置解释
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	// 创建时间
	Ctime string `protobuf:"bytes,5,opt,name=ctime,proto3" json:"ctime"`
	// 最近更新时间
	Mtime string `protobuf:"bytes,6,opt,name=mtime,proto3" json:"mtime"`
	// 状态
	Status int64 `protobuf:"varint,7,opt,name=status,proto3" json:"status"`
	// id
	Id                   int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigResp) Reset()         { *m = GetConfigResp{} }
func (m *GetConfigResp) String() string { return proto.CompactTextString(m) }
func (*GetConfigResp) ProtoMessage()    {}
func (*GetConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{1}
}
func (m *GetConfigResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetConfigResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigResp.Merge(dst, src)
}
func (m *GetConfigResp) XXX_Size() int {
	return m.Size()
}
func (m *GetConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigResp proto.InternalMessageInfo

func (m *GetConfigResp) GetTeam() int64 {
	if m != nil {
		return m.Team
	}
	return 0
}

func (m *GetConfigResp) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *GetConfigResp) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *GetConfigResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetConfigResp) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *GetConfigResp) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *GetConfigResp) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetConfigResp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 设置某个key的信息
type SetConfigReq struct {
	// team
	Team int64 `protobuf:"varint,1,opt,name=team,proto3" json:"team,omitempty" form:"team"`
	// 索引名称
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty" form:"keyword" validate:"required"`
	// 配置值
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty" form:"value" validate:"required"`
	// 配置解释
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" form:"name"`
	// 编辑时id
	Id int64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty" form:"id"`
	// 状态
	Status               int64    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty" form:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConfigReq) Reset()         { *m = SetConfigReq{} }
func (m *SetConfigReq) String() string { return proto.CompactTextString(m) }
func (*SetConfigReq) ProtoMessage()    {}
func (*SetConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{2}
}
func (m *SetConfigReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetConfigReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SetConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigReq.Merge(dst, src)
}
func (m *SetConfigReq) XXX_Size() int {
	return m.Size()
}
func (m *SetConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigReq proto.InternalMessageInfo

func (m *SetConfigReq) GetTeam() int64 {
	if m != nil {
		return m.Team
	}
	return 0
}

func (m *SetConfigReq) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *SetConfigReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *SetConfigReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetConfigReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SetConfigReq) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type SetConfigResp struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConfigResp) Reset()         { *m = SetConfigResp{} }
func (m *SetConfigResp) String() string { return proto.CompactTextString(m) }
func (*SetConfigResp) ProtoMessage()    {}
func (*SetConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{3}
}
func (m *SetConfigResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetConfigResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SetConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigResp.Merge(dst, src)
}
func (m *SetConfigResp) XXX_Size() int {
	return m.Size()
}
func (m *SetConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigResp proto.InternalMessageInfo

func (m *SetConfigResp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 管理后台通过参数获取列表
type ParamsConfigReq struct {
	Team    int64  `protobuf:"varint,1,opt,name=team,proto3" json:"team,omitempty" form:"team"`
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty" form:"keyword"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" form:"name"`
	Status  int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty" form:"status"`
	Page    int64  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty" form:"page" validate:"required"`
	// 页量
	PageSize int64 `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" form:"page_size" validate:"required"`
	// id
	Id                   int64    `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty" form:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamsConfigReq) Reset()         { *m = ParamsConfigReq{} }
func (m *ParamsConfigReq) String() string { return proto.CompactTextString(m) }
func (*ParamsConfigReq) ProtoMessage()    {}
func (*ParamsConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{4}
}
func (m *ParamsConfigReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ParamsConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ParamsConfigReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ParamsConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamsConfigReq.Merge(dst, src)
}
func (m *ParamsConfigReq) XXX_Size() int {
	return m.Size()
}
func (m *ParamsConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamsConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_ParamsConfigReq proto.InternalMessageInfo

func (m *ParamsConfigReq) GetTeam() int64 {
	if m != nil {
		return m.Team
	}
	return 0
}

func (m *ParamsConfigReq) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *ParamsConfigReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ParamsConfigReq) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ParamsConfigReq) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ParamsConfigReq) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ParamsConfigReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ParamsConfigResp struct {
	List []*List `protobuf:"bytes,1,rep,name=list" json:"list"`
	// 记录总数
	TotalNum             int64    `protobuf:"varint,2,opt,name=total_num,json=totalNum,proto3" json:"total_num"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamsConfigResp) Reset()         { *m = ParamsConfigResp{} }
func (m *ParamsConfigResp) String() string { return proto.CompactTextString(m) }
func (*ParamsConfigResp) ProtoMessage()    {}
func (*ParamsConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{5}
}
func (m *ParamsConfigResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ParamsConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ParamsConfigResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ParamsConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamsConfigResp.Merge(dst, src)
}
func (m *ParamsConfigResp) XXX_Size() int {
	return m.Size()
}
func (m *ParamsConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamsConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_ParamsConfigResp proto.InternalMessageInfo

func (m *ParamsConfigResp) GetList() []*List {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ParamsConfigResp) GetTotalNum() int64 {
	if m != nil {
		return m.TotalNum
	}
	return 0
}

type TeamConfigReq struct {
	// team
	Team string `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty" form:"team" validate:"required"`
	// 页码 从1开始
	Page int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty" form:"page" validate:"required"`
	// 页量
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" form:"page_size" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamConfigReq) Reset()         { *m = TeamConfigReq{} }
func (m *TeamConfigReq) String() string { return proto.CompactTextString(m) }
func (*TeamConfigReq) ProtoMessage()    {}
func (*TeamConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{6}
}
func (m *TeamConfigReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TeamConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TeamConfigReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TeamConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamConfigReq.Merge(dst, src)
}
func (m *TeamConfigReq) XXX_Size() int {
	return m.Size()
}
func (m *TeamConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_TeamConfigReq proto.InternalMessageInfo

func (m *TeamConfigReq) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *TeamConfigReq) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *TeamConfigReq) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type TeamConfigResp struct {
	// 数据列表
	List []*List `protobuf:"bytes,1,rep,name=list" json:"list"`
	// 记录总数
	TotalNum             int64    `protobuf:"varint,2,opt,name=total_num,json=totalNum,proto3" json:"total_num"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamConfigResp) Reset()         { *m = TeamConfigResp{} }
func (m *TeamConfigResp) String() string { return proto.CompactTextString(m) }
func (*TeamConfigResp) ProtoMessage()    {}
func (*TeamConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{7}
}
func (m *TeamConfigResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TeamConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TeamConfigResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TeamConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamConfigResp.Merge(dst, src)
}
func (m *TeamConfigResp) XXX_Size() int {
	return m.Size()
}
func (m *TeamConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_TeamConfigResp proto.InternalMessageInfo

func (m *TeamConfigResp) GetList() []*List {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *TeamConfigResp) GetTotalNum() int64 {
	if m != nil {
		return m.TotalNum
	}
	return 0
}

type GetConfigsReq struct {
	// 索引名称
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty" form:"keyword" validate:"required"`
	// 页码
	Page int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty" form:"page" validate:"required"`
	// 页量
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" form:"page_size" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigsReq) Reset()         { *m = GetConfigsReq{} }
func (m *GetConfigsReq) String() string { return proto.CompactTextString(m) }
func (*GetConfigsReq) ProtoMessage()    {}
func (*GetConfigsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{8}
}
func (m *GetConfigsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetConfigsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetConfigsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetConfigsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigsReq.Merge(dst, src)
}
func (m *GetConfigsReq) XXX_Size() int {
	return m.Size()
}
func (m *GetConfigsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigsReq proto.InternalMessageInfo

func (m *GetConfigsReq) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *GetConfigsReq) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetConfigsReq) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type GetConfigsResp struct {
	// 数据列表
	List []*List `protobuf:"bytes,1,rep,name=list" json:"list"`
	// 记录总数
	TotalNum             int64    `protobuf:"varint,2,opt,name=total_num,json=totalNum,proto3" json:"total_num"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigsResp) Reset()         { *m = GetConfigsResp{} }
func (m *GetConfigsResp) String() string { return proto.CompactTextString(m) }
func (*GetConfigsResp) ProtoMessage()    {}
func (*GetConfigsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{9}
}
func (m *GetConfigsResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetConfigsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetConfigsResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetConfigsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigsResp.Merge(dst, src)
}
func (m *GetConfigsResp) XXX_Size() int {
	return m.Size()
}
func (m *GetConfigsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigsResp proto.InternalMessageInfo

func (m *GetConfigsResp) GetList() []*List {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *GetConfigsResp) GetTotalNum() int64 {
	if m != nil {
		return m.TotalNum
	}
	return 0
}

type List struct {
	// Id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// team
	Team int64 `protobuf:"varint,2,opt,name=team,proto3" json:"team"`
	// 索引名称
	Keyword string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword"`
	// 配置值
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value"`
	// 配置解释
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	// 创建时间
	Ctime string `protobuf:"bytes,6,opt,name=ctime,proto3" json:"ctime"`
	// 最近更新时间
	Mtime string `protobuf:"bytes,7,opt,name=mtime,proto3" json:"mtime"`
	// 状态
	Status               int64    `protobuf:"varint,8,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *List) Reset()         { *m = List{} }
func (m *List) String() string { return proto.CompactTextString(m) }
func (*List) ProtoMessage()    {}
func (*List) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{10}
}
func (m *List) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_List.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List.Merge(dst, src)
}
func (m *List) XXX_Size() int {
	return m.Size()
}
func (m *List) XXX_DiscardUnknown() {
	xxx_messageInfo_List.DiscardUnknown(m)
}

var xxx_messageInfo_List proto.InternalMessageInfo

func (m *List) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *List) GetTeam() int64 {
	if m != nil {
		return m.Team
	}
	return 0
}

func (m *List) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *List) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *List) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *List) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *List) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type TeamsConfigReq struct {
	// team
	Team                 []int64  `protobuf:"varint,1,rep,packed,name=team" json:"team,omitempty" form:"team" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamsConfigReq) Reset()         { *m = TeamsConfigReq{} }
func (m *TeamsConfigReq) String() string { return proto.CompactTextString(m) }
func (*TeamsConfigReq) ProtoMessage()    {}
func (*TeamsConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{11}
}
func (m *TeamsConfigReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TeamsConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TeamsConfigReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TeamsConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamsConfigReq.Merge(dst, src)
}
func (m *TeamsConfigReq) XXX_Size() int {
	return m.Size()
}
func (m *TeamsConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamsConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_TeamsConfigReq proto.InternalMessageInfo

func (m *TeamsConfigReq) GetTeam() []int64 {
	if m != nil {
		return m.Team
	}
	return nil
}

type TeamsConfigResp struct {
	List                 string   `protobuf:"bytes,1,opt,name=list,proto3" json:"list"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamsConfigResp) Reset()         { *m = TeamsConfigResp{} }
func (m *TeamsConfigResp) String() string { return proto.CompactTextString(m) }
func (*TeamsConfigResp) ProtoMessage()    {}
func (*TeamsConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_gaea_50d23660558adc4f, []int{12}
}
func (m *TeamsConfigResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TeamsConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TeamsConfigResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TeamsConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamsConfigResp.Merge(dst, src)
}
func (m *TeamsConfigResp) XXX_Size() int {
	return m.Size()
}
func (m *TeamsConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamsConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_TeamsConfigResp proto.InternalMessageInfo

func (m *TeamsConfigResp) GetList() string {
	if m != nil {
		return m.List
	}
	return ""
}

func init() {
	proto.RegisterType((*GetConfigReq)(nil), "live.liveadmin.v1.GetConfigReq")
	proto.RegisterType((*GetConfigResp)(nil), "live.liveadmin.v1.GetConfigResp")
	proto.RegisterType((*SetConfigReq)(nil), "live.liveadmin.v1.SetConfigReq")
	proto.RegisterType((*SetConfigResp)(nil), "live.liveadmin.v1.SetConfigResp")
	proto.RegisterType((*ParamsConfigReq)(nil), "live.liveadmin.v1.ParamsConfigReq")
	proto.RegisterType((*ParamsConfigResp)(nil), "live.liveadmin.v1.ParamsConfigResp")
	proto.RegisterType((*TeamConfigReq)(nil), "live.liveadmin.v1.TeamConfigReq")
	proto.RegisterType((*TeamConfigResp)(nil), "live.liveadmin.v1.TeamConfigResp")
	proto.RegisterType((*GetConfigsReq)(nil), "live.liveadmin.v1.GetConfigsReq")
	proto.RegisterType((*GetConfigsResp)(nil), "live.liveadmin.v1.GetConfigsResp")
	proto.RegisterType((*List)(nil), "live.liveadmin.v1.List")
	proto.RegisterType((*TeamsConfigReq)(nil), "live.liveadmin.v1.TeamsConfigReq")
	proto.RegisterType((*TeamsConfigResp)(nil), "live.liveadmin.v1.TeamsConfigResp")
}
func (m *GetConfigReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetConfigReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Team != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Team))
	}
	if len(m.Keyword) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Keyword)))
		i += copy(dAtA[i:], m.Keyword)
	}
	if m.Id != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetConfigResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetConfigResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Team != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Team))
	}
	if len(m.Keyword) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Keyword)))
		i += copy(dAtA[i:], m.Keyword)
	}
	if len(m.Value) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Value)))
		i += copy(dAtA[i:], m.Value)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Ctime) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Ctime)))
		i += copy(dAtA[i:], m.Ctime)
	}
	if len(m.Mtime) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Mtime)))
		i += copy(dAtA[i:], m.Mtime)
	}
	if m.Status != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Status))
	}
	if m.Id != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SetConfigReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetConfigReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Team != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Team))
	}
	if len(m.Keyword) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Keyword)))
		i += copy(dAtA[i:], m.Keyword)
	}
	if len(m.Value) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Value)))
		i += copy(dAtA[i:], m.Value)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.Id != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Id))
	}
	if m.Status != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SetConfigResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetConfigResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ParamsConfigReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ParamsConfigReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Team != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Team))
	}
	if len(m.Keyword) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Keyword)))
		i += copy(dAtA[i:], m.Keyword)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.Status != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Status))
	}
	if m.Page != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Page))
	}
	if m.PageSize != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.PageSize))
	}
	if m.Id != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ParamsConfigResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ParamsConfigResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0xa
			i++
			i = encodeVarintGaea(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.TotalNum != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.TotalNum))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TeamConfigReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TeamConfigReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Team) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Team)))
		i += copy(dAtA[i:], m.Team)
	}
	if m.Page != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Page))
	}
	if m.PageSize != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TeamConfigResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TeamConfigResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0xa
			i++
			i = encodeVarintGaea(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.TotalNum != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.TotalNum))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetConfigsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetConfigsReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Keyword) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Keyword)))
		i += copy(dAtA[i:], m.Keyword)
	}
	if m.Page != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Page))
	}
	if m.PageSize != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetConfigsResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetConfigsResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, msg := range m.List {
			dAtA[i] = 0xa
			i++
			i = encodeVarintGaea(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.TotalNum != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.TotalNum))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *List) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *List) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Id))
	}
	if m.Team != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Team))
	}
	if len(m.Keyword) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Keyword)))
		i += copy(dAtA[i:], m.Keyword)
	}
	if len(m.Value) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Value)))
		i += copy(dAtA[i:], m.Value)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Ctime) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Ctime)))
		i += copy(dAtA[i:], m.Ctime)
	}
	if len(m.Mtime) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.Mtime)))
		i += copy(dAtA[i:], m.Mtime)
	}
	if m.Status != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintGaea(dAtA, i, uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TeamsConfigReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TeamsConfigReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Team) > 0 {
		dAtA2 := make([]byte, len(m.Team)*10)
		var j1 int
		for _, num1 := range m.Team {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		dAtA[i] = 0xa
		i++
		i = encodeVarintGaea(dAtA, i, uint64(j1))
		i += copy(dAtA[i:], dAtA2[:j1])
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TeamsConfigResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TeamsConfigResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.List) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGaea(dAtA, i, uint64(len(m.List)))
		i += copy(dAtA[i:], m.List)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintGaea(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *GetConfigReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Team != 0 {
		n += 1 + sovGaea(uint64(m.Team))
	}
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovGaea(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetConfigResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Team != 0 {
		n += 1 + sovGaea(uint64(m.Team))
	}
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Ctime)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Mtime)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovGaea(uint64(m.Status))
	}
	if m.Id != 0 {
		n += 1 + sovGaea(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetConfigReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Team != 0 {
		n += 1 + sovGaea(uint64(m.Team))
	}
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovGaea(uint64(m.Id))
	}
	if m.Status != 0 {
		n += 1 + sovGaea(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetConfigResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovGaea(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ParamsConfigReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Team != 0 {
		n += 1 + sovGaea(uint64(m.Team))
	}
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovGaea(uint64(m.Status))
	}
	if m.Page != 0 {
		n += 1 + sovGaea(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovGaea(uint64(m.PageSize))
	}
	if m.Id != 0 {
		n += 1 + sovGaea(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ParamsConfigResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovGaea(uint64(l))
		}
	}
	if m.TotalNum != 0 {
		n += 1 + sovGaea(uint64(m.TotalNum))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TeamConfigReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Team)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovGaea(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovGaea(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TeamConfigResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovGaea(uint64(l))
		}
	}
	if m.TotalNum != 0 {
		n += 1 + sovGaea(uint64(m.TotalNum))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetConfigsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovGaea(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovGaea(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetConfigsResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovGaea(uint64(l))
		}
	}
	if m.TotalNum != 0 {
		n += 1 + sovGaea(uint64(m.TotalNum))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *List) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovGaea(uint64(m.Id))
	}
	if m.Team != 0 {
		n += 1 + sovGaea(uint64(m.Team))
	}
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Ctime)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	l = len(m.Mtime)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovGaea(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TeamsConfigReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Team) > 0 {
		l = 0
		for _, e := range m.Team {
			l += sovGaea(uint64(e))
		}
		n += 1 + sovGaea(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TeamsConfigResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.List)
	if l > 0 {
		n += 1 + l + sovGaea(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovGaea(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozGaea(x uint64) (n int) {
	return sovGaea(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetConfigReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetConfigReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetConfigReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			m.Team = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Team |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetConfigResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetConfigResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetConfigResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			m.Team = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Team |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ctime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mtime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mtime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetConfigReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetConfigReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetConfigReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			m.Team = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Team |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetConfigResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetConfigResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetConfigResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ParamsConfigReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ParamsConfigReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ParamsConfigReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			m.Team = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Team |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ParamsConfigResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ParamsConfigResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ParamsConfigResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &List{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalNum", wireType)
			}
			m.TotalNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalNum |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TeamConfigReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TeamConfigReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TeamConfigReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Team = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TeamConfigResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TeamConfigResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TeamConfigResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &List{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalNum", wireType)
			}
			m.TotalNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalNum |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetConfigsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetConfigsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetConfigsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetConfigsResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetConfigsResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetConfigsResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &List{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalNum", wireType)
			}
			m.TotalNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalNum |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *List) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: List: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: List: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
			m.Team = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Team |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ctime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mtime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mtime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TeamsConfigReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TeamsConfigReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TeamsConfigReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGaea
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Team = append(m.Team, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGaea
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthGaea
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Team) == 0 {
					m.Team = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGaea
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Team = append(m.Team, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Team", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TeamsConfigResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TeamsConfigResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TeamsConfigResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGaea
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGaea(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGaea
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGaea(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGaea
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGaea
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthGaea
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowGaea
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipGaea(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthGaea = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGaea   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("gaea.proto", fileDescriptor_gaea_50d23660558adc4f) }

var fileDescriptor_gaea_50d23660558adc4f = []byte{
	// 830 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0x97, 0xff, 0xe4, 0xdf, 0xb4, 0xe9, 0x9f, 0x01, 0x4a, 0x14, 0x41, 0x27, 0x4c, 0x0a, 0x04,
	0x04, 0xa9, 0x5a, 0x84, 0x2a, 0xf5, 0x84, 0x82, 0x10, 0x42, 0x42, 0x08, 0x39, 0x9c, 0x2a, 0x55,
	0xc1, 0x69, 0xa6, 0xc1, 0x22, 0x8e, 0xdd, 0x8c, 0x1d, 0xd4, 0x9e, 0x38, 0x72, 0xe5, 0x1b, 0xf0,
	0x39, 0xf8, 0x04, 0x3d, 0xee, 0x6a, 0xef, 0xd6, 0xaa, 0xc7, 0x1c, 0xfd, 0x09, 0x56, 0xf3, 0xc6,
	0x89, 0xed, 0xd4, 0x89, 0xbb, 0x5d, 0x6d, 0xb5, 0x17, 0x8f, 0xe7, 0xcd, 0xef, 0xbd, 0x79, 0xef,
	0xf7, 0x66, 0xde, 0x1b, 0x84, 0x86, 0x26, 0x33, 0xdb, 0xee, 0xc4, 0xf1, 0x1c, 0xbc, 0x3b, 0xb2,
	0xa6, 0xac, 0x2d, 0x3e, 0xe6, 0xc0, 0xb6, 0xc6, 0xed, 0xe9, 0x51, 0xfd, 0xeb, 0xa1, 0xe5, 0xfd,
	0xe1, 0xf7, 0xdb, 0x17, 0x8e, 0x7d, 0x38, 0x74, 0x86, 0xce, 0x21, 0x20, 0xfb, 0xfe, 0x25, 0xcc,
	0x60, 0x02, 0x7f, 0xd2, 0x02, 0xfd, 0x5b, 0x41, 0x9b, 0x3f, 0x32, 0xef, 0x7b, 0x67, 0x7c, 0x69,
	0x0d, 0x0d, 0x76, 0x85, 0x9b, 0x48, 0xf7, 0x98, 0x69, 0xd7, 0x94, 0x86, 0xd2, 0xd2, 0x3a, 0xdb,
	0x61, 0x40, 0x36, 0x2e, 0x9d, 0x89, 0x7d, 0x4a, 0x85, 0x94, 0x1a, 0xb0, 0x88, 0xbf, 0x42, 0xa5,
	0x3f, 0xd9, 0xf5, 0x5f, 0xce, 0x64, 0x50, 0x53, 0x1b, 0x4a, 0xab, 0xd2, 0xc1, 0x61, 0x40, 0xb6,
	0x24, 0x2e, 0x5a, 0xa0, 0xc6, 0x1c, 0x82, 0x3f, 0x46, 0xaa, 0x35, 0xa8, 0x69, 0x60, 0xb0, 0x1a,
	0x06, 0xa4, 0x22, 0x81, 0xd6, 0x80, 0x1a, 0xaa, 0x35, 0xa0, 0xff, 0xaa, 0xa8, 0x9a, 0x70, 0x81,
	0xbb, 0xf8, 0xa3, 0x94, 0x0f, 0xe5, 0x59, 0x40, 0x60, 0x1e, 0x6d, 0xfe, 0xe9, 0xf2, 0xe6, 0x1b,
	0xb3, 0x80, 0xcc, 0x45, 0xf1, 0xae, 0x04, 0x15, 0xa6, 0xe6, 0xc8, 0x67, 0xb0, 0x71, 0xa5, 0x53,
	0x99, 0x05, 0x44, 0x0a, 0x0c, 0x39, 0x88, 0x5d, 0xc6, 0xa6, 0xcd, 0x6a, 0x3a, 0xac, 0xc3, 0x2e,
	0x62, 0x6e, 0xc0, 0x57, 0xa8, 0x5f, 0x78, 0x96, 0xcd, 0x6a, 0x85, 0x58, 0x1d, 0x04, 0x86, 0x1c,
	0x04, 0xc0, 0x06, 0x40, 0x31, 0x06, 0xd8, 0x12, 0x00, 0x03, 0xa6, 0xa8, 0xc8, 0x3d, 0xd3, 0xf3,
	0x79, 0xad, 0x04, 0x71, 0xa0, 0x59, 0x40, 0x22, 0x89, 0x11, 0x8d, 0x78, 0x0f, 0xa8, 0x29, 0xc3,
	0x7a, 0x71, 0x16, 0x10, 0xd5, 0x1a, 0x00, 0x27, 0xff, 0xa9, 0x68, 0xb3, 0xfb, 0xda, 0x69, 0xf9,
	0x6e, 0x99, 0x99, 0xcf, 0xc2, 0x80, 0xd0, 0x74, 0x5a, 0x1a, 0x53, 0x73, 0x64, 0x0d, 0x4c, 0x8f,
	0x9d, 0xd2, 0x09, 0xbb, 0xf2, 0xad, 0x09, 0x4b, 0xa6, 0xea, 0x34, 0x4d, 0xda, 0x41, 0x18, 0x90,
	0x86, 0xd4, 0x07, 0x71, 0xb6, 0x76, 0xc4, 0x67, 0x33, 0xc5, 0x67, 0xc2, 0x45, 0x21, 0xa5, 0x11,
	0xad, 0xf2, 0x2c, 0x14, 0x56, 0x9c, 0x05, 0xfc, 0xc5, 0x82, 0xb3, 0x22, 0x40, 0x76, 0xc3, 0x80,
	0x54, 0x25, 0x44, 0xca, 0xe9, 0x9c, 0x3a, 0xfa, 0x39, 0xaa, 0x76, 0x53, 0xa7, 0x46, 0x72, 0xa9,
	0xdc, 0xe3, 0xf2, 0x85, 0x8a, 0xb6, 0x7f, 0x35, 0x27, 0xa6, 0xcd, 0xdf, 0xea, 0x29, 0x9f, 0x87,
	0xaf, 0xad, 0x0b, 0x3f, 0x8e, 0x4f, 0xcf, 0x89, 0x0f, 0x9f, 0x20, 0xdd, 0x35, 0x87, 0x2c, 0xe2,
	0xaa, 0x19, 0x06, 0x84, 0x48, 0xa0, 0x90, 0x66, 0x27, 0x02, 0x14, 0xf0, 0x0f, 0xa8, 0x22, 0xc6,
	0x1e, 0xb7, 0x6e, 0x58, 0x44, 0x63, 0x2b, 0x0c, 0xc8, 0x41, 0xac, 0x0d, 0x4b, 0xd9, 0x26, 0xca,
	0x62, 0xbd, 0x6b, 0xdd, 0xcc, 0x33, 0x55, 0x5a, 0x75, 0x6b, 0x7d, 0xb4, 0x93, 0x26, 0x95, 0xbb,
	0xf8, 0x5b, 0xa4, 0x8f, 0x2c, 0xee, 0xd5, 0x94, 0x86, 0xd6, 0xda, 0x38, 0xfe, 0xb0, 0x7d, 0xaf,
	0x3a, 0xb5, 0x7f, 0xb6, 0xb8, 0x27, 0xaf, 0x9a, 0x00, 0x1a, 0xf0, 0xc5, 0x5f, 0xa2, 0x8a, 0xe7,
	0x78, 0xe6, 0xa8, 0x37, 0xf6, 0x6d, 0x60, 0x5a, 0xeb, 0x54, 0x67, 0x01, 0x89, 0x85, 0x46, 0x19,
	0x7e, 0x7f, 0xf1, 0x6d, 0x7a, 0xab, 0xa0, 0xea, 0x6f, 0xcc, 0xb4, 0xe3, 0x54, 0x9e, 0x24, 0x52,
	0x59, 0x49, 0xf2, 0x04, 0xa9, 0xcc, 0xe6, 0x09, 0xd2, 0x3b, 0x27, 0x58, 0x7d, 0x23, 0x82, 0xb5,
	0xc7, 0x12, 0x4c, 0x39, 0xda, 0x4a, 0x46, 0xf2, 0x34, 0xfc, 0x3d, 0x57, 0x12, 0xc5, 0x96, 0x0b,
	0xfe, 0x12, 0x45, 0x43, 0x79, 0x5c, 0xd1, 0x78, 0x07, 0x88, 0x4c, 0x86, 0xf4, 0x34, 0x44, 0xfe,
	0xa3, 0x22, 0x5d, 0x18, 0x59, 0x55, 0x76, 0x16, 0x4d, 0x4c, 0xcd, 0x6b, 0x62, 0xda, 0x43, 0x9a,
	0x98, 0x9e, 0xd3, 0xc4, 0x0a, 0xeb, 0x9b, 0x58, 0x31, 0xaf, 0x89, 0x95, 0x72, 0x9b, 0x58, 0x79,
	0x55, 0x13, 0xa3, 0x3f, 0xc9, 0x83, 0xcc, 0xb3, 0xee, 0xa4, 0x96, 0x3e, 0x11, 0x39, 0x77, 0x92,
	0x1e, 0xa2, 0xed, 0x94, 0x29, 0xf9, 0x18, 0x88, 0x72, 0xb9, 0x88, 0x30, 0x4e, 0xd9, 0xf1, 0xff,
	0x3a, 0xd2, 0xc5, 0x83, 0x08, 0x9f, 0xa1, 0x0f, 0x86, 0xcc, 0xeb, 0x5d, 0x80, 0x62, 0xaf, 0x7f,
	0xdd, 0x5b, 0x50, 0x98, 0x91, 0xfd, 0xe4, 0x8b, 0xa7, 0xde, 0x58, 0x0f, 0xe0, 0xae, 0xb0, 0xcd,
	0x1f, 0x6c, 0xbb, 0x9b, 0x67, 0x3b, 0xdd, 0xb5, 0x7e, 0x4f, 0xfa, 0xcd, 0x85, 0x71, 0x17, 0xca,
	0x2a, 0xa6, 0x19, 0xaa, 0x4b, 0x6d, 0xac, 0xde, 0xcc, 0xc5, 0x80, 0xf7, 0xef, 0x2d, 0xed, 0x00,
	0x27, 0x30, 0xcb, 0xb5, 0x54, 0x65, 0xad, 0x7f, 0x92, 0x83, 0xe0, 0x2e, 0x3e, 0x47, 0x7b, 0x4b,
	0xb6, 0xe7, 0xd4, 0xac, 0x65, 0x95, 0xaf, 0x32, 0xbf, 0x74, 0x8f, 0xcf, 0xd1, 0xfb, 0x19, 0xae,
	0x73, 0xbc, 0xca, 0xb3, 0x04, 0x35, 0x34, 0x0f, 0xc2, 0xdd, 0xce, 0xce, 0xed, 0xdd, 0xbe, 0xf2,
	0xec, 0x6e, 0x5f, 0x79, 0x79, 0xb7, 0xaf, 0x9c, 0xa9, 0xd3, 0xa3, 0x7e, 0x11, 0x5e, 0xc5, 0xdf,
	0xbc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x99, 0x25, 0xca, 0x10, 0x65, 0x0b, 0x00, 0x00,
}
